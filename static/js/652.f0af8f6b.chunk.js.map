{"version":3,"file":"static/js/652.f0af8f6b.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/ConditionalWrapper.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Context/FormulaDataContext.tsx","Data/Resonance.tsx","PageCharacter/CharacterSelectionModal.tsx","ReactHooks/useCharMeta.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport Artifact from '../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport ArtifactTooltip from './ArtifactTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level } = art\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <Box\r\n      component=\"img\"\r\n      className={`grad-${rarity}star`}\r\n      src={artifactSheet.slotIcons[key]}\r\n      maxWidth=\"100%\"\r\n      maxHeight=\"100%\"\r\n    />\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\r\n    </Typography>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\r\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n    </Typography>\r\n  </CardDark></ArtifactTooltip>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { Suspense } from \"react\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <ArtifactData art={art} />\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\r\n  const { slotKey, level, rarity, mainStatKey, substats } = art\r\n  const slotName = sheet?.getSlotName(slotKey)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const mainIcon = StatIcon[mainStatKey]\r\n  const mainVariant = KeyMap.getVariant(mainStatKey)\r\n  return <Box p={1}>\r\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\r\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\r\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\r\n    <Box py={1}>\r\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\r\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\r\n      </Typography>)}\r\n    </Box>\r\n\r\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\r\n  </Box>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useCharMeta from '../../ReactHooks/useCharMeta';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport CharacterCardPico from './CharacterCardPico';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  hideStats?: boolean\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  const { favorite } = useCharMeta(characterKey)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={600} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n        <IconButton sx={{ p: 0.5 }} onClick={_ => database.charMeta.set(characterKey, { favorite: !favorite })}>\r\n          {favorite ? <Favorite /> : <FavoriteBorder />}\r\n        </IconButton>\r\n      </Box>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n        {(character && dataContextObj && characterContextObj) ?\r\n          <ExistingCharacterCardContent\r\n            characterContextObj={characterContextObj}\r\n            dataContextObj={dataContextObj}\r\n            characterKey={characterKey}\r\n            onClick={onClick}\r\n            onClickHeader={onClickHeader}\r\n            isTeammateCard={isTeammateCard}\r\n            character={character}\r\n            onClickTeammate={onClickTeammate}\r\n            hideStats={hideStats}\r\n            weaponChildren={weaponChildren}\r\n            artifactChildren={artifactChildren}\r\n            characterChildren={characterChildren}\r\n          /> : <NewCharacterCardContent characterKey={characterKey} />}\r\n      </ConditionalWrapper>\r\n      {footer}\r\n    </CardLight>\r\n\r\n  </Suspense>\r\n}\r\n\r\ntype ExistingCharacterCardContentProps = {\r\n  characterContextObj: CharacterContextObj\r\n  dataContextObj: dataContextObj\r\n  characterKey: CharacterKey\r\n  onClick?: (characterKey: CharacterKey) => void\r\n  onClickHeader?: (characterKey: CharacterKey) => void\r\n  isTeammateCard?: boolean\r\n  character: ICachedCharacter\r\n  onClickTeammate?: (characterKey: CharacterKey) => void\r\n  hideStats?: boolean\r\n  weaponChildren?: Displayable\r\n  artifactChildren?: Displayable\r\n  characterChildren?: Displayable\r\n}\r\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\r\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\r\n      <HeaderContent />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n      <Artifacts />\r\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n        <Grid item xs={1} height=\"100%\">\r\n          <WeaponCardPico weaponId={character.equippedWeapon} />\r\n        </Grid>\r\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n      </Grid>}\r\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n      {!isTeammateCard && !hideStats && <Stats />}\r\n      {weaponChildren}\r\n      {artifactChildren}\r\n      {characterChildren}\r\n    </CardContent>\r\n  </DataContext.Provider></CharacterContext.Provider>\r\n}\r\n\r\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\r\n  return < >\r\n    <Header characterKey={characterKey} >\r\n      <HeaderContentNew characterKey={characterKey} />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\r\n    </CardContent>\r\n  </>\r\n}\r\n\r\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  if (!characterSheet) return null\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\n\r\nfunction HeaderContent() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item>\r\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n      </Grid>\r\n    </Grid>\r\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n\r\n  </>\r\n}\r\n\r\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, database, gender])\r\n\r\n  if (!characterSheet) return null\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterSheet.elementKey} sx={{ opacity: 0.85 }} />\r\n    <Box mt={1}>\r\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\r\n    </Box>\r\n    <Typography mt={1.5} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n  </>\r\n}\r\n\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { gender } = useDBMeta()\r\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            <Box\r\n              component=\"img\"\r\n              src={teammateSheet.thumbImgSide}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\r\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\r\n        </Typography>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, Divider, List, ListItem, ListProps, Palette, PaletteColor, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React, { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { FormulaDataContext } from \"../Context/FormulaDataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport { Variant } from \"../Formula/type\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { allAmpReactions, AmpReactionKey } from \"../Types/consts\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport AmpReactionModeText from \"./AmpReactionModeText\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nexport function BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onClick = useCallback(() => setFormulaData(data, node), [setFormulaData, data, node])\r\n\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue !== undefined) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip onClick={onClick} title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>\r\n    {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-flex\", gap: 1, mr: 1 }}>\r\n      <Box><AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} /></Box>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </Box>}\r\n    <span>{fieldFormulaText}</span>\r\n  </Suspense></Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n      <Typography noWrap>{fieldVal}</Typography>\r\n      {formulaTextOverlay}\r\n    </Box>\r\n  </Box>\r\n}\r\nexport interface FieldDisplayListProps extends ListProps {\r\n  light?: keyof Palette,\r\n  dark?: keyof Palette,\r\n  palletOption?: keyof PaletteColor\r\n}\r\nexport const FieldDisplayList = styled(List)<FieldDisplayListProps>(({ theme, light = \"contentDark\", dark = \"contentDarker\", palletOption = \"main\" }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: (theme.palette[light] as PaletteColor)[palletOption]\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: (theme.palette[dark] as PaletteColor)[palletOption]\r\n  },\r\n}));\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton<Key extends string>({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: ButtonGroupProps & {\r\n  sortKeys: Key[]\r\n  value: Key\r\n  onChange: (value: Key) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\r\n    <ButtonGroup {...props} >\r\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n        {sortKeys.map(key =>\r\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n      </DropdownButton>\r\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n      </Button>\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Rarity } from '../Types/consts'\r\nimport ColorText from './ColoredText'\r\n\r\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <ColorText color={colored ? \"warning\" : undefined} >\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </ColorText>\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport StatIcon from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey[]) => void\r\n  value: ElementKey[]\r\n}\r\nconst elementHandler = handleMultiSelect([...allElements])\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  return <ToggleButtonGroup exclusive value={value} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{StatIcon[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[]\r\n}\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext, useCallback, useState } from \"react\";\r\nimport { NodeDisplay, UIData } from \"../Formula/uiData\";\r\nimport useBoolState from \"../ReactHooks/useBoolState\";\r\n\r\ntype FormulaDataContextObj = {\r\n  data?: UIData,\r\n  node?: NodeDisplay,\r\n  modalOpen?: boolean,\r\n  onModalOpen: () => void,\r\n  onModalClose: () => void,\r\n  setFormulaData: (data?: UIData, node?: NodeDisplay) => void\r\n}\r\nexport const FormulaDataContext = createContext({ setFormulaData: () => { }, onModalOpen: () => { }, onModalClose: () => { } } as FormulaDataContextObj);\r\n\r\nexport function FormulaDataWrapper({ children }: { children: JSX.Element }) {\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  const [[data, node], setState] = useState([undefined, undefined] as [data: UIData | undefined, node: NodeDisplay | undefined])\r\n  const setFormulaData = useCallback((data?: UIData, node?: NodeDisplay) => {\r\n    if (data && node) onOpen()\r\n    else onClose()\r\n    setState([data, node])\r\n  }, [onOpen, onClose])\r\n  return <FormulaDataContext.Provider value={{ setFormulaData, data, node, modalOpen: open, onModalOpen: onOpen, onModalClose: onClose }} >{children}</FormulaDataContext.Provider>\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\r\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\r\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\r\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\r\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// Sprawling Canopy\r\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\r\nconst condSC2ele = condReadNode(condSC2elePath)\r\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\r\nconst condSC3ele = condReadNode(condSC3elePath)\r\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, { key: \"eleMas\" }))\r\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, { key: \"eleMas\" })))\r\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, { key: \"eleMas\" })))\r\nconst sprawlingGreenery: IResonance = {\r\n  name: tr(\"SprawlingGreenery.name\"),\r\n  desc: tr(\"SprawlingGreenery.desc\"),\r\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"SprawlingGreenery.desc\"),\r\n    fields: [{ node: scBase_eleMas }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC2elePath,\r\n    value: condSC2ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond2ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc2ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC3elePath,\r\n    value: condSC3ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond3ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc3ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n  sprawlingGreenery,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    hp_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Tooltip, tooltipClasses, TooltipProps, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { ChangeEvent, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\nimport CardLight from \"../Components/Card/CardLight\";\r\nimport CharacterCard from \"../Components/Character/CharacterCard\";\r\nimport CloseButton from \"../Components/CloseButton\";\r\nimport ModalWrapper from \"../Components/ModalWrapper\";\r\nimport SortByButton from \"../Components/SortByButton\";\r\nimport SqBadge from \"../Components/SqBadge\";\r\nimport { StarsDisplay } from \"../Components/StarDisplay\";\r\nimport ElementToggle from \"../Components/ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../Components/ToggleButton/WeaponToggle\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport useCharacter from \"../ReactHooks/useCharacter\";\r\nimport useDBMeta from \"../ReactHooks/useDBMeta\";\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs, CharacterSortKey, characterSortMap } from \"../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../Util/SortByFilters\";\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\nconst sortKeys = Object.keys(characterSortMap)\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const [state, setState] = useState(() => database.displayCharacter.get())\r\n  useEffect(() => database.displayCharacter.follow((r, s) => setState(s)), [database, setState])\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n\r\n  // character favorite updater\r\n  useEffect(() => database.charMeta.followAny(s => forceUpdate()), [forceUpdate, database])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n  const deferredState = useDeferredValue(state)\r\n  const deferredDbDirty = useDeferredValue(dbDirty)\r\n  const characterKeyList = useMemo(() => {\r\n    if (!characterSheets) return []\r\n    const { element, weaponType, sortType, ascending } = deferredState\r\n    const sortByKeys = [...(newFirst ? [\"new\"] : []), ...(characterSortMap[sortType] ?? [])] as CharacterSortKey[]\r\n    return deferredDbDirty && allCharacterKeys\r\n      .filter(key => filter(database.chars.get(key), characterSheets[key]))\r\n      .filter(filterFunction({ element, weaponType, name: deferredSearchTerm }, characterFilterConfigs(database, characterSheets)))\r\n      .sort(sortFunction(sortByKeys, ascending, characterSortConfigs(database, characterSheets), [\"new\", \"favorite\"]))\r\n  }, [database, newFirst, deferredState, characterSheets, deferredDbDirty, deferredSearchTerm, filter])\r\n\r\n  if (!characterSheets) return null\r\n\r\n  const { weaponType, element, sortType, ascending } = state\r\n\r\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", alignItems: \"center\", gap: 1, flexWrap: \"wrap\" }}>\r\n        <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => database.displayCharacter.set({ weaponType })} value={weaponType} size=\"small\" />\r\n        <ElementToggle sx={{ height: \"100%\" }} onChange={element => database.displayCharacter.set({ element })} value={element} size=\"small\" />\r\n        <Box flexGrow={1}>\r\n          <TextField\r\n            autoFocus\r\n            value={searchTerm}\r\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n            label={t(\"characterName\")}\r\n            size=\"small\"\r\n            sx={{ height: \"100%\" }}\r\n            InputProps={{\r\n              sx: { height: \"100%\" }\r\n            }}\r\n          />\r\n        </Box>\r\n        <SortByButton sx={{ height: \"100%\" }}\r\n          sortKeys={sortKeys} value={sortType} onChange={sortType => database.displayCharacter.set({ sortType })}\r\n          ascending={ascending} onChangeAsc={ascending => database.displayCharacter.set({ ascending })} />\r\n        <CloseButton onClick={onHide} />\r\n      </CardContent>\r\n      <Divider />\r\n      <DataContext.Provider value={{ teamData: undefined } as any}>\r\n        <CardContent><Grid container spacing={1} columns={{ xs: 2, sm: 3, md: 4, lg: 5, }}>\r\n          {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={1} >\r\n            {/* <CharacterCard key={characterKey} hideStats characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} /> */}\r\n            <SelectionCard characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n          </Grid>)}\r\n        </Grid></CardContent>\r\n      </DataContext.Provider>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nfunction SelectionCard({ characterKey, onClick }: { characterKey: CharacterKey, onClick: () => void }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const character = useCharacter(characterKey)\r\n  const { level = 1, ascension = 0, constellation = 0 } = character ?? {}\r\n  return <CustomTooltip enterDelay={300} enterNextDelay={300} arrow placement=\"bottom\" title={\r\n    <Box sx={{ width: 300 }}>\r\n      <CharacterCard hideStats characterKey={characterKey} />\r\n    </Box>\r\n  }>\r\n    <Box>\r\n      <CardLight sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        <CardActionArea onClick={onClick}>\r\n          <Box display=\"flex\"\r\n            position=\"relative\"\r\n            className={`grad-${characterSheet?.rarity}star`}\r\n            sx={{\r\n              \"&::before\": {\r\n                content: '\"\"',\r\n                display: \"block\", position: \"absolute\",\r\n                left: 0, top: 0,\r\n                width: \"100%\", height: \"100%\",\r\n                opacity: 0.5,\r\n                backgroundImage: `url(${characterSheet?.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n              }\r\n            }}\r\n            width=\"100%\" >\r\n            <Box flexShrink={1} sx={{ maxWidth: { xs: \"33%\", lg: \"30%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n              <Box\r\n                component=\"img\"\r\n                src={characterSheet?.thumbImg}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                maxWidth={256}\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Box>\r\n            <Box flexGrow={1} sx={{ pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1} justifyContent=\"space-evenly\">\r\n              <Typography variant=\"body2\" ><SqBadge color={characterSheet?.elementKey} sx={{ opacity: 0.85, textShadow: \"0 0 5px gray\" }}>{characterSheet?.name}</SqBadge></Typography>\r\n              {character ? <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n                <Box sx={{ textShadow: \"0 0 5px gray\" }}>\r\n                  <Typography variant=\"body2\" component=\"span\" whiteSpace=\"nowrap\" >Lv. {level}</Typography>\r\n                  <Typography variant=\"body2\" component=\"span\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n                </Box>\r\n                <Typography variant=\"body2\" >C{constellation}</Typography>\r\n              </Box> : <Typography component=\"span\" variant=\"body2\" ><SqBadge>NEW</SqBadge></Typography>}\r\n              <Typography variant=\"body2\" ><StarsDisplay stars={characterSheet?.rarity ?? 1} colored /></Typography>\r\n            </Box>\r\n          </Box>\r\n        </CardActionArea>\r\n      </CardLight>\r\n    </Box>\r\n  </CustomTooltip>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\n\r\nexport default function useCharMeta(key: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [charMeta, setCharMetaState] = useState(() => database.charMeta.get(key))\r\n  useEffect(() => database.charMeta.follow(key, (k, r, dbMeta) => setCharMetaState(dbMeta)), [key, database])\r\n  useEffect(() => setCharMetaState(database.charMeta.get(key)), [database, key])\r\n  return charMeta\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { IConditionalValues } from \"../Types/sheet\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\ntype characterTeamConditional = {\r\n  type: \"teamConditional\",\r\n  teamMateKey: CharacterKey,\r\n  conditional: IConditionalValues\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n    const character = database.chars.get(characterKey)\r\n    if (!character) return\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const { statKey, value } = action\r\n        const bonusStats = deepClone(character.bonusStats)\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const { statKey } = action\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"teamConditional\": {\r\n        const { teamMateKey, conditional } = action\r\n        const teamConditional = deepClone(character.teamConditional)\r\n        teamConditional[teamMateKey] = conditional\r\n        database.chars.set(characterKey, { ...character, teamConditional })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n        const { index, charKey } = action\r\n        team[index] = charKey\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...character, ...action })\r\n  }, [characterKey, database])\r\n}\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nexport default function useMediaQueryUp() {\r\n  const theme = useTheme();\r\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n  if (xl) return \"xl\"\r\n  if (lg) return \"lg\"\r\n  if (md) return \"md\"\r\n  if (sm) return \"sm\"\r\n  return \"xs\"\r\n}\r\n","import { useContext, useDeferredValue, useEffect } from \"react\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamData | undefined> {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n\r\n  const char1DataBundle = await getCharDataBundle(database, true, mainStatAssumptionLevel,\r\n    character,\r\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\r\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n  )\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const tchar = database.chars.get(ck)\r\n    if (!tchar) return\r\n    const databundle = await getCharDataBundle(database, false, 0,\r\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\r\n      database.weapons.get(tchar.equippedWeapon)!,\r\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\n\r\nasync function getCharDataBundle(database: ArtCharDatabase, useCustom = false, mainStatAssumptionLevel: number,\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  artifacts: ICachedArtifact[] | Data,\r\n): Promise<CharBundle | undefined> {\r\n\r\n  const characterSheet = await CharacterSheet.get(character.key, database.gender)\r\n  if (!characterSheet) return\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  if (!weaponSheet) return\r\n\r\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\r\n\r\n  const weaponSheetsData = useCustom ? (() => {\r\n    // display is included in WeaponSheet.getAllDataOfType\r\n    const { display, ...restWeaponSheetData } = weaponSheet.data\r\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\r\n  })() : weaponSheet.data\r\n\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, artifactSheetsData])\r\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\r\n  const data = [\r\n    ...artifactData,\r\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\r\n    dataObjForWeapon(weapon),\r\n    sheetData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n","type SortConfig<T> = (id: T) => number | string\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortbyKeys: Keys[], ascending: boolean, configs: SortConfigs<Keys, T>, ascendingBypass: Keys[] = []) {\r\n  return (a: T, b: T): number => {\r\n    for (const sortby of sortbyKeys) {\r\n      let diff = 0\r\n      const config = configs[sortby]\r\n      const aV = config(a)\r\n      const bV = config(b)\r\n      if (typeof aV === \"string\" && typeof bV === \"string\") diff = aV.localeCompare(bV)\r\n      else diff = ((bV as number) - (aV as number))\r\n      if (diff !== 0) return ascendingBypass.includes(sortby) ? diff : (ascending ? -1 : 1) * diff\r\n    }\r\n    return 0\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Partial<Record<Keys, any>>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamDataContext","DataContext","teamData","useTeamData","character","useCharacter","gender","useDBMeta","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","favorite","useCharMeta","Skeleton","CardLight","zIndex","IconButton","_","charMeta","set","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","thumbImgSide","transformOrigin","falseWrapper","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","emphasize","setFormulaData","FormulaDataContext","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","allAmpReactions","mr","AmpReactionModeText","reaction","trigger","subVariant","Divider","orientation","flexItem","boxShadow","Groups","noWrap","List","light","dark","palletOption","borderRadius","shape","overflow","margin","SortByButton","sortKeys","onChange","ascending","onChangeAsc","t","useTranslation","i18nKey","selected","disabled","startIcon","faSortAmountDownAlt","faSortAmountUp","StarIcon","faStar","StarsDisplay","Array","keys","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","main","contrastText","elementHandler","handleMultiSelect","allElements","ElementToggle","ToggleButtonGroup","exclusive","weaponTypeHandler","allWeaponTypeKeys","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","createContext","onModalOpen","onModalClose","FormulaDataWrapper","useBoolState","open","onOpen","onClose","useState","setState","Provider","modalOpen","tr","strKey","ns","key18","trm","teamSize","sum","tally","pcNodes","objectKeyValueMap","e","greaterEq","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","sgt","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","characterSortMap","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","displayCharacter","state","useEffect","follow","r","s","characterSheets","useForceUpdate","dbDirty","forceUpdate","followAny","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","deferredState","deferredDbDirty","characterKeyList","sortType","sortByKeys","allCharacterKeys","chars","filterFunction","characterFilterConfigs","sort","sortFunction","characterSortConfigs","autoFocus","InputProps","sm","md","SelectionCard","CustomTooltip","padding","enterDelay","enterNextDelay","setCharMetaState","dbMeta","updateCharacter","action","type","enemyOverride","statKey","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","stateDirty","update","useMediaQueryUp","useTheme","useMediaQuery","breakpoints","up","mainStatAssumptionLevel","overrideArt","overrideWeapon","setDbDirty","dbDirtyDeferred","getTeamDataCalc","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","weapons","equippedArtifacts","a","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponTypeKey","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","weaponID","setWeapon","allKeys","arr","len","Set","toggleArr","sortbyKeys","configs","ascendingBypass","b","sortby","config","aV","bV","localeCompare","filterOptions","filterConfigs","entries","every","optionKey","optionVal"],"sourceRoot":""}