{"version":3,"file":"static/js/627.fe0e37c3.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/TextButton.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","PageCharacter/CharacterDisplay/LevelSelect.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/BackgroundWorker.ts","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/DBState.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts"],"sourcesContent":["import { Card, Slider } from \"@mui/material\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport CustomNumberInput from \"../CustomNumberInput\"\r\n\r\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  setLow: (low: number) => void,\r\n  setHigh: (high: number) => void,\r\n  setBoth: (low: number, high: number) => void,\r\n  dark?: boolean,\r\n  disabled?: boolean,\r\n  showLevelText?: boolean,\r\n}) {\r\n  const [sliderLow, setsliderLow] = useState(levelLow)\r\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\r\n  const setSlider = useCallback(\r\n    (e: unknown, value: number | number[]) => {\r\n      if (typeof value == \"number\") throw new TypeError()\r\n      const [l, h] = value\r\n      setsliderLow(l)\r\n      setsliderHigh(h)\r\n    },\r\n    [setsliderLow, setsliderHigh])\r\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\r\n\r\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\r\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\r\n    <CustomNumberInput\r\n      value={sliderLow}\r\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\r\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      startAdornment={showLevelText ? \"Level: \" : undefined}\r\n      disabled={disabled}\r\n    />\r\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\r\n      getAriaLabel={() => 'Arifact Level Range'}\r\n      value={[sliderLow, sliderHigh]}\r\n      onChange={setSlider}\r\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\r\n      valueLabelDisplay=\"auto\"\r\n      min={0} max={20} step={1} marks\r\n      disabled={disabled}\r\n    />\r\n    <CustomNumberInput\r\n      value={sliderHigh}\r\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\r\n      sx={{ px: 1, width: 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      disabled={disabled}\r\n    />\r\n  </Card>\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\r\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\r\n    {avatar}\r\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\r\n    {action && <Typography variant=\"caption\">{action}</Typography>}\r\n  </Box>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { Translate } from '../Translate';\r\n\r\ninterface ConditionalSelectorProps {\r\n  conditional: DocumentConditional,\r\n  disabled?: boolean,\r\n}\r\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\r\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\r\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else if (\"path\" in conditional) {\r\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  }\r\n}\r\n\r\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const [stateKey, st] = Object.entries(conditional.states)[0]\r\n  const badge = getStateBadge(st.name)\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n    {condName} {badge}\r\n  </Button>\r\n}\r\n\r\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\r\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n      <span>Not Active</span>\r\n    </MenuItem>\r\n    <Divider />\r\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalMultiple\r\n}\r\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [character, characterDispatch])\r\n\r\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\r\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\r\n      const conditionalValue = data.get(st.value).value\r\n      const isSelected = conditionalValue === stateKey\r\n      return <Button\r\n        color={isSelected ? \"success\" : \"primary\"}\r\n        disabled={disabled}\r\n        fullWidth\r\n        key={stateKey}\r\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\r\n        size=\"small\"\r\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n        sx={{ borderRadius: 0 }}\r\n      >\r\n        {getCondName(st.name)}\r\n      </Button>\r\n    })}\r\n  </ButtonGroup>\r\n}\r\n\r\nfunction isElement(disp: Displayable): disp is JSX.Element {\r\n  return (typeof disp !== \"string\")\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\r\n  if (!stateName) return \"\"\r\n\r\n  let badgeColor: ButtonProps['color'] = \"primary\"\r\n  let badgeText = stateName\r\n  if (stateName && isElement(stateName)) {\r\n    if (stateName.props.color) {\r\n      badgeColor = stateName.props.color\r\n      badgeText = <span>{stateName.props.children}</span>\r\n    }\r\n  }\r\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getCondName(condName: Displayable): Displayable {\r\n  if (isElement(condName)) {\r\n    const key = condName.props.key18\r\n    const ns = condName.props.ns\r\n    const values = condName.props.values\r\n    return <Translate ns={ns} key18={key} values={values} useBadge />\r\n  }\r\n  return condName\r\n}\r\n","import { CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport { HeaderDisplay } from \"../DocumentDisplay\"\r\nimport FieldsDisplay from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: DocumentConditional,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n  hideDesc?: boolean,\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  let fields\r\n  if (\"path\" in conditional) {\r\n    const condVal = data.get(conditional.value).value\r\n    fields = condVal && conditional.states[condVal]?.fields\r\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    fields = Object.values(conditional.states).flatMap(state => {\r\n      const stateVal = data.get(state.value).value\r\n      return stateVal ? state.fields : []\r\n    })\r\n  }\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\r\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\r\n      <ConditionalSelector conditional={conditional} />\r\n    </CardContent>\r\n    {fields && <FieldsDisplay fields={fields} />}\r\n  </CardDark>\r\n}\r\n","import { Box, Divider, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport FieldsDisplay from \"./FieldDisplay\"\r\nimport InfoTooltip from \"./InfoTooltip\"\r\n\r\ntype DocumentDisplayProps = {\r\n  sections: DocumentSection[],\r\n  teamBuffOnly?: boolean,\r\n  hideDesc?: boolean,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n}\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  if (!sections.length) return null\r\n  const sectionDisplays = sections.map((s, i) => {\r\n    // If we can't show this section, return null\r\n    if (s.canShow && !data.get(s.canShow).value) return null\r\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\r\n    if (teamBuffOnly && !s.teamBuff) return null\r\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  }).filter(s => s)\r\n  if (!sectionDisplays.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  if (\"fields\" in section) {\r\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else if (\"states\" in section) {\r\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else /* if (\"text\" in section) */ {\r\n    return <TextSectionDisplay section={section} />\r\n  }\r\n}\r\n\r\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, section) && section.header &&\r\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\r\n    }\r\n    <FieldsDisplay fields={section.fields} />\r\n  </CardDark>\r\n}\r\n\r\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\r\n  const { data } = useContext(DataContext)\r\n  return <div>\r\n    {evalIfFunc(section.text, data)}\r\n  </div>\r\n}\r\n\r\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  const { data } = useContext(DataContext)\r\n  let { icon, title, action } = header\r\n  icon = evalIfFunc(icon, data)\r\n  const description = !hideDesc && evalIfFunc(header.description, data)\r\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\r\n  return <>\r\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\r\n    {!hideDivider && <Divider />}\r\n  </>\r\n}\r\n","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Button } from '@mui/material';\r\nimport { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CharacterSelectionModal } from '../../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../../Components/Character/ThumbSide';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\r\n\r\nexport default function CharSelectDropdown() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const [showModal, setshowModal] = useState(false)\r\n  const setCharacter = useCharSelectionCallback()\r\n  return <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\r\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\r\n  </>\r\n}\r\n","import { ExpandMore } from '@mui/icons-material';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\r\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\r\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\r\nimport { DisplaySub, Variant } from '../../Formula/type';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport KeyMap, { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\r\n\r\nexport default function FormulaModal() {\r\n  const { modalOpen } = useContext(FormulaDataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\r\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\r\n    <CardDark>\r\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CalculationDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const sections = getDisplaySections(contextData ?? data)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    <Box sx={{ mr: -1, mb: -1 }}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Box>\r\n  </Suspense>\r\n}\r\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const { data } = useContext(DataContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey), [contextData, data, sectionKey])\r\n  if (!header) return null\r\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\r\n  const { title, icon, action } = header\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <CardContent>\r\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\r\n  const { node: contextNode } = useContext(FormulaDataContext)\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\r\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\r\n\r\n  useEffect(() => {\r\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\r\n  }, [scrollRef, node, contextNode])\r\n\r\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\r\n    <AccordionSummary expandIcon={<ExpandMore />} >\r\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\r\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\r\n      </Box>}\r\n    </AccordionSummary>\r\n    <AccordionDetails >\r\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}\r\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\r\nimport { useCallback, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../../Components/CustomNumberInput';\r\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../../Data/LevelData';\r\nimport { clamp } from '../../Util/Util';\r\n\r\nexport default function LevelSelect() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    if (!character) return\r\n    const { level = 1, ascension = 0 } = character\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, character])\r\n  const { level = 1, ascension = 0 } = character\r\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n    <CustomNumberInputButtonGroupWrapper >\r\n      <CustomNumberInput onChange={setLevel} value={level}\r\n        startAdornment=\"Lv. \"\r\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n        sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n        disabled={!characterSheet} />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n    <DropdownButton title={t(\"selectLevel\")} disabled={!characterSheet}>\r\n      {milestoneLevels.map(([lv, as]) => {\r\n        const sameLevel = lv === ascensionMaxLevel[as]\r\n        const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n        const selected = lv === level && as === ascension\r\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n      })}\r\n    </DropdownButton>\r\n  </ButtonGroup>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\r\nimport TextButton from \"./TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  onReset?: () => void\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\r\n\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ px: 1 }}>\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useState } from 'react';\r\nimport { CharacterContext } from \"../Context/CharacterContext\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { uiInput as input } from \"../Formula\";\r\nimport KeyMap, { valueString } from '../KeyMap';\r\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport { uncoloredEleIcons } from \"./StatIcon\";\r\nimport StatInput from \"./StatInput\";\r\n\r\nexport function EnemyExpandCard() {\r\n  const { data } = useContext(DataContext)\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const eLvlNode = data.get(input.enemy.level)\r\n  const eDefRed = data.get(input.enemy.defRed)\r\n  const eDefIgn = data.get(input.enemy.defIgn)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\r\n        </Grid>\r\n        {allElementsWithPhy.map(element => <Grid item key={element}>\r\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\r\n        </Grid>)}\r\n        <Grid item>\r\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <ExpandButton\r\n        expand={expanded}\r\n        onClick={toggle}\r\n        aria-expanded={expanded}\r\n        aria-label=\"show more\"\r\n        size=\"small\"\r\n        sx={{ p: 0 }}\r\n      >\r\n        <ExpandMore />\r\n      </ExpandButton>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\r\n  const { data } = useContext(DataContext)\r\n  const node = data.get(input.enemy[`${element}_res_`])\r\n  const immune = !isFinite(node.value)\r\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\r\n    <span >{uncoloredEleIcons[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\r\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const defaultVal = 10\r\n\r\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\r\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\r\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\r\n        value={eLvl}\r\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\r\n        defaultValue={data.get(input.lvl).value}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\r\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\r\n      />\r\n    </Grid>\r\n    {allElementsWithPhy.map(eleKey => {\r\n      const statKey = `${eleKey}_enemyRes_`\r\n      const val = enemyOverride[statKey]\r\n      const elementImmunity = val === Number.MAX_VALUE\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\r\n          value={val ? (elementImmunity ? Infinity : val) : 10}\r\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\r\n          defaultValue={defaultVal}\r\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\r\n            Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\r\n        value={eDefRed}\r\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\r\n        value={eDefIgn}\r\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport CloseButton from \"../../Components/CloseButton\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport StatEditorList from \"../../Components/StatEditorList\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport { CharacterContext } from \"../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../Context/DataContext\";\r\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\r\nimport { ReadNode } from \"../../Formula/type\";\r\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\r\nimport { allElements, ElementKey, ElementKeyWithPhy } from \"../../Types/consts\";\r\n\r\nconst cols = {\r\n  xs: 1, md: 2, lg: 3\r\n}\r\n\r\nexport default function StatModal({ open, onClose }) {\r\n  return <ModalWrapper open={open} onClose={onClose}>\r\n    <CardDark>\r\n      <CardHeader title=\"Detailed Stats\" action={<CloseButton onClick={onClose} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <Stack spacing={1}>\r\n          <BonusStatsEditor />\r\n          <EnemyExpandCard />\r\n          <MainStatsCards />\r\n        </Stack>\r\n      </CardContent></CardDark>\r\n  </ModalWrapper>\r\n}\r\nconst keys = [...allInputPremodKeys]\r\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\r\nfunction BonusStatsEditor() {\r\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\r\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\r\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\r\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\r\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\r\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\r\n\r\nconst otherStatKeys = [\r\n  ...allEleDmgKeys,\r\n  ...allEleResKeys,\r\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\r\n] as const\r\n\r\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\r\n\r\n\r\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  return <FieldDisplayList >\r\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\r\n    {extra}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction MainStatsCards() {\r\n  const { character: { elementKey }, characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const specialNode = data.get(input.special)\r\n  const charEle = (elementKey ?? characterSheet.elementKey) as ElementKey\r\n  const isMelee = characterSheet.isMelee()\r\n\r\n  const otherStatReadNodes = useMemo(() => {\r\n    const nodes = otherStatKeys.map(k => input.total[k])\r\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\r\n    if (isMelee) eles.concat([\"physical\"])\r\n\r\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\r\n  }, [data, charEle, isMelee])\r\n\r\n\r\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\r\n\r\n  return <CardLight><CardContent>\r\n    <Grid container columns={cols} spacing={1}>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Main Stats\">\r\n          <StatDisplayContent nodes={mainReadNodes}\r\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\r\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\r\n            </ListItem>}\r\n          />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Other Stats\">\r\n          <StatDisplayContent nodes={otherStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Misc Stats\">\r\n          <StatDisplayContent nodes={miscStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>}\r\n    </Grid>\r\n  </CardContent></CardLight>\r\n}\r\nfunction StatDisplayCard({ title, children }) {\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n      </Box>\r\n    </CardContent>\r\n    {children}\r\n  </CardDark>\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BackgroundWorker.184e6dcb.worker.js\");\n}\n","import { createContext } from \"react\";\r\n\r\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\r\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\r\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\r\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\r\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\r\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\r\n\r\ntype DynMinMax = { [key in string]: MinMax }\r\ntype MinMax = { min: number, max: number }\r\n\r\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\r\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\r\n  let should = forced\r\n  /** If `key` makes progress, all operations in `value` should be performed */\r\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\r\n    pruneOrder: { pruneNodeRange: true },\r\n    pruneArtRange: { pruneNodeRange: true },\r\n    pruneNodeRange: { reaffine: true },\r\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\r\n  }\r\n  let count = 0\r\n  while (Object.values(should).some(x => x) && count++ < 20) {\r\n    if (should.pruneOrder) {\r\n      delete should.pruneOrder\r\n      const newArts = pruneOrder(arts, numTop, exclusion)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneOrder }\r\n      }\r\n    }\r\n    if (should.pruneArtRange) {\r\n      delete should.pruneArtRange\r\n      const newArts = pruneArtRange(nodes, arts, minimum)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneArtRange }\r\n      }\r\n    }\r\n    if (should.pruneNodeRange) {\r\n      delete should.pruneNodeRange\r\n      const newNodes = pruneNodeRange(nodes, arts)\r\n      if (nodes !== newNodes) {\r\n        nodes = newNodes\r\n        should = { ...should, ...deps.pruneNodeRange }\r\n      }\r\n    }\r\n    if (should.reaffine) {\r\n      delete should.reaffine\r\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\r\n      if (nodes !== newNodes || arts !== newArts) {\r\n        nodes = newNodes\r\n        arts = newArts\r\n        should = { ...should, ...deps.reaffine }\r\n      }\r\n    }\r\n  }\r\n  return { nodes, arts }\r\n}\r\n\r\nfunction reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\r\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\r\n\r\n  function visit(node: NumNode, isAffine: boolean) {\r\n    if (isAffine) affineNodes.add(node)\r\n    else node.operands.forEach(_op => {\r\n      const op = _op as NumNode\r\n      affineNodes.has(op) && topLevelAffine.add(op)\r\n    })\r\n  }\r\n\r\n  const dynKeys = new Set<string>()\r\n\r\n  forEachNodes(nodes, _ => { }, f => {\r\n    const operation = f.operation\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\r\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\r\n        dynKeys.add(f.path[1])\r\n        visit(f, true)\r\n        break\r\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\r\n      case \"mul\": {\r\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\r\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\r\n        break\r\n      }\r\n      case \"const\":\r\n        if (typeof f.value === \"string\" || f.value === undefined)\r\n          throw new Error(`Found constant ${f.value} while compacting`)\r\n        visit(f as NumNode, true); break\r\n      case \"res\": case \"threshold\": case \"sum_frac\":\r\n      case \"max\": case \"min\": visit(f, false); break\r\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\r\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\r\n      default: assertUnreachable(operation)\r\n    }\r\n  })\r\n\r\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\r\n    Object.keys(arts.base).length === dynKeys.size)\r\n    return { nodes, arts }\r\n\r\n  let current = -1\r\n  function nextDynKey(): string {\r\n    while (dynKeys.has(`${++current}`));\r\n    return `${current}`\r\n  }\r\n\r\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\r\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\r\n  const affineMap = new Map(affine.map(node => [node,\r\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\r\n      ? node\r\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\r\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\r\n\r\n  function reaffineArt(stat: DynStat): DynStat {\r\n    const values = constantFold([...affineMap.keys()], {\r\n      dyn: objectMap(stat, (value) => constant(value))\r\n    } as any, _ => true)\r\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\r\n  }\r\n  const result = {\r\n    nodes, arts: {\r\n      base: reaffineArt(arts.base),\r\n      values: objectKeyMap(allSlotKeys, slot =>\r\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\r\n    }\r\n  }\r\n  const offsets = Object.entries(reaffineArt({}))\r\n  for (const arts of Object.values(result.arts.values))\r\n    for (const { values } of arts)\r\n      for (const [key, baseValue] of offsets)\r\n        values[key] -= baseValue\r\n  return result\r\n}\r\n/** Remove artifacts that cannot be in top `numTop` builds */\r\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\r\n  let progress = false\r\n  const noRainbow = !exclusion.rainbow?.length\r\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\r\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\r\n  const values = objectKeyMap(allSlotKeys, slot => {\r\n    const list = arts.values[slot]\r\n    const newList = list.filter(art => {\r\n      let count = 0\r\n      return list.every(other => {\r\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\r\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\r\n        if (greaterEqual && (greater || other.id > art.id) &&\r\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\r\n          count++\r\n        return count < numTop\r\n      })\r\n    })\r\n    if (newList.length !== list.length) progress = true\r\n    return newList\r\n  })\r\n  return progress ? { base: arts.base, values } : arts\r\n}\r\n/** Remove artifacts that cannot reach `minimum` in any build */\r\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const wrap = { arts }\r\n  while (true) {\r\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\r\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\r\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\r\n\r\n    let progress = false\r\n    const values = objectKeyMap(allSlotKeys, slot => {\r\n      const result = wrap.arts.values[slot].filter(art => {\r\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\r\n        const newRange = computeNodeRange(nodes, read)\r\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\r\n      })\r\n      if (result.length !== wrap.arts.values[slot].length)\r\n        progress = true\r\n      return result\r\n    })\r\n    if (!progress) break\r\n    wrap.arts = { base: wrap.arts.base, values }\r\n  }\r\n  return wrap.arts\r\n}\r\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\r\n  const nodeRange = computeNodeRange(nodes, reads)\r\n\r\n  return mapFormulas(nodes, f => {\r\n    const { operation } = f\r\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\r\n    switch (operation) {\r\n      case \"threshold\": {\r\n        const [value, threshold, pass, fail] = operandRanges\r\n        if (value.min >= threshold.max) return f.operands[2]\r\n        else if (value.max < threshold.min) return constant(0)\r\n        if (pass.max === pass.min &&\r\n          fail.max === fail.min &&\r\n          pass.min === fail.min && isFinite(pass.min))\r\n          return constant(pass.max)\r\n        break\r\n      }\r\n      case \"min\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\r\n        break\r\n      }\r\n      case \"max\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every(op2 => op1.max >= op2.min)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\r\n        break\r\n      }\r\n    }\r\n    return f\r\n  }, f => f)\r\n}\r\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  ranges.forEach(range => {\r\n    Object.entries(range).forEach(([key, value]) => {\r\n      if (result[key]) {\r\n        result[key].min += value.min\r\n        result[key].max += value.max\r\n      } else result[key] = { ...value }\r\n    })\r\n  })\r\n  return result\r\n}\r\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  if (arts.length) {\r\n    Object.keys(arts[0].values)\r\n      .filter(key => arts.every(art => art.values[key]))\r\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\r\n    arts.forEach(({ values }) => {\r\n      for (const [key, value] of Object.entries(values)) {\r\n        if (!result[key]) result[key] = { min: 0, max: value }\r\n        else {\r\n          if (result[key].max < value) result[key].max = value\r\n          if (result[key].min > value) result[key].min = value\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\r\n  const range = new Map<NumNode, MinMax>()\r\n\r\n  forEachNodes(nodes, _ => { }, _f => {\r\n    const f = _f as NumNode\r\n    const { operation } = f\r\n    const operands = f.operands.map(op => range.get(op)!)\r\n    let current: MinMax\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.path[0] !== \"dyn\")\r\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\r\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\r\n        break\r\n      case \"const\": current = computeMinMax([f.value]); break\r\n      case \"subscript\": current = computeMinMax(f.list); break\r\n      case \"add\": case \"min\": case \"max\":\r\n        current = {\r\n          min: allOperations[operation](operands.map(x => x.min)),\r\n          max: allOperations[operation](operands.map(x => x.max)),\r\n        }; break\r\n      case \"res\": current = {\r\n        min: allOperations[operation]([operands[0].max]),\r\n        max: allOperations[operation]([operands[0].min]),\r\n      }; break\r\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\r\n        accu.min * current.min, accu.min * current.max,\r\n        accu.max * current.min, accu.max * current.max,\r\n      ])); break\r\n      case \"threshold\":\r\n        if (operands[0].min >= operands[1].max) current = operands[2]\r\n        else if (operands[0].max < operands[1].min) current = computeMinMax([0])\r\n        else current = computeMinMax([0], [operands[2]])\r\n        break\r\n      case \"sum_frac\": {\r\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\r\n        if (sum.min <= 0 && sum.max >= 0)\r\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\r\n        else\r\n          // TODO: Check this\r\n          current = computeMinMax([\r\n            x.min / sum.min, x.min / sum.max,\r\n            x.max / sum.min, x.max / sum.max\r\n          ])\r\n        break\r\n      }\r\n      case \"data\": case \"lookup\": case \"match\":\r\n        throw new Error(`Unsupported ${operation} node`)\r\n      default: assertUnreachable(operation)\r\n    }\r\n    range.set(f, current)\r\n  })\r\n  return range\r\n}\r\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\r\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\r\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\r\n  return { min, max }\r\n}\r\n\r\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\r\n  return {\r\n    base: arts.base,\r\n    values: objectKeyMap(allSlotKeys, slot => {\r\n      const filter = filters[slot]\r\n      switch (filter.kind) {\r\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\r\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\r\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\r\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\r\n}\r\nexport function mergePlot(plots: PlotData[]): PlotData {\r\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\r\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\r\n  while (keys.size > maxCount) {\r\n    scale *= reductionScaling\r\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\r\n  }\r\n  const result: PlotData = {}\r\n  for (const plot of plots)\r\n    for (const build of Object.values(plot)) {\r\n      const x = Math.round(build.plot! / scale) * scale\r\n      if (!result[x] || result[x]!.value < build.value)\r\n        result[x] = build\r\n    }\r\n  return result\r\n}\r\n\r\nexport function countBuilds(arts: ArtifactsBySlot): number {\r\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\r\n}\r\n\r\n\r\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\r\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\r\n  filter_loop: for (const filter of filters) {\r\n    for (const [slot, f] of Object.entries(filter)) {\r\n      const available = artSets[slot]!\r\n      switch (f.kind) {\r\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\r\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\r\n        case \"id\": break\r\n      }\r\n    }\r\n    yield filter\r\n  }\r\n}\r\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\r\n  return new Set(exclusion?.includes(2)\r\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\r\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\r\n}\r\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\r\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\r\n  /**\r\n   * This generation algorithm is separated into two parts:\r\n   * - \"Shape\" generation\r\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\r\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\r\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\r\n   * - Shape filling\r\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\r\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\r\n   */\r\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\r\n  let shapes: number[][] = []\r\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\r\n    if (current.length === 5) {\r\n      if (allowedRainbows.has(rainbows.length))\r\n        shapes.push(current)\r\n      return\r\n    }\r\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\r\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\r\n  }\r\n  populateShapes([0], new Set([0]), [0])\r\n  function indexOfShape(shape: number[], replacing: number) {\r\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\r\n      return undefined\r\n    shape = [...shape]\r\n    shape[replacing] = 5\r\n    return shape.reduce((a, b) => a * 6 + b, 0)\r\n  }\r\n  for (let replacing = 4; replacing >= 0; replacing--) {\r\n    const required: Map<number, number> = new Map()\r\n    for (const shape of shapes) {\r\n      const id = indexOfShape(shape, replacing)\r\n      if (id === undefined) continue\r\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\r\n    }\r\n    for (const [id, remaining] of required.entries()) {\r\n      if (remaining === 0) {\r\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\r\n        shape[replacing] = 5\r\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\r\n        shapes.push(shape)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Shapes are now calculated and merged, proceed to fill in the sets\r\n\r\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\r\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\r\n\r\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\r\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\r\n\r\n  function* check(shape: number[]) {\r\n    const used: Set<ArtifactSetKey> = new Set()\r\n    let groupped: number[][] = [], rainbows: number[] = []\r\n    for (const i of shape) {\r\n      groupped.push([])\r\n      if (i === 5) rainbows.push(groupped.length - 1)\r\n      else groupped[i].push(groupped.length - 1)\r\n    }\r\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\r\n    let usableRainbows = rainbows.length\r\n\r\n    // Inception.. because js doesn't like functions inside a for-loop\r\n    function* check(i: number) {\r\n      if (i === groupped.length)\r\n        return yield* check_free(0)\r\n\r\n      for (const set of artSets) {\r\n        if (used.has(set)) continue\r\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\r\n        let requiredRainbows = 0\r\n\r\n        if (allowedSet && !allowedSet.has(length)) {\r\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\r\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\r\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\r\n        }\r\n\r\n        used.add(set)\r\n        counts[set] = groupped[i].length\r\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\r\n        usableRainbows -= requiredRainbows\r\n\r\n        yield* check(i + 1)\r\n\r\n        usableRainbows += requiredRainbows\r\n        counts[set] = 0\r\n        used.delete(set)\r\n      }\r\n    }\r\n    // We separate filling rainbow slots from groupped slots because it has an entirely\r\n    // different set of rules regarding what can be filled and what states to be kept.\r\n    function* check_free(i: number) {\r\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\r\n      let required = 0\r\n      for (const set of artSets) {\r\n        const allowedSet = allowedCounts[set], count = counts[set]\r\n        if (!allowedSet) continue\r\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\r\n        else if (!allowedSet.has(count)) {\r\n          required += [...allowedSet].find(x => x > count)! - count\r\n          missing.push(set)\r\n        }\r\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\r\n      }\r\n      if (required > remaining) return\r\n      if (i === rainbows.length) {\r\n        yield { ...result }\r\n        return\r\n      }\r\n      if (required === remaining) {\r\n        for (const set of missing) {\r\n          counts[set]++\r\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n          yield* check_free(i + 1)\r\n          counts[set]--\r\n        }\r\n        return\r\n      }\r\n      for (const set of [...isolated, ...missing]) {\r\n        counts[set]++\r\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n        yield* check_free(i + 1)\r\n        counts[set]--\r\n      }\r\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\r\n      yield* check_free(i + 1)\r\n    }\r\n    yield* check(0)\r\n  }\r\n  for (const shape of shapes) yield* check(shape)\r\n}\r\n\r\nexport type RequestFilter = StrictDict<SlotKey,\r\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"id\", ids: Set<string> }\r\n>\r\n\r\nexport type DynStat = { [key in string]: number }\r\nexport type ArtifactBuildData = {\r\n  id: string\r\n  set?: ArtifactSetKey\r\n  values: DynStat\r\n}\r\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\r\n\r\nexport type PlotData = Dict<number, Build>\r\nexport interface Build {\r\n  value: number\r\n  plot?: number\r\n  artifactIds: string[]\r\n}\r\n","import { Box } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport DocumentDisplay from \"../DocumentDisplay\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  hideHeader?: boolean,\r\n  conditionalsOnly?: boolean\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\r\n  return <Box display=\"flex\" flexDirection=\"column\">\r\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\r\n  </Box>\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport default function useBuildSetting(characterKey: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\r\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    database.buildSettings.follow(characterKey, setBuildSetting),\r\n    [characterKey, setBuildSetting, database])\r\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\r\n\r\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\r\n}\r\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport CloseButton from '../../../../../Components/CloseButton';\r\nimport ColorText from '../../../../../Components/ColoredText';\r\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\r\nimport { Translate } from '../../../../../Components/Translate';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\r\nimport { UIData } from '../../../../../Formula/uiData';\r\nimport { constant } from '../../../../../Formula/utils';\r\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\r\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\r\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\r\n  const dataContext = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\r\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const [open, setOpen] = useState(false)\r\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\r\n  const onClose = useCallback(() => setOpen(false), [setOpen])\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\r\n\r\n  const artSlotCount = useMemo(() => {\r\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\r\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\r\n    return dbDirty && artSlotCount\r\n  }, [dbDirty, database, artSetKeyList])\r\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\r\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\r\n\r\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\r\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\r\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\r\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\r\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\r\n  }), [artSetKeyList, artSetExclusion])\r\n  const artifactCondCount = useMemo(() =>\r\n    (Object.keys(conditional)).filter(k =>\r\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\r\n    , [conditional])\r\n  const fakeDataContextObj = useMemo(() => fakeData(dataContext), [dataContext])\r\n  const resetArtConds = useCallback(() => {\r\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\r\n    characterDispatch({ conditional: tconditional })\r\n  }, [conditional, characterDispatch]);\r\n  const setAllExclusion = useCallback(\r\n    (setnum: number, exclude = true) => {\r\n      const artSetExclusion_ = deepClone(artSetExclusion)\r\n      artSetKeyList.forEach(k => {\r\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\r\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\r\n      })\r\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\r\n    },\r\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\r\n  )\r\n\r\n  return <>\r\n    <CardLight sx={{ display: \"flex\" }}>\r\n      <CardContent sx={{ flexGrow: 1 }} >\r\n        <Typography>\r\n          <strong>{t`tabOptimize.artSetConfig.title`}</strong>\r\n        </Typography>\r\n        <Stack spacing={1}>\r\n          <Typography>{t`tabOptimize.artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.enabled\")}</SqBadge></Typography>\r\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`tabOptimize.artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n          <Typography>{t`tabOptimize.artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n        </Stack>\r\n\r\n      </CardContent>\r\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\r\n        <Settings />\r\n      </Button>\r\n    </CardLight>\r\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography variant=\"h6\" >{t`tabOptimize.artSetConfig.title`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent >\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography><strong>{t`tabOptimize.artSetConfig.modal.setCond.title`}</strong></Typography>\r\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.selected\")}</SqBadge></Typography>\r\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`tabOptimize.artSetConfig.modal.setCond.reset`}</Button>\r\n          </Box>\r\n          <Typography>{t`tabOptimize.artSetConfig.modal.setCond.text`}</Typography>\r\n        </CardContent></CardLight>\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Typography sx={{ flexGrow: 1 }}><strong>\r\n            <Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\r\n          </strong></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\r\n        </CardContent></CardLight>\r\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <CardLight>\r\n              <CardContent>\r\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.2rainbow`}</Button>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.4rainbow`}</Button>\r\n                </Box>\r\n              </CardContent>\r\n            </CardLight>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\r\n          {artSetKeyList.map(setKey => {\r\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets[setKey]} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onClose} />\r\n      </CardContent>\r\n    </CardDark></ModalWrapper >}\r\n  </>\r\n}\r\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\r\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.allowAll${setNum}set`)}</Button>\r\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.excludeAll${setNum}set`)}</Button>\r\n      </Box>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\r\n  const { t } = useTranslation(\"sheet\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\r\n  const allow4 = !setExclusionSet.includes(4)\r\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (!allow4 || slots < 4) return []\r\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [sheet.setEffects, allow4, slots])\r\n  const exclude2 = setExclusionSet.includes(2)\r\n  const exclude4 = setExclusionSet.includes(4)\r\n  if (slots < 2) return null\r\n  return <Grid item key={setKey} xs={1}>\r\n    <CardLight sx={{ height: \"100%\" }}>\r\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\r\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\r\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\r\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\r\n            <InfoTooltip title={<Box>\r\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\r\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\r\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\r\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\r\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\r\n              </Box>\r\n            </Box>} />\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\r\n        </Box>\r\n      </Box>\r\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\r\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\r\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\r\n      </ButtonGroup>\r\n\r\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\r\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {set4CondNums.map(setNumKey =>\r\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n          )}\r\n        </CardContent>\r\n      </DataContext.Provider>}\r\n    </CardLight>\r\n  </Grid >\r\n}\r\nfunction fakeData(currentContext: dataContextObj): dataContextObj {\r\n  return {\r\n    ...currentContext,\r\n    data: new UIData({ ...currentContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\r\n  }\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\r\n\r\nconst levels = [0, 4, 8, 12, 16, 20] as const\r\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\r\n    title={mainStatAssumptionLevel ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"tabOptimize.assumptionLvl.no\")}>\r\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl }) : t(\"tabOptimize.assumptionLvl.no\")}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { CardContent, Divider, Typography } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nexport default function BonusStatsCard() {\r\n  const { character: { bonusStats } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const bonusStatsKeys = Object.keys(bonusStats)\r\n  if (!bonusStatsKeys.length) return null\r\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Bonus Stats</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\r\nimport { ReactNode } from 'react';\r\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\r\n\r\nexport const warningBuildNumber = 10000000\r\nexport type BuildStatus = {\r\n  type: \"active\" | \"inactive\"\r\n  tested: number      // tested, including `failed`\r\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\r\n  skipped: number\r\n  total: number\r\n  startTime?: number\r\n  finishTime?: number\r\n}\r\n\r\nconst Monospace = styled(\"strong\")({\r\n  fontFamily: \"monospace\"\r\n})\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n}));\r\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\r\n  const hasTotal = isFinite(total)\r\n\r\n  const generatingBuilds = type !== \"inactive\"\r\n  const unskipped = total - skipped\r\n\r\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\r\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\r\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\r\n\r\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\r\n\r\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\r\n  let title = \"\" as ReactNode\r\n  let subtitle = \"\" as ReactNode\r\n  let progress = undefined as undefined | number\r\n\r\n  if (generatingBuilds) {\r\n    progress = tested * 100 / (unskipped)\r\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\r\n  } else if (tested + skipped) {\r\n    progress = 100\r\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Total duration: {durationString}</Typography>\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  return <Alert severity={color} variant=\"filled\" sx={{\r\n    \"& .MuiAlert-message\": {\r\n      flexGrow: 1\r\n    }\r\n  }}>\r\n    {title}\r\n    {subtitle}\r\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\r\n      {hasTotal && <Grid item>\r\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\r\n      </Grid>}\r\n      <Grid item flexGrow={1} >\r\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\r\n      </Grid>\r\n    </Grid>}\r\n  </Alert>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport useArtifact from \"../../ReactHooks/useArtifact\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedSubstat } from \"../../Types/artifact\";\r\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ColorText from \"../ColoredText\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport StatIcon, { uncoloredEleIcons } from \"../StatIcon\";\r\nimport ArtifactTooltip from \"./ArtifactTooltip\";\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  slotKey: SlotKey,\r\n  mainStatAssumptionLevel?: number,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType\r\n}\r\n\r\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\r\n  const art = useArtifact(artifactId)\r\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\r\n  const theme = useTheme()\r\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\r\n  </BGComponent>\r\n\r\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\">\r\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\r\n        <ArtifactTooltip art={art}>\r\n          <Box\r\n            component=\"img\"\r\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\r\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\r\n          />\r\n        </ArtifactTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        {/* mainstats */}\r\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\r\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography>{KeyMap.getArtStr(mainStatKey)}</Typography>} disableInteractive>\r\n              <span>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</span>\r\n            </BootstrapTooltip>\r\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\r\n          </Typography>} />\r\n      </Box>\r\n      {/* substats */}\r\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\r\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\r\n  if (!stat.value) return null\r\n  const numRolls = stat.rolls?.length ?? 0\r\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n  const unit = KeyMap.unit(stat.key)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && KeyMap.getArtStr(stat.key)}</Typography>} disableInteractive>\r\n        <span>{StatIcon[stat.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ location }: { location: CharacterKey | \"\" }) {\r\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { Masonry } from \"@mui/lab\"\r\nimport { Divider, ListItem } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\r\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\r\nimport { DisplaySub } from \"../../Formula/type\"\r\nimport { NodeDisplay } from \"../../Formula/uiData\"\r\nimport { customRead } from \"../../Formula/utils\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { objectMap } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport SqBadge from \"../SqBadge\"\r\n\r\nexport default function StatDisplayComponent() {\r\n  const { data } = useContext(DataContext)\r\n  const sections = useMemo(() =>\r\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\r\n    [data])\r\n  return <Box sx={{ mr: -1, mb: -1 }}>\r\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Masonry >\r\n  </Box>\r\n}\r\n\r\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const optimizationTarget = useContext(OptimizationTargetContext)\r\n  const { data, oldData } = useContext(DataContext)\r\n  const header = usePromise(() => getDisplayHeader(data, sectionKey), [data, sectionKey])\r\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\r\n  if (!header) return <CardDark></CardDark>\r\n\r\n  const { title, icon, action } = header\r\n  return <CardDark >\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\r\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\r\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\r\n        />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport { input } from \"../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport KeyMap, { valueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useWeapon from \"../../ReactHooks/useWeapon\";\r\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\r\n\r\ntype Data = {\r\n  weaponId?: string,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType,\r\n}\r\n\r\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\r\n  const { refinement, location } = weapon\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\r\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\r\n        <WeaponNameTooltip sheet={weaponSheet}>\r\n          <Box\r\n            component=\"img\"\r\n            src={weaponSheet.getImg(weapon.ascension)}\r\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n          />\r\n        </WeaponNameTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\r\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\r\n        <WeaponStat node={UIData.get(input.weapon.main)} />\r\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\r\n        <span>{StatIcon[node.info.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{val}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ location }) {\r\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { ChevronRight } from '@mui/icons-material';\r\nimport { Button, CardContent, Grid, Skeleton, Stack, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ArtifactSlotKey } from 'pipeline';\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { Translate } from '../../../../../Components/Translate';\r\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\ntype NewOld = {\r\n  newId: string,\r\n  oldId?: string\r\n}\r\n\r\ntype BuildDisplayItemProps = {\r\n  index?: number,\r\n  compareBuild: boolean,\r\n  disabled?: boolean,\r\n  extraButtons?: JSX.Element\r\n}\r\n//for displaying each artifact build\r\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const dataContext = useContext(DataContext)\r\n\r\n  const { data, oldData } = dataContext\r\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\r\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\r\n\r\n  const equipBuild = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\r\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\r\n    database.chars.equipArtifacts(characterKey, newBuild)\r\n    database.weapons.set(data.get(input.weapon.id).value!, { location: characterKey })\r\n  }, [characterKey, data, database])\r\n\r\n  const statProviderContext = useMemo(() => {\r\n    const dataContext_ = { ...dataContext }\r\n    if (!compareBuild) dataContext_.oldData = undefined\r\n    return dataContext_\r\n  }, [dataContext, compareBuild])\r\n\r\n  // Memoize Arts because of its dynamic onClick\r\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\r\n    <Grid item xs={1} key={slotKey} >\r\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\r\n        const oldId = equippedArtifacts[slotKey]\r\n        const newId = data.get(input.art[slotKey].id).value!\r\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\r\n      }} />\r\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\r\n\r\n  if (!oldData) return null\r\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\r\n\r\n  return <CardLight>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\r\n      <CardContent>\r\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\r\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\r\n          <SetBadges currentlyEquipped={currentlyEquipped} />\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          </Box>\r\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\r\n          {extraButtons}\r\n        </Box>\r\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\r\n          <Grid item xs={1}>\r\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\r\n          </Grid>\r\n          {artNanos}\r\n        </Grid>\r\n        <DataContext.Provider value={statProviderContext}>\r\n          <StatDisplayComponent />\r\n        </DataContext.Provider>\r\n      </CardContent>\r\n    </Suspense>\r\n  </CardLight>\r\n}\r\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\r\n  allSlotKeys.forEach(slotKey => {\r\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\r\n    if (!set) return\r\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\r\n    else setToSlots[set] = [slotKey]\r\n  })\r\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\r\n  )}</>\r\n\r\n}\r\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n  if (!artifactSheet) return null\r\n  const numInSet = slotarr.length\r\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\r\n  return <Box>\r\n    <BootstrapTooltip placement=\"top\" title={\r\n      <Suspense fallback={<Skeleton variant='rectangular' width={100} height={100} />}>\r\n        <SetToolTipTitle artifactSheet={artifactSheet} numInSet={numInSet} />\r\n      </Suspense>\r\n    } disableInteractive >\r\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\r\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\r\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\r\n      </Typography></SqBadge>\r\n    </BootstrapTooltip>\r\n  </Box>\r\n}\r\nfunction SetToolTipTitle({ artifactSheet, numInSet }: { artifactSheet: ArtifactSheet, numInSet: number }) {\r\n  const { t } = useTranslation(\"sheet\")\r\n  return <Stack spacing={2} sx={{ p: 1 }}>\r\n    {Object.keys(artifactSheet.setEffects).map((setKey) => <Box key={setKey} sx={{ opacity: parseInt(setKey) <= numInSet ? 1 : 0.5 }}>\r\n      <Typography><SqBadge color=\"success\">{t(`${setKey}set`)}</SqBadge></Typography>\r\n      <Typography><Translate ns={`artifact_${artifactSheet.key}_gen`} key18={`setEffects.${setKey}`} /></Typography>\r\n    </Box>\r\n    )}\r\n  </Stack>\r\n}\r\n\r\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const onEquip = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\r\n    database.arts.set(newId, { location: characterKey })\r\n    onClose()\r\n  }, [newId, database, characterKey, onClose])\r\n\r\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\r\n    <CardDark>\r\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\r\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\r\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\r\nimport { useContext, useMemo, useState } from 'react';\r\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nimport KeyMap from '../../../../../KeyMap';\r\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\r\nimport { Build } from '../common';\r\n\r\nexport type ChartData = {\r\n  valueNode: NumNode,\r\n  plotNode: NumNode,\r\n  data: Build[]\r\n}\r\ntype ChartCardProps = {\r\n  chartData?: ChartData\r\n  plotBase: MainStatKey | SubstatKey | \"\",\r\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\r\n  disabled?: boolean\r\n}\r\ntype Point = { x: number, y: number, min?: number }\r\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\r\n  const [showDownload, setshowDownload] = useState(false)\r\n  const [showMin, setshowMin] = useState(true)\r\n  const { data } = useContext(DataContext)\r\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\r\n\r\n  const { displayData, downloadData } = useMemo(() => {\r\n    if (!chartData) return { displayData: null, downloadData: null }\r\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\r\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\r\n    const minimumData: Point[] = []\r\n    for (const point of increasingX) {\r\n      let last: Point | undefined\r\n      while ((last = minimumData.pop())) {\r\n        if (last.y > point.y) {\r\n          minimumData.push(last)\r\n          break\r\n        }\r\n      }\r\n      minimumData.push(point)\r\n    }\r\n\r\n    // Note:\r\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\r\n    // It could be faster too since there're no empty entries in `minimumData`.\r\n    if (minimumData[0]?.x !== increasingX[0]?.x)\r\n      increasingX[0].min = minimumData[0].y\r\n    minimumData.forEach(x => { x.min = x.y })\r\n\r\n    const downloadData = {\r\n      minimum: minimumData.map(({ x, y }) => [x, y]),\r\n      allData: increasingX.map(({ x, y }) => [x, y]),\r\n    }\r\n    return { displayData: increasingX, downloadData }\r\n  }, [chartData])\r\n\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\" >Optimization Target vs</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <DropdownButton title={plotBase ? KeyMap.get(plotBase) : \"Not Selected\"}\r\n            color={plotBase ? \"success\" : \"primary\"}\r\n            disabled={disabled}\r\n          >\r\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>Unselect</MenuItem>\r\n            <Divider />\r\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\r\n          </DropdownButton>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\r\n            <Info />\r\n          </Tooltip>\r\n        </Grid>\r\n        {!!downloadData && <Grid item>\r\n          <Button startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n            color={showMin ? \"success\" : \"secondary\"}\r\n            onClick={() => setshowMin(!showMin)}>Show Min Stat Threshold</Button>\r\n        </Grid>}\r\n        {!!downloadData && <Grid item>\r\n          <Button color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>Download Data</Button>\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    {!!displayData && <Divider />}\r\n    {chartData && !!displayData && <CardContent>\r\n      <Collapse in={!!downloadData && showDownload}>\r\n        <CardDark sx={{ mb: 2 }}>\r\n          <CardContent>\r\n            <Typography>Min Data</Typography>\r\n            <DataDisplay data={downloadData?.minimum} />\r\n            <Typography>All Data</Typography>\r\n            <DataDisplay data={downloadData?.allData} />\r\n          </CardContent>\r\n        </CardDark>\r\n      </Collapse>\r\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\r\n    </CardContent>}\r\n  </CardLight >\r\n}\r\nconst TextArea = styled(\"textarea\")({\r\n  width: \"100%\",\r\n  fontFamily: \"monospace\",\r\n  resize: \"vertical\",\r\n  minHeight: \"5em\"\r\n})\r\nfunction DataDisplay({ data, }: { data?: object }) {\r\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\r\n    const target = e.target as HTMLTextAreaElement;\r\n    target.selectionStart = 0;\r\n    target.selectionEnd = target.value.length;\r\n  }} />\r\n}\r\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\r\n  displayData: Point[],\r\n  plotNode: NumNode,\r\n  valueNode: NumNode,\r\n  showMin: boolean\r\n}) {\r\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\r\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\r\n  return <ResponsiveContainer width=\"100%\" height={600}>\r\n    <ComposedChart data={displayData}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\r\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\r\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\r\n      <Legend />\r\n      <Scatter name=\"Optimization Target\" dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\r\n      {showMin && <Line name=\"Minimum Stat Requirement Threshold\" dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n}\r\n","import { Replay } from '@mui/icons-material';\r\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport StatIcon, { uncoloredEleIcons } from '../../../../../Components/StatIcon';\r\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\r\nimport KeyMap from '../../../../../KeyMap';\r\nimport { allElementsWithPhy } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\r\n\r\nexport default function MainStatSelectionCard({ disabled = false, }: {\r\n  disabled?: boolean\r\n}) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\r\n      const numSel = mainStatKeys[slotKey].length\r\n      return <Box key={slotKey}>\r\n        <Divider />\r\n        <CardContent sx={{ pt: 1 }}>\r\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\r\n              <span>{artifactSlotIcon(slotKey)}</span>\r\n            </BootstrapTooltip>\r\n            <Box flexGrow={1}>\r\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\r\n            </Box>\r\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\r\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\r\n              <Replay />\r\n            </Button>\r\n          </Box>\r\n          <Grid container spacing={1}>\r\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\r\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\r\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\r\n                ? element ?? \"success\"\r\n                : \"secondary\"\r\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\r\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong>{KeyMap.getArtStr(mainStatKey)}</strong></Typography>} disableInteractive>\r\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\r\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\r\n                    {element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}\r\n                  </Button>\r\n                </BootstrapTooltip>\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n        </CardContent>\r\n      </Box>\r\n    })}\r\n  </Box >\r\n}\r\n","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CardLight from \"../../../../../Components/Card/CardLight\"\r\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\r\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\r\nimport { DataContext } from \"../../../../../Context/DataContext\"\r\nimport { input } from \"../../../../../Formula\"\r\nimport { StatKey } from \"../../../../../KeyMap\"\r\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\r\nimport useBuildSetting from \"../useBuildSetting\"\r\n\r\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\r\n\r\n  const statKeys = useMemo(() => {\r\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n    const charEle = data.get(input.charEle).value as ElementKey\r\n    statKeys.push(`${charEle}_dmg_`)\r\n    return statKeys\r\n  }, [data])\r\n\r\n\r\n  return <Box>\r\n    <CardLight>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography>{t`tabOptimize.constraintFilter.title`}</Typography>\r\n        <InfoTooltip title={<Typography>{t`tabOptimize.constraintFilter.tooltip`}</Typography>} />\r\n      </CardContent>\r\n    </CardLight>\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\r\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\r\n    </Box>\r\n  </Box>\r\n}\r\n","import useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport const defThreads = navigator.hardwareConcurrency || 4\r\n\r\nexport function initialTabOptimizeDBState(): {\r\n  equipmentPriority: CharacterKey[],\r\n  threads: number,\r\n} {\r\n  return {\r\n    equipmentPriority: [],\r\n    threads: defThreads\r\n  }\r\n}\r\n\r\nexport function useOptimizeDBState() {\r\n  return useDBState(\"TabOptimize\", initialTabOptimizeDBState)\r\n}\r\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\r\nimport CardDark from \"../../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\r\nimport { CharacterSelectionModal } from \"../../../../../Components/Character/CharacterSelectionModal\";\r\nimport CloseButton from \"../../../../../Components/CloseButton\";\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\r\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\r\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\r\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\r\nimport { ICachedCharacter } from \"../../../../../Types/character\";\r\nimport { CharacterKey } from \"../../../../../Types/consts\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\nimport { useOptimizeDBState } from \"../DBState\";\r\n\r\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useOptimizeDBState()\r\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\r\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\r\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\r\n\r\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    var element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const removePrio = useCallback((fromIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    arr.splice(fromIndex, 1)\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\r\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\r\n\r\n  const numAbove = useMemo(() => {\r\n    let numAbove = equipmentPriority.length\r\n    const index = equipmentPriority.indexOf(characterKey)\r\n    if (index >= 0) numAbove = index\r\n    return numAbove\r\n  }, [characterKey, equipmentPriority])\r\n  const numUseEquippedChar = useMemo(() => {\r\n    return database.chars.keys.length - 1 - numAbove\r\n  }, [numAbove, database])\r\n  const numUnlisted = useMemo(() => {\r\n    return database.chars.keys.length - equipmentPriority.length\r\n  }, [equipmentPriority, database])\r\n\r\n  return <Box display=\"flex\" gap={1}>\r\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\r\n      <CardContent>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\"><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.title\">Character Priority for Equipped Artifacts</Trans></Typography>\r\n          </Grid>\r\n          <Grid item sx={{ mb: -1 }}>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <CardLight sx={{ mb: 1 }}>\r\n          <CardContent>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\r\n          </CardContent>\r\n        </CardLight>\r\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n          {equipmentPriority.map((ck, i) =>\r\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\r\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.clearList\">Clear List</Trans></Button>\r\n          </Box>\r\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark ></ModalWrapper>\r\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\r\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\r\n        <Box>\r\n          <span><Trans t={t} i18nKey=\"tabOptimize.useEquipped.title\">Use Equipped Artifacts</Trans></span>\r\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\r\n        </Box>\r\n      </Button>\r\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n\r\nconst itemSize = 60\r\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\r\n  characterKey: CharacterKey,\r\n  rank: number,\r\n  maxRank: number,\r\n  setRank: (r: number | undefined) => void,\r\n  onRemove: () => void,\r\n  numAbove: number,\r\n}) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const character = useCharacter(characterKey)\r\n  const onClick = useCharSelectionCallback()\r\n  if (!character) return null\r\n  const { equippedWeapon, equippedArtifacts } = character\r\n  return <CardLight sx={{ p: 1 }}  >\r\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\r\n      <SqBadge color=\"info\">\r\n        <Typography>#{rank}</Typography>\r\n      </SqBadge>\r\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\r\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.curr\">Current character</Trans>\r\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\r\n            <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\r\n      </SqBadge>\r\n      <Box>\r\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\r\n          <CustomNumberInputButtonGroupWrapper >\r\n            <CustomNumberInput onChange={setRank} value={rank}\r\n              // startAdornment=\"Rank:\"\r\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\r\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\r\n          </CustomNumberInputButtonGroupWrapper>\r\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\r\n            <KeyboardDoubleArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\r\n            <KeyboardArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\r\n            <KeyboardArrowDown />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\r\n            <KeyboardDoubleArrowDown />\r\n          </Button>\r\n          <Button color=\"error\" onClick={onRemove}>\r\n            <Close />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Box>\r\n    <Grid container columns={7} spacing={1}>\r\n      <Grid item xs={1} >\r\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\r\n      </Grid>\r\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\r\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\r\n    </Grid>\r\n\r\n  </CardLight>\r\n}\r\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const filter = useCallback((char?: ICachedCharacter) => {\r\n    if (!char) return false\r\n    return !list.includes(char.key)\r\n  }, [list])\r\n  return <>\r\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\r\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\r\n      <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.add\">Add character to list</Trans>\r\n    </Button>\r\n  </>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\n\r\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\r\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\r\n    <Box>\r\n      <span><Trans t={t} i18nKey=\"tabOptimize.useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\r\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\r\n    </Box>\r\n  </Button>\r\n}\r\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\r\nimport { input } from \"../../../../Formula\";\r\nimport { computeUIData } from \"../../../../Formula/api\";\r\nimport { formulaString } from \"../../../../Formula/debug\";\r\nimport { Data, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\r\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\r\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\r\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\r\n\r\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\r\nexport const dynamicData = {\r\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\r\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\r\n}\r\n\r\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\r\n  const result: ArtifactsBySlot = {\r\n    base: {},\r\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\r\n  }\r\n  const keys = new Set<string>()\r\n\r\n  for (const art of arts) {\r\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n\r\n    const data: ArtifactBuildData = {\r\n      id: art.id, set: art.setKey,\r\n      values: {\r\n        [art.setKey]: 1,\r\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\r\n        ...Object.fromEntries(art.substats.map(substat =>\r\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\r\n      },\r\n    }\r\n    delete data.values[\"\"]\r\n    result.values[art.slotKey].push(data)\r\n    Object.keys(data.values).forEach(x => keys.add(x))\r\n  }\r\n  result.base = objectKeyMap([...keys], _ => 0)\r\n  if (allowPartial)\r\n    for (const value of Object.values(result.values))\r\n      value.push({ id: \"\", values: {} })\r\n  return result\r\n}\r\n\r\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\r\n  const stats = { ...base }\r\n  for (const art of arts) {\r\n    for (const [key, value] of Object.entries(art.values)) {\r\n      stats[key] = (stats[key] ?? 0) + value\r\n    }\r\n  }\r\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\r\n  const uiData = computeUIData([data])\r\n  return {\r\n    base, arts, stats,\r\n    data, uiData,\r\n    nodes: nodes.map(formulaString),\r\n    results: nodes.map(node => uiData.get(node)),\r\n  }\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\r\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\r\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BackgroundWorker\";\r\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\r\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\r\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\r\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\r\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\r\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\r\nimport { uiInput as input } from '../../../../Formula/index';\r\nimport { optimize } from '../../../../Formula/optimization';\r\nimport { NumNode } from '../../../../Formula/type';\r\nimport { UIData } from '../../../../Formula/uiData';\r\nimport KeyMap from '../../../../KeyMap';\r\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\r\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\r\nimport useDBState from '../../../../ReactHooks/useDBState';\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\r\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\r\nimport { initGlobalSettings } from '../../../../stateInit';\r\nimport { ICachedArtifact } from '../../../../Types/artifact';\r\nimport { CharacterKey } from '../../../../Types/consts';\r\nimport { objPathValue, range } from '../../../../Util/Util';\r\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\r\nimport { maxBuildsToShowList } from './Build';\r\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\r\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\r\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\r\nimport BonusStatsCard from './Components/BonusStatsCard';\r\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\r\nimport BuildDisplayItem from './Components/BuildDisplayItem';\r\nimport ChartCard, { ChartData } from './Components/ChartCard';\r\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\r\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\r\nimport StatFilterCard from './Components/StatFilterCard';\r\nimport UseEquipped from './Components/UseEquipped';\r\nimport UseExcluded from './Components/UseExcluded';\r\nimport { defThreads, useOptimizeDBState } from './DBState';\r\nimport { compactArtifacts, dynamicData } from './foreground';\r\nimport useBuildSetting from './useBuildSetting';\r\n\r\nexport default function TabBuild() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\r\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\r\n  const generatingBuilds = buildStatus.type !== \"inactive\"\r\n\r\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\r\n\r\n  const [artsDirty, setArtsDirty] = useForceUpdate()\r\n\r\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useOptimizeDBState()\r\n  const maxWorkers = threads > defThreads ? defThreads : threads\r\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\r\n\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const onClickTeammate = useCharSelectionCallback()\r\n\r\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\r\n\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\r\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\r\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\r\n\r\n  //register changes in artifact database\r\n  useEffect(() =>\r\n    database.arts.followAny(setArtsDirty),\r\n    [setArtsDirty, database])\r\n\r\n  // Provides a function to cancel the work\r\n  const cancelToken = useRef(() => { })\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => cancelToken.current(), [])\r\n  const generateBuilds = useCallback(async () => {\r\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n    if (!characterKey || !optimizationTarget) return\r\n\r\n    let cantTakeList: CharacterKey[] = []\r\n    if (useEquippedArts) {\r\n      const index = equipmentPriority.indexOf(characterKey)\r\n      if (index < 0) cantTakeList = [...equipmentPriority]\r\n      else cantTakeList = equipmentPriority.slice(0, index)\r\n    }\r\n    const filteredArts = database.arts.values.filter(art => {\r\n      if (art.level < levelLow) return false\r\n      if (art.level > levelHigh) return false\r\n      const mainStats = mainStatKeys[art.slotKey]\r\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\r\n\r\n      // If its equipped on the selected character, bypass the check\r\n      if (art.location === characterKey) return true\r\n\r\n      if (art.exclude && !useExcludedArts) return false\r\n      if (art.location && !useEquippedArts) return false\r\n      if (art.location && useEquippedArts && cantTakeList.includes(art.location)) return false\r\n      return true\r\n    })\r\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\r\n\r\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\r\n    if (!teamData) return\r\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\r\n    if (!workerData) return\r\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\r\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\r\n    if (!optimizationTargetNode) return\r\n    const targetNode = optimizationTargetNode\r\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\r\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\r\n      return { value: input.total[key], minimum: value }\r\n    }).filter(x => x.value && x.minimum > -Infinity)\r\n\r\n    setchartData(undefined)\r\n\r\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\r\n\r\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\r\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\r\n\r\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\r\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\r\n    if (plotBase) {\r\n      nodes.push(input.total[plotBase])\r\n      minimum.push(-Infinity)\r\n    }\r\n\r\n    const prepruneArts = arts\r\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\r\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\r\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\r\n    }))\r\n    nodes = optimize(nodes, {}, _ => false)\r\n\r\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\r\n    optimizationTargetNode = nodes.pop()!\r\n\r\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\r\n\r\n    const minFilterCount = 8_000_000, maxRequestFilterInFlight = maxWorkers * 4\r\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\r\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\r\n    const workers: Worker[] = []\r\n\r\n    function fetchContinueWork(): WorkerCommand {\r\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: wrap.buildValues[maxBuildsToShow - 1] }\r\n    }\r\n    function fetchPruningWork(): WorkerCommand | undefined {\r\n      const { done, value } = unprunedFilters.next()\r\n      return done ? undefined : {\r\n        command: \"split\", minCount: minFilterCount,\r\n        threshold: wrap.buildValues[maxBuildsToShow - 1], filter: value,\r\n      }\r\n    }\r\n    function fetchRequestWork(): WorkerCommand | undefined {\r\n      const filter = requestFilters.pop()\r\n      return !filter ? undefined : {\r\n        command: \"iterate\",\r\n        threshold: wrap.buildValues[maxBuildsToShow - 1], filter\r\n      }\r\n    }\r\n\r\n    const filters = nodes\r\n      .map((value, i) => ({ value, min: minimum[i] }))\r\n      .filter(x => x.min > -Infinity)\r\n\r\n    const finalizedList: Promise<FinalizeResult>[] = []\r\n    for (let i = 0; i < maxWorkers; i++) {\r\n      const worker = new Worker()\r\n\r\n      const setup: Setup = {\r\n        command: \"setup\",\r\n        id: i, arts,\r\n        optimizationTarget: optimizationTargetNode,\r\n        plotBase: plotBaseNode,\r\n        maxBuilds: maxBuildsToShow,\r\n        filters\r\n      }\r\n      worker.postMessage(setup, undefined)\r\n      if (i === 0) {\r\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\r\n        worker.postMessage(countCommand, undefined)\r\n      }\r\n      let finalize: (_: FinalizeResult) => void\r\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\r\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\r\n        switch (data.command) {\r\n          case \"interim\":\r\n            status.tested += data.tested\r\n            status.failed += data.failed\r\n            status.skipped += data.skipped\r\n            if (data.buildValues) {\r\n              wrap.buildValues.push(...data.buildValues)\r\n              wrap.buildValues.sort((a, b) => b - a).splice(maxBuildsToShow)\r\n            }\r\n            break\r\n          case \"split\":\r\n            if (data.filter) {\r\n              requestFilters.push(data.filter)\r\n              splittingWorkers.add(data.id)\r\n            } else splittingWorkers.delete(data.id)\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"iterate\":\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"finalize\":\r\n            worker.terminate()\r\n            finalize(data);\r\n            return\r\n          case \"count\":\r\n            const [pruned, prepruned] = data.counts\r\n            status.total = prepruned\r\n            status.skipped += prepruned - pruned\r\n            return\r\n          default: console.log(\"DEBUG\", data)\r\n        }\r\n        while (idleWorkers.length) {\r\n          const id = idleWorkers.pop()!, worker = workers[id]\r\n          let work: WorkerCommand | undefined\r\n          if (requestFilters.length < maxRequestFilterInFlight) {\r\n            work = fetchPruningWork()\r\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\r\n          }\r\n          if (!work) work = fetchRequestWork()\r\n          if (work) worker.postMessage(work)\r\n          else {\r\n            idleWorkers.push(id)\r\n            if (idleWorkers.length === 8 * maxWorkers) {\r\n              const command: WorkerCommand = { command: \"finalize\" }\r\n              workers.forEach(worker => worker.postMessage(command))\r\n            }\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      workers.push(worker)\r\n      cancelled.then(() => worker.terminate())\r\n      finalizedList.push(finalized)\r\n    }\r\n    for (let i = 0; i < 7; i++)\r\n      idleWorkers.push(...range(0, maxWorkers - 1))\r\n\r\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\r\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\r\n    clearInterval(buildTimer)\r\n    cancelToken.current = () => { }\r\n\r\n    if (!results) {\r\n      status.tested = 0\r\n      status.failed = 0\r\n      status.skipped = 0\r\n      status.total = 0\r\n    } else {\r\n      if (plotBase) {\r\n        const plotData = mergePlot(results.map(x => x.plotData!))\r\n        const plotBaseNode = input.total[plotBase] as NumNode\r\n        let data = Object.values(plotData)\r\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\r\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\r\n        setchartData({\r\n          valueNode: targetNode,\r\n          plotNode: plotBaseNode,\r\n          data\r\n        })\r\n      }\r\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\r\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\r\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\r\n    }\r\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\r\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n\r\n  const setPlotBase = useCallback(plotBase => {\r\n    buildSettingDispatch({ plotBase })\r\n    setchartData(undefined)\r\n  }, [buildSettingDispatch])\r\n  const dataContext: dataContextObj | undefined = useMemo(() => {\r\n    return data && teamData && { data, teamData }\r\n  }, [data, teamData])\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\r\n    {/* Build Generator Editor */}\r\n    {dataContext && <DataContext.Provider value={dataContext}>\r\n\r\n      <Grid container spacing={1} >\r\n        {/* 1*/}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          {/* character card */}\r\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\r\n        </Grid>\r\n\r\n        {/* 2 */}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <CardLight>\r\n            <CardContent  >\r\n              <Typography gutterBottom>Main Stat</Typography>\r\n              <BootstrapTooltip placement=\"top\" title={<Typography><strong>Level Assumption</strong> changes mainstat value to be at least a specific level. Does not change substats.</Typography>}>\r\n                <Box>\r\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\r\n                </Box>\r\n              </BootstrapTooltip>\r\n            </CardContent>\r\n            {/* main stat selector */}\r\n            <MainStatSelectionCard disabled={generatingBuilds} />\r\n          </CardLight>\r\n          <BonusStatsCard />\r\n        </Grid>\r\n\r\n        {/* 3 */}\r\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <ArtifactSetConfig disabled={generatingBuilds} />\r\n\r\n          {/* use excluded */}\r\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\r\n\r\n          {/* use equipped */}\r\n          <UseEquipped disabled={generatingBuilds} />\r\n\r\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`tabOptimize.allowPartial`}</Button>\r\n          { /* Level Filter */}\r\n          <CardLight>\r\n            <CardContent>Artifact Level Filter</CardContent>\r\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\r\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\r\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\r\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\r\n              disabled={generatingBuilds}\r\n            />\r\n          </CardLight>\r\n\r\n          {/*Minimum Final Stat Filter */}\r\n          <StatFilterCard disabled={generatingBuilds} />\r\n\r\n        </Grid>\r\n      </Grid>\r\n      {/* Footer */}\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1} >\r\n          <ButtonGroup>\r\n            <Button\r\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\r\n              color={characterKey ? \"success\" : \"warning\"}\r\n              onClick={generateBuilds}\r\n              startIcon={<TrendingUp />}\r\n            >Generate Builds</Button>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\r\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\r\n            </DropdownButton>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\r\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\r\n            </DropdownButton>\r\n            <Button\r\n              disabled={!generatingBuilds}\r\n              color=\"error\"\r\n              onClick={() => cancelToken.current()}\r\n              startIcon={<Close />}\r\n            >Cancel</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Grid item>\r\n          <span>Optimization Target: </span>\r\n          {<OptimizationTargetSelector\r\n            optimizationTarget={optimizationTarget}\r\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\r\n            disabled={!!generatingBuilds}\r\n          />}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\r\n      {tcMode && <Box >\r\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\r\n      </Box>}\r\n      <CardLight>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\r\n            <Typography sx={{ flexGrow: 1 }}>\r\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\r\n                : <span>Select a character to generate builds.</span>}\r\n            </Typography>\r\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\r\n          </Box>\r\n          <Grid container display=\"flex\" spacing={1}>\r\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\r\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\r\n            <Grid item flexGrow={1} />\r\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup></Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\r\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\r\n      </OptimizationTargetContext.Provider>\r\n    </DataContext.Provider>}\r\n  </Box>\r\n}\r\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled }: {\r\n  buildsArts: ICachedArtifact[][],\r\n  characterKey?: \"\" | CharacterKey,\r\n  data?: UIData,\r\n  compareData: boolean,\r\n  disabled: boolean,\r\n}) {\r\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\r\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    {buildsArts?.map((build, index) => characterKey && data && <DataContextWrapper\r\n      key={index + build.join()}\r\n      characterKey={characterKey}\r\n      build={build}\r\n      oldData={data}\r\n    >\r\n      <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled} />\r\n    </DataContextWrapper>\r\n    )}\r\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled])\r\n  return list\r\n}\r\n\r\ntype Prop = {\r\n  children: React.ReactNode\r\n  characterKey: CharacterKey,\r\n  build: ICachedArtifact[],\r\n  oldData: UIData,\r\n}\r\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\r\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\r\n  if (!providerValue) return null\r\n  return <DataContext.Provider value={providerValue}>\r\n    {children}\r\n  </DataContext.Provider>\r\n}\r\n","import { Close, Difference } from \"@mui/icons-material\"\r\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\r\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { DataContext } from \"../../../../Context/DataContext\"\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\r\nimport { objectMap } from \"../../../../Util/Util\"\r\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\r\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\r\n\r\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [show, onShow, onHide] = useBoolState(false)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const build = useMemo(() => {\r\n    const newArt = database.arts.get(artId ?? \"\")\r\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\r\n    return Object.values(artmap)\r\n  }, [database, equippedArtifacts, artId])\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\r\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\r\n  return <>\r\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\r\n      <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n        {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\r\n          <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\r\n        </DataContext.Provider>}\r\n      </Suspense>\r\n    </ModalWrapper>\r\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\r\n    </Tooltip>\r\n  </>\r\n}\r\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\r\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\r\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\r\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\r\nimport { SlotKey } from \"../../../../Types/consts\"\r\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\r\n\r\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\r\n\r\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\r\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\r\n\r\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\r\n\r\n  const brPt = useMediaQueryUp()\r\n\r\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\r\n  const artIdList = useMemo(() => {\r\n    const filterFunc = filterFunction(filterOption, filterConfigs)\r\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\r\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\r\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\r\n        </Suspense>\r\n        <Box mt={1}>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\r\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\r\n              {artIdList.map(id =>\r\n                <Grid item key={id} xs={1} >\r\n                  <ArtifactCard\r\n                    artifactId={id}\r\n                    extraButtons={<CompareBuildButton artId={id} />}\r\n                    onClick={clickHandler}\r\n                  />\r\n                </Grid>)}\r\n            </Grid>\r\n          </Suspense>\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\r\nimport usePromise from \"../../../../ReactHooks/usePromise\"\r\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\r\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\r\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\r\nimport { weaponFilterConfigs, weaponSortConfigs } from '../../../../Util/WeaponSort'\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\n\r\nconst rarityHandler = handleMultiSelect([...allRarities])\r\n\r\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id: string) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n\r\n  const filterConfigs = useMemo(() => weaponSheets && weaponFilterConfigs(weaponSheets), [weaponSheets])\r\n  const sortConfigs = useMemo(() => weaponSheets && weaponSortConfigs(weaponSheets), [weaponSheets])\r\n\r\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = useMemo(() => (filterConfigs && sortConfigs && dbDirty && database.weapons.values\r\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, filterConfigs))\r\n    .sort(sortFunction(\"level\", false, sortConfigs))\r\n    .map(weapon => weapon.id)) ?? []\r\n    , [dbDirty, database, filterConfigs, sortConfigs, rarity, weaponTypeKey, deferredSearchTerm])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Grid container spacing={1} mb={1}>\r\n          <Grid item>\r\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\r\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\r\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\r\n              </ToggleButton>)}\r\n            </SolidToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"page_weapon:weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          {weaponIdList.map(weaponId =>\r\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n              <WeaponCard\r\n                weaponId={weaponId}\r\n                onClick={clickHandler}\r\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\r\n              />\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Settings, SwapHoriz } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from \"@mui/system\";\r\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\r\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\r\nimport CardDark from '../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\r\nimport ModalWrapper from '../../../../Components/ModalWrapper';\r\nimport PercentBadge from '../../../../Components/PercentBadge';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../Context/DataContext';\r\nimport Artifact from '../../../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../Formula';\r\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\r\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\r\nimport useBoolState from '../../../../ReactHooks/useBoolState';\r\nimport useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport usePromise from '../../../../ReactHooks/usePromise';\r\nimport { initCharMeta } from '../../../../stateInit';\r\nimport { allSubstatKeys } from '../../../../Types/artifact';\r\nimport { allSlotKeys, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\r\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\r\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\r\nimport ArtifactSwapModal from './ArtifactSwapModal';\r\nimport WeaponSwapModal from './WeaponSwapModal';\r\n\r\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\r\n\r\nexport default function EquipmentSection() {\r\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { teamData, data } = useContext(DataContext)\r\n  const weaponSheet = teamData[characterKey]?.weaponSheet\r\n  const [weaponId, setweaponId] = useState(\"\")\r\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\r\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\r\n\r\n  //triggers when character swap weapons\r\n  useEffect(() => {\r\n    if (weaponId && weaponId !== equippedWeapon)\r\n      setweaponId(equippedWeapon)\r\n  }, [weaponId, equippedWeapon])\r\n\r\n  const theme = useTheme();\r\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\r\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  const deferredRvFilter = useDeferredValue(rvFilter)\r\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\r\n  return <Box >\r\n    <Suspense fallback={false}>\r\n      <WeaponEditor\r\n        weaponId={weaponId}\r\n        footer\r\n        onClose={hideWeapon}\r\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\r\n      />\r\n    </Suspense>\r\n    <Grid container spacing={1}>\r\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        {weaponDoc && weaponDoc}\r\n        <ArtifactSectionCard />\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\r\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\r\n        </Grid>\r\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\r\n          {!!data.get(input.art[slotKey].id).value ?\r\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\r\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\r\n            <ArtSwapCard slotKey={slotKey} />}\r\n        </Grid>)}\r\n      </Grid>\r\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\r\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\r\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <ArtifactSectionCard />\r\n        </Grid>\r\n      </Grid>}\r\n    </Grid>\r\n  </Box>\r\n}\r\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\r\n    <CardContent>\r\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <Box sx={{\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    }}\r\n    >\r\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\r\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\r\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\r\n      </Button>\r\n    </Box>\r\n  </CardLight>\r\n}\r\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\r\n  </>\r\n}\r\nfunction ArtifactSectionCard() {\r\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\r\n  const unequipArts = useCallback(() => {\r\n    if (!character) return\r\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\r\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\r\n  }, [character, database, equippedArtifacts])\r\n\r\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\r\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\r\n\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const deferredrvFilter = useDeferredValue(rvFilter)\r\n  const { rvField, rvmField } = useMemo(() => {\r\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\r\n      const art = database.arts.get(artid)\r\n      if (art) {\r\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\r\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\r\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\r\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\r\n\r\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\r\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\r\n      }\r\n      return a\r\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\r\n    const rvField: IFieldDisplay = {\r\n      text: t`artifact:editor.curSubEff`,\r\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\r\n    }\r\n    const rvmField: IFieldDisplay = {\r\n      text: t`artifact:editor.maxSubEff`,\r\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\r\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\r\n    }\r\n    return { rvField, rvmField }\r\n  }, [t, deferredrvFilter, equippedArtifacts, database])\r\n\r\n  return <CardLight>\r\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\r\n    <CardContent >\r\n      <Stack spacing={1}>\r\n        <CardDark >\r\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\r\n          <ModalWrapper open={show} onClose={onHide}>\r\n            <CardDark>\r\n              <CardContent>\r\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\r\n              </CardContent>\r\n            </CardDark>\r\n          </ModalWrapper>\r\n          <FieldDisplayList >\r\n            <BasicFieldDisplay field={rvField} component={ListItem} />\r\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\r\n          </FieldDisplayList>\r\n        </CardDark>\r\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\r\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\r\n          </CardDark>)\r\n        )}\r\n      </Stack>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Badge, Box, CardActionArea, CardContent, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Assets from \"../../../../Assets/Assets\";\r\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../../../Components/SqBadge\";\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\r\nimport { uncoloredEleIcons } from \"../../../../Components/StatIcon\";\r\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../../../Context/DataContext\";\r\nimport CharacterSheet, { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\r\nimport useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport { initCharMeta } from \"../../../../stateInit\";\r\nimport { allSlotKeys, ElementKey } from \"../../../../Types/consts\";\r\nimport { range } from \"../../../../Util/Util\";\r\nimport EquipmentSection from \"./EquipmentSection\";\r\n\r\nexport default function TabOverview() {\r\n  const scrollRef = useRef<HTMLDivElement>()\r\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\r\n\r\n  return <Stack spacing={1}>\r\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\r\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\r\n        <CharacterProfileCard />\r\n      </Grid>\r\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <EquipmentRow onClick={onScroll} />\r\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n          <StatDisplayComponent />\r\n        </CardLight>\r\n      </Grid>\r\n    </Grid >\r\n    <Box ref={scrollRef}>\r\n      <EquipmentSection />\r\n    </Box>\r\n  </Stack>\r\n}\r\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\r\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n\r\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\r\n    <Grid item xs={1}>\r\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\r\n    </Grid>\r\n    {allSlotKeys.map(slotKey =>\r\n      <Grid item key={slotKey} xs={1} >\r\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\r\n      </Grid>)}\r\n  </Grid>\r\n}\r\n/* Image card with star and name and level */\r\nfunction CharacterProfileCard() {\r\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const navigate = useNavigate()\r\n  const charEle = data.get(input.charEle).value as ElementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = data.get(input.lvl).value\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n  const tlvl = {\r\n    auto: data.get(input.total.auto).value,\r\n    skill: data.get(input.total.skill).value,\r\n    burst: data.get(input.total.burst).value,\r\n  }\r\n  const tBoost = {\r\n    auto: data.get(input.bonus.auto).value,\r\n    skill: data.get(input.bonus.skill).value,\r\n    burst: data.get(input.bonus.burst).value,\r\n  }\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  return <CardLight sx={{ height: \"100%\" }} >\r\n    <Box sx={{ position: \"relative\" }}>\r\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\r\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\r\n          <StarsDisplay stars={characterSheet.rarity} colored />\r\n        </Typography>\r\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\r\n          <Chip color={charEle} sx={{ height: \"auto\" }}\r\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n              {uncoloredEleIcons[charEle]}\r\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\r\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n            </Typography>} />\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\r\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\r\n            {favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\r\n          <SqBadge>{CharacterSheet.getLevelString(level, ascension)}</SqBadge>\r\n        </Typography>\r\n      </Box>\r\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n    </Box>\r\n    <CardContent>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\r\n        <Grid container spacing={1} mt={-1}>\r\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\r\n            <Grid item xs={4} key={tKey}>\r\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                sx={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  \"& > .MuiBadge-badge\": {\r\n                    fontSize: \"1.25em\",\r\n                    padding: \".25em .4em\",\r\n                    borderRadius: \".5em\",\r\n                    lineHeight: 1,\r\n                    height: \"1.25em\"\r\n                  }\r\n                }}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\r\n              </Badge>\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n      <Grid container spacing={1}>\r\n        {range(1, 6).map(i =>\r\n          <Grid item xs={4} key={i}>\r\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\r\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\r\n                sx={{\r\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\r\n                }}\r\n                width=\"100%\" height=\"auto\" />\r\n            </CardActionArea>\r\n          </Grid>)}\r\n      </Grid>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\r\n        <Grid container columns={3} spacing={1}>\r\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n    </CardContent>\r\n  </CardLight >\r\n}\r\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/system\";\r\nimport React, { useCallback, useContext, useMemo } from 'react';\r\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\r\nimport CardDark from \"../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\r\nimport { DataContext } from '../../../Context/DataContext';\r\nimport { uiInput as input } from \"../../../Formula\";\r\nimport { NumNode } from \"../../../Formula/type\";\r\nimport { NodeDisplay } from '../../../Formula/uiData';\r\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\r\nimport { ElementKey } from \"../../../Types/consts\";\r\nimport { DocumentSection } from \"../../../Types/sheet\";\r\nimport { range } from \"../../../Util/Util\";\r\n\r\nconst talentSpacing = {\r\n  xs: 12,\r\n  sm: 6,\r\n  md: 4\r\n}\r\n\r\nexport default function CharacterTalentPane() {\r\n  const { character, characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(character.key)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\r\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n\r\n  const theme = useTheme();\r\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\r\n    <SkillDisplayCard\r\n      talentKey={`constellation${i}` as TalentSheetElementKey}\r\n      subtitle={`Constellation Lv. ${i}`}\r\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\r\n    />), [constellation, characterDispatch])\r\n  return <>\r\n    <ReactionDisplay />\r\n    <Grid container spacing={1}>\r\n      {/* constellations for 4column */}\r\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\r\n        {/* auto, skill, burst */}\r\n        {skillBurstList.map(([tKey, tText]) =>\r\n          <Grid item key={tKey} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>)}\r\n        {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"sprint\"\r\n            subtitle=\"Alternative Sprint\"\r\n          />\r\n        </Grid>}\r\n        {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"passive\"\r\n            subtitle=\"Passive\"\r\n          />\r\n        </Grid>}\r\n        {/* passives */}\r\n        {passivesList.map(([tKey, tText, asc]) => {\r\n          let enabled = ascension >= asc\r\n          if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\r\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n      {/* constellations for < 4 columns */}\r\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\r\n        <Grid item xs={12}>\r\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        </Grid>\r\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\r\n      </Grid>}\r\n    </Grid>\r\n  </>\r\n}\r\nfunction ReactionDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {Object.entries(reaction).map(([key, node]) => {\r\n          return <Grid item key={key}>\r\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\r\n              <NodeFieldDisplay node={node} />\r\n            </CardContent></CardDark>\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  talentKey: TalentSheetElementKey,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\r\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\r\n\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\r\n    const level = data.get(input.total[talentKey]).value\r\n    const asc = data.get(input.asc).value\r\n\r\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\r\n      {range(1, talentLimits[asc]).map(i =>\r\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\r\n    </DropdownButton>\r\n  }\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\r\n\r\n  // Hide header if the header matches the current talent\r\n  const hideHeader = (section: DocumentSection): boolean => {\r\n    let headerAction = section.header?.action\r\n    if (headerAction && (typeof headerAction !== \"string\")) {\r\n      const key: string = headerAction.props.children.props.key18\r\n      return key.includes(talentKey)\r\n    }\r\n    return false\r\n  }\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { PersonAdd } from \"@mui/icons-material\";\r\nimport { CardContent, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport CharacterAutocomplete from \"../../../Components/Character/CharacterAutocomplete\";\r\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\r\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\r\nimport { resonanceSheets } from \"../../../Data/Resonance\";\r\nimport { uiInput as input } from \"../../../Formula\";\r\nimport { NodeDisplay } from \"../../../Formula/uiData\";\r\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\r\nimport usePromise from \"../../../ReactHooks/usePromise\";\r\nimport { ElementKey } from \"../../../Types/consts\";\r\nimport { objPathValue, range } from \"../../../Util/Util\";\r\n\r\nexport default function TabTeambuffs() {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <TeamBuffDisplay />\r\n        <ResonanceDisplay />\r\n      </Grid>\r\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\r\n        <TeammateDisplay index={i} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </Box>\r\n}\r\nexport function TeamBuffDisplay() {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const teamBuffs = data.getTeamBuff()\r\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\r\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\r\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\r\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\r\n  if (!nodes.length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Team Buffs</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container>\r\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={n.info.key} >\r\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ResonanceDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  return <>\r\n    {resonanceSheets.map((res, i) => {\r\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\r\n      const title = <span>{res.name} {icon}</span>\r\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\r\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        {res.canShow(data) && <Divider />}\r\n        {res.canShow(data) && <CardContent>\r\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\r\n        </CardContent>}\r\n      </CardLight>\r\n    })}\r\n  </>\r\n}\r\nfunction TeammateDisplay({ index }: { index: number }) {\r\n  const { teamData } = useContext(DataContext)\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\r\n  const teamMateKey = active.team[index]\r\n  const onClickHandler = useCharSelectionCallback()\r\n\r\n  const dataBundle = teamData[teamMateKey]\r\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\r\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\r\n    characterSheet: dataBundle.characterSheet,\r\n    characterDispatch: (state) => {\r\n      if (!teamMateKey) return\r\n      if (!(\"conditional\" in state)) return\r\n      const { conditional } = state\r\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\r\n    }\r\n  }, [active, teamMateKey, dataBundle, characterDispatch])\r\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\r\n    data: dataBundle.target,\r\n    teamData: teamData,\r\n  }, [dataBundle, teamData])\r\n  return <CardLight>\r\n    <CharacterAutocomplete fullWidth value={teamMateKey}\r\n      onChange={charKey => characterDispatch({ type: \"team\", index, charKey })}\r\n      disable={ck => ck === activeCharacterKey || (ck !== \"\" && active.team.includes(ck))}\r\n      labelText={t(\"teammate\", { count: index + 1 })}\r\n      defaultText={t(\"none\")}\r\n      defaultIcon={<PersonAdd />}\r\n      showDefault\r\n    />\r\n    {teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\r\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\r\n        <CharacterCard characterKey={teamMateKey}\r\n          onClickHeader={onClickHandler}\r\n          // Need to wrap these elements with the providers for them to use the correct functions.\r\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharArtifactCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharWeaponCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharTalentCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          isTeammateCard\r\n        />\r\n      </DataContext.Provider>}\r\n    </CharacterContext.Provider>}\r\n  </CardLight>\r\n}\r\nfunction CharArtifactCondDisplay() {\r\n  const { data, } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const sections = useMemo(() => artifactSheets &&\r\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\r\n      .flatMap(([setKey, setNums]) =>\r\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\r\n    , [artifactSheets, data])\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\nfunction CharWeaponCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { teamData } = useContext(DataContext)\r\n  const weaponSheet = teamData[charKey]!.weaponSheet\r\n  if (!weaponSheet.document) return null\r\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\r\n}\r\nfunction CharTalentCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { data, teamData } = useContext(DataContext)\r\n  const characterSheet = teamData[charKey]!.characterSheet\r\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\r\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\n","import { MenuItem } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { sgt } from '../../Data/SheetUtil';\r\n\r\nexport default function TravelerElementSelect() {\r\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const { elementKey = \"anemo\", } = character\r\n\r\n  if (!(\"talents\" in characterSheet.sheet)) return null\r\n\r\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\r\n    {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { BarChart, Calculate, FactCheck, Groups, Person, TrendingUp } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\r\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport useBoolState from '../../ReactHooks/useBoolState';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport useTitle from '../../ReactHooks/useTitle';\r\nimport { allCharacterKeys, CharacterKey } from '../../Types/consts';\r\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\r\nimport CharSelectDropdown from './CharSelectDropdown';\r\nimport FormulaModal from './FormulaModal';\r\nimport LevelSelect from './LevelSelect';\r\nimport StatModal from './StatModal';\r\nimport TabBuild from './Tabs/TabOptimize';\r\nimport TabOverview from './Tabs/TabOverview';\r\nimport TabTalent from './Tabs/TabTalent';\r\nimport TabTeambuffs from './Tabs/TabTeambuffs';\r\nimport TravelerElementSelect from './TravelerElementSelect';\r\n\r\nexport default function CharacterDisplay() {\r\n  const navigate = useNavigate();\r\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\r\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\r\n  if (invalidKey)\r\n    return <Navigate to=\"/characters\" />\r\n\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\r\n    </Suspense>\r\n  </Box>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClose?: () => void,\r\n}\r\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\r\n  const character = useCharacter(characterKey)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const teamData = useTeamData(characterKey)\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\r\n  const { t } = useTranslation()\r\n  useTitle(`${t(`char_${characterKey}_gen:name`)} - ${t(`page_character:tabs.${tab}`)}`)\r\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n      oldData: undefined,\r\n    }\r\n  }, [charUIData, teamData])\r\n\r\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\r\n    if (!character || !characterSheet) return undefined\r\n    return {\r\n      character,\r\n      characterSheet,\r\n      characterDispatch\r\n    }\r\n  }, [character, characterSheet, characterDispatch])\r\n  return <CardDark >\r\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\r\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Box display=\"flex\" >\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\r\n            <CharSelectDropdown />\r\n            <TravelerElementSelect />\r\n            <DetailStatButton />\r\n            <CustomMultiTargetButton />\r\n            <FormulasButton />\r\n          </Box>\r\n          {!!onClose && <CloseButton onClick={onClose} />}\r\n        </Box>\r\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\r\n          <LevelSelect />\r\n          <HitModeToggle size=\"small\" />\r\n          <InfusionAuraDropdown />\r\n          <ReactionToggle size=\"small\" />\r\n        </Box>\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n        <CharacterPanel />\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n      </CardContent></FormulaDataWrapper>\r\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\r\n    }\r\n  </CardDark >\r\n}\r\nfunction CharacterPanel() {\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\r\n    <Routes>\r\n      {/* Character Panel */}\r\n      <Route index element={<TabOverview />} />\r\n      <Route path=\"/talent\" element={<TabTalent />} />\r\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\r\n      <Route path=\"/optimize\" element={<TabBuild />} />\r\n    </Routes>\r\n  </Suspense>\r\n}\r\nfunction TabNav({ tab }: { tab: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <Tabs\r\n    value={tab}\r\n    variant=\"scrollable\"\r\n    allowScrollButtonsMobile\r\n    sx={{\r\n      \"& .MuiTab-root:hover\": {\r\n        transition: \"background-color 0.25s ease\",\r\n        backgroundColor: \"rgba(255,255,255,0.1)\"\r\n      },\r\n    }}\r\n  >\r\n    <Tab sx={{ minWidth: \"25%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\r\n    <Tab sx={{ minWidth: \"25%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\r\n    <Tab sx={{ minWidth: \"25%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\r\n    <Tab sx={{ minWidth: \"25%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\r\n  </Tabs>\r\n}\r\n\r\n\r\nfunction DetailStatButton() {\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>Detailed Stats</Button>\r\n    <StatModal open={open} onClose={onClose} />\r\n  </>\r\n}\r\nfunction FormulasButton() {\r\n  const { onModalOpen } = useContext(FormulaDataContext)\r\n  return <>\r\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\r\n    <FormulaModal />\r\n  </>\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport KeyMap, { valueString } from \"../KeyMap\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\r\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.weapons.set(weaponId, { location: charKey }), [database, weaponId],)\r\n\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\r\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\r\n  const img = weaponSheet.getImg(ascension)\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\r\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\r\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\r\n            </Box>\r\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\r\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={img ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          {stats.map(node => {\r\n            if (!node.info.key) return null\r\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\r\n              <Typography>{displayVal}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        {canEquip\r\n          ? <CharacterAutocomplete size=\"small\" sx={{ flexGrow: 1 }} disable={(v: any) => v === \"\"}\r\n            showDefault defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\r\n            value={location} onChange={equipOnChar} filter={filter} disableClearable />\r\n          : <LocationName location={location} />}\r\n        <ButtonGroup>\r\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" onClick={() => onEdit(id)} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\n","import { strPadLeft } from \"./Util\"\r\n\r\nexport const SECOND_MS = 1000\r\nexport const MINUTE_MS = 60 * SECOND_MS\r\nexport const HOUR_MS = 60 * MINUTE_MS\r\nexport const DAY_MS = 24 * HOUR_MS\r\n\r\nexport function msToUnits(ms: number) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import { WeaponKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nimport i18n from \"../i18n\";\r\nexport const weaponSortKeys = [\"level\", \"rarity\"]\r\nexport type WeaponSortKey = typeof weaponSortKeys[number]\r\n\r\nexport function weaponSortConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): SortConfigs<WeaponSortKey, ICachedWeapon> {\r\n  return {\r\n    level: {\r\n      getValue: wp => wp.level * wp.ascension ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: wp => weaponSheets?.[wp.key]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}\r\nexport function weaponFilterConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\r\n  return {\r\n    rarity: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.rarity),\r\n    weaponType: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.weaponType),\r\n    // TODO: Add types to this. filter may or may not be an array?\r\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\r\n  }\r\n}\r\n"],"names":["ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","value","TypeError","l","h","useEffect","sx","width","display","alignItems","bgcolor","onChange","val","clamp","px","pl","undefined","inputProps","textAlign","startAdornment","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","variant","ConditionalSelector","conditional","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","entries","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","color","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","props","children","ml","key","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","description","displayTitle","InfoTooltip","Typography","DisabledButton","styled","theme","backgroundColor","palette","primary","secondary","TextButton","CharSelectDropdown","t","useTranslation","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","show","onHide","onSelect","ThumbSide","src","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","height","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","usePromise","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","KeyMap","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","LevelSelect","setLevel","level","ascension","ascensionMaxLevel","ascenML","setAscension","lowerAscension","contentDark","main","CustomNumberInput","ambiguousLevel","milestoneLevels","lv","as","lvlstr","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","container","spacing","item","Chip","label","allElementsWithPhy","element","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","uncoloredEleIcons","bsProps","xs","md","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","component","href","target","rel","contentLight","type","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","includes","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","elementKey","specialNode","charEle","isMelee","otherStatReadNodes","useMemo","eles","allElements","concat","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","StatIcon","py","Worker_fn","Worker","OptimizationTargetContext","createContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","newNodes","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","operands","forEach","_op","op","has","dynKeys","forEachNodes","_","f","operation","accu","Error","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","mapFormulas","objectKeyMap","allSlotKeys","slot","id","set","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","a","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","j","ranges","range","reads","_f","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","sort","b","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","ArtifactSheet","document","setEffectDocument","useBuildSetting","characterKey","database","DatabaseContext","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artifactSheets","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","sk","slotKey","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","currentContext","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","tot","set4CondNums","setEffects","doc","rarity","defIconSrc","stars","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","useTheme","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","levelVariant","floor","ele","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","LocationIcon","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","Artifact","SubstatDisplay","numRolls","rolls","rollColor","alignContent","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","refinement","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","BuildDisplayItem","index","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","newBuild","chars","equipArtifacts","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","SetToolTipTitle","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","pop","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","fill","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","mainStatKeys","numSel","mt","cursor","StatFilterCard","defThreads","navigator","hardwareConcurrency","initialTabOptimizeDBState","equipmentPriority","threads","useOptimizeDBState","useDBState","UseEquipped","useEquippedArts","useBoolState","tempEquipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","splice","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","allMainStatKeys","allSubstatKeys","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","TabBuild","compareData","initGlobalSettings","tcMode","buildStatus","setBuildStatus","setchartData","setArtsDirty","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","cancelToken","generateBuilds","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","buildValues","unprunedFilters","next","done","minCount","minFilterCount","cantTakeList","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","optimizationTargetNode","objPathValue","targetNode","valueFilter","cancelled","Promise","r","setPerms","prepruneArts","optimize","plotBaseNode","Array","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","terminate","pruned","prepruned","console","log","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","DataContextWrapper","join","providerValue","CompareBuildButton","artId","onShow","newArt","artmap","dataProviderValue","arrow","Difference","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","weaponFilterConfigs","sortConfigs","weaponSortConfigs","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","sortFunction","star","TextField","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","aid","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","colored","whiteSpace","top","Favorite","FavoriteBorder","right","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","style","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","resonanceSheets","res","desc","titleTypographyProps","active","activeCharacterKey","teamMateKey","onClickHandler","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","CharacterAutocomplete","charKey","disable","labelText","defaultText","defaultIcon","PersonAdd","showDefault","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","getTalent","sheets","sts","TravelerElementSelect","sgt","talents","CharacterDisplay","useParams","allCharacterKeys","my","CharacterDisplayCard","charUIData","useMatch","end","params","tab","useTitle","dataContextValue","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","equipOnChar","lock","stats","falseWrapper","noWrap","displayVal","disableClearable","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","getValue","wp","tieBreaker","i18n","toLowerCase"],"sourceRoot":""}