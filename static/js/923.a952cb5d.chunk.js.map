{"version":3,"file":"static/js/923.a952cb5d.chunk.js","mappings":"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","sources":["Components/Weapon/WeaponSelectionModal.tsx","PageWeapon/WeaponEditor.tsx"],"sourcesContent":["import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { StarsDisplay } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  ascension?: number,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(propWeaponFilter ? [propWeaponFilter] : [...allWeaponTypeKeys])\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter([propWeaponFilter]), [propWeaponFilter])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => weaponFilter.includes(weaponSheets?.[wKey]?.weaponType))\r\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterAutocomplete from \"../Components/Character/CharacterAutocomplete\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n  extraButtons?: JSX.Element\r\n}\r\nexport default function WeaponEditor({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose,\r\n  extraButtons\r\n}: WeaponStatsEditorCardProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.weapons.set(propWeaponId, newWeapon)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(() => location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.weapons.set(id, { location: charKey }), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = weaponSheet?.getImg(ascension)\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = lowRarityMilestoneLevels[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\r\n    <WeaponSelectionModal ascension={ascension} show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Grid container spacing={1.5}>\r\n            <Grid item xs={6} sm={12}>\r\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={6} sm={12}>\r\n              <Typography><small>{weaponSheet.description}</small></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup>\r\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\r\n                <MenuItem>Select Weapon Refinement</MenuItem>\r\n                <Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </MenuItem>)}\r\n              </DropdownButton>}\r\n              {extraButtons}\r\n            </ButtonGroup>\r\n          </Box>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n              <CustomNumberInputButtonGroupWrapper >\r\n                <CustomNumberInput onChange={setLevel} value={level}\r\n                  startAdornment=\"Lv. \"\r\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                />\r\n              </CustomNumberInputButtonGroupWrapper>\r\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\r\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\r\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\r\n                  const sameLevel = lv === ascensionMaxLevel[as]\r\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                  const selected = lv === level && as === ascension\r\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                })}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n\r\n            <Button color=\"error\" onClick={() => id && database.weapons.set(id, { lock: !lock })} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n              {lock ? \"Locked\" : \"Unlocked\"}\r\n            </Button>\r\n          </Box>\r\n          <Typography><StarsDisplay stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterAutocomplete showDefault size=\"small\" defaultIcon={<BusinessCenter />} defaultText={t(\"inventory\")} value={location} onChange={equipOnChar} filter={filter} disable={(v: any) => v === \"\"} disableClearable />\r\n        </Grid>\r\n        <Grid item flexGrow={2} />\r\n        {!!onClose && <Grid item><CloseButton sx={{ height: \"100%\" }} large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight ></ModalWrapper>\r\n}\r\n"],"names":["WeaponSelectionModal","show","ascension","onHide","onSelect","filter","propWeaponFilter","weaponFilter","t","useTranslation","weaponSheets","usePromise","WeaponSheet","useState","allWeaponTypeKeys","setWeaponfilter","useEffect","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","includes","weaponType","toLowerCase","sort","a","b","rarity","open","onClose","sx","py","container","spacing","item","value","onChange","disabled","size","flexGrow","autoFocus","e","target","label","height","InputProps","onClick","map","weaponKey","weaponSheet","lg","md","display","component","src","getImg","width","className","px","variant","name","Assets","stars","colored","large","WeaponEditor","propWeaponId","weaponId","footer","extraButtons","data","useContext","DataContext","database","DatabaseContext","weapon","useWeapon","key","level","refinement","lock","location","id","weaponDispatch","useCallback","newWeapon","weapons","set","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","undefined","ws","weaponTypeKey","initialWeaponFilter","equipOnChar","charKey","cs","showModal","setshowModal","img","lowRarityMilestoneLevels","weaponUIData","useMemo","computeUIData","dataObjForWeapon","containerProps","maxWidth","k","xs","sm","borderRadius","description","flexDirection","gap","flexWrap","justifyContent","hasRefinement","title","Array","keys","selected","bgcolor","palette","contentLight","main","startAdornment","inputProps","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","color","startIcon","passiveName","gutterBottom","passiveDescription","get","input","titleTypographyProps","node","i","n","isEmpty","ListItem","info","document","sections","showDefault","defaultIcon","defaultText","disable","v","disableClearable"],"sourceRoot":""}