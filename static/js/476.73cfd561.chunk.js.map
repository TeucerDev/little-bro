{"version":3,"file":"static/js/476.73cfd561.chunk.js","mappings":"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","sources":["Components/Weapon/WeaponSelectionModal.tsx","PageWeapon/WeaponEditor.tsx"],"sourcesContent":["import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponSwapBtn from \"./WeaponSwapBtn\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponEditor({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = lowRarityMilestoneLevels[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\r\n    <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Grid container spacing={1.5}>\r\n            <Grid item xs={6} sm={12}>\r\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={6} sm={12}>\r\n              <Typography><small>{weaponSheet.description}</small></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup>\r\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\r\n                <MenuItem>Select Weapon Refinement</MenuItem>\r\n                <Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </MenuItem>)}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n            {data?.get(input.charKey)?.value && <WeaponSwapBtn weaponTypeKey={weaponSheet.weaponType} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />}\r\n          </Box>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n              <CustomNumberInputButtonGroupWrapper >\r\n                <CustomNumberInput onChange={setLevel} value={level}\r\n                  startAdornment=\"Lv. \"\r\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                />\r\n              </CustomNumberInputButtonGroupWrapper>\r\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\r\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\r\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\r\n                  const sameLevel = lv === ascensionMaxLevel[as]\r\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                  const selected = lv === level && as === ascension\r\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                })}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n\r\n            <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n              {lock ? \"Locked\" : \"Unlocked\"}\r\n            </Button>\r\n          </Box>\r\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight ></ModalWrapper>\r\n}\r\n"],"names":["WeaponSelectionModal","show","onHide","onSelect","filter","propWeaponFilter","weaponFilter","weaponSheets","usePromise","WeaponSheet","useState","setWeaponfilter","useEffect","weaponIdList","Set","allWeaponKeys","wKey","weaponType","sort","a","b","rarity","open","onClose","sx","py","container","item","flexGrow","value","onChange","disabled","size","onClick","spacing","map","weaponKey","weaponSheet","lg","md","height","display","component","src","img","width","className","px","variant","name","Assets","stars","colored","large","WeaponEditor","propWeaponId","weaponId","footer","data","useContext","DataContext","database","DatabaseContext","weapon","useWeapon","key","level","refinement","ascension","lock","location","id","weaponDispatch","useCallback","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","undefined","ws","weaponTypeKey","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","imgAwaken","lowRarityMilestoneLevels","weaponUIData","useMemo","computeUIData","dataObjForWeapon","containerProps","maxWidth","k","xs","sm","borderRadius","description","flexDirection","gap","flexWrap","justifyContent","hasRefinement","title","Array","keys","selected","get","input","onChangeId","bgcolor","t","palette","contentLight","main","startAdornment","inputProps","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","color","startIcon","passiveName","gutterBottom","passiveDescription","titleTypographyProps","node","i","n","isEmpty","ListItem","info","document","sections","noUnselect","inventory"],"sourceRoot":""}