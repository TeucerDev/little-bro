{"version":3,"file":"static/js/93.c98f7551.chunk.js","mappings":"mRAae,SAASA,EAAT,GAA+H,IAAtFC,EAAqF,EAAlGC,YAA2BC,EAAuE,EAAhFC,QACrDC,GAAgBC,EAAAA,EAAAA,IAAc,OAAHL,QAAG,IAAHA,OAAA,EAAAA,EAAKM,SAAUC,EAAAA,EAAAA,IAAkBP,EAAIM,QAAS,QAACN,QAAD,IAACA,OAAD,EAACA,EAAKM,SAErF,IAAKN,IAAQI,EACX,OAAO,SAAC,IAAD,CAAUI,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,OAAQ,QAAlE,UACL,SAAC,IAAD,CAAKH,GAAI,CAAEI,MAAO,OAAQC,GAAI,OAAQC,SAAU,YAAhD,UACE,SAAC,IAAD,CACEN,GAAI,CACFM,SAAU,WACVF,MAAO,MAAOD,OAAQ,MACtBI,KAAM,MAAOC,IAAK,MAClBC,UAAW,wBACXC,QAAS,IAEXC,UAAU,MACVC,IAAKC,EAAAA,EAAAA,KAAYnB,SAMzB,IAAQoB,EAA4CtB,EAA5CsB,YAAaC,EAA+BvB,EAA/BuB,OAAQC,EAAuBxB,EAAvBwB,MAAOC,EAAgBzB,EAAhByB,YAC9BC,EAAe,QAAUC,KAAKC,MAAMD,KAAKE,IAAIL,EAAO,GAAK,GAAK,GACpE,OAAO,UAAC,IAAD,CAAUhB,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUI,SAAU,YAApE,WACL,SAAC,IAAD,CAAwBX,QAASD,EAAK4B,MAAO1B,EAA7C,UACE,SAAC,IAAD,CACEe,UAAU,MACVY,UAAS,eAAUR,EAAV,QACTH,IAAKhB,EAAc4B,UAAU9B,GAC7B+B,SAAS,OACTC,UAAU,YAGd,SAAC,IAAD,CAAY1B,GAAI,CAAEM,SAAU,WAAYqB,WAAY,EAAGC,cAAe,QAAUC,QAAQ,YAAxF,UAAoG,UAAC,IAAD,CAASC,MAAOZ,EAAhB,cAAuCF,QAC3I,SAAC,IAAD,CAAYa,QAAQ,KAAK7B,GAAI,CAAEM,SAAU,WAAYyB,OAAQ,EAAGC,MAAO,EAAGL,WAAY,GAAtF,UACE,SAAC,IAAD,CAAkBM,UAAU,MAAMC,OAAO,UAAC,IAAD,YAAaC,EAAAA,EAAAA,IAAiBlB,EAAamB,EAAAA,GAAAA,KAAYtB,IAAesB,EAAAA,GAAAA,KAAYtB,GAAlF,IAAiGsB,EAAAA,GAAAA,OAActB,MAA4BuB,oBAAkB,EAAtM,UACE,SAAC,IAAD,CAASP,MAAM,YAAY9B,GAAI,CAAEsC,EAAG,KAApC,SAA6CC,EAAAA,EAASzB,c,uICrC/C,SAAS0B,EAAT,GAAqE,IAAD,EAAlC7C,EAAkC,EAAlCA,QAAS2B,EAAyB,EAAzBA,MAAOmB,EAAkB,EAAlBA,SACzDC,GAAW,UAAC,IAAD,YACf,SAAC,IAAD,CAAUb,QAAQ,OAAOzB,MAAO,OAChC,SAAC,IAAD,CAAUyB,QAAQ,OAAOzB,MAAO,SAE5B8B,GAAQ,SAAC,EAAAS,SAAD,CAAUD,SAAUA,EAApB,UACZ,UAAC,IAAD,YACE,SAAC,IAAD,WAAY,mCAASpB,QAAT,IAASA,OAAT,EAASA,EAAOsB,UAC5B,UAAC,IAAD,YAAaC,EAAAA,EAAAA,IAAiBlD,GAA9B,WAAyC2B,QAAzC,IAAyCA,GAAzC,UAAyCA,EAAOwB,mBAAhD,aAAyC,OAAAxB,EAAqB3B,WAIlE,OAAO,SAAC,IAAD,CAAkBsC,UAAU,MAAMC,MAAOA,EAAOG,oBAAkB,EAAlE,SACJI,M,qHCvBCM,GAAmBC,EAAAA,EAAAA,KAAO,gBAAGzB,EAAH,EAAGA,UAAc0B,GAAjB,mBAC9B,SAAC,KAAD,kBAAaA,GAAb,IAAoBC,OAAK,EAACC,QAAS,CAAEC,OAAQ7B,QADtByB,EAEtB,kBAAGK,EAAH,EAAGA,MAAH,mCACMC,EAAAA,EAAAA,OAAyB,CAC9BxB,MAAOuB,EAAME,QAAQC,OAAOC,SAF7B,sBAIMH,EAAAA,EAAAA,SAA2B,CAChCI,gBAAiBL,EAAME,QAAQC,OAAOC,MACtChC,SAAU,MANX,KASH,O,wbCCe,SAASkC,EAAT,GAA6D,IAAnCC,EAAkC,EAAlCA,SAEjCC,GADeC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SACgBC,WAAWL,GAC7BM,GAAcrE,EAAAA,EAAAA,IAAiB,OAANgE,QAAM,IAANA,OAAA,EAAAA,EAAQnE,MAAOyE,EAAAA,GAAAA,IAAgBN,EAAOnE,KAAM,QAACmE,QAAD,IAACA,OAAD,EAACA,EAAQnE,MAC9E0E,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,GAAeL,IAAUS,EAAAA,EAAAA,IAAc,CAACJ,EAAYK,MAAMC,EAAAA,EAAAA,IAAiBX,OAAW,CAACK,EAAaL,IACjI,OAAKA,GAAWK,GAAgBE,GACzB,SAACK,EAAA,EAAD,WACL,UAACC,EAAA,EAAD,CAAKzE,QAAQ,OAAb,WACE,SAACyE,EAAA,EAAD,CAAKC,WAAY,EAAGlD,SAAS,MAAMxB,QAAQ,OAAOC,cAAc,SAAS0E,aAAa,WAAWrD,UAAS,eAAU2C,EAAYnD,OAAtB,QAA1G,UACE,SAAC2D,EAAA,EAAD,CACE/D,UAAU,MACVC,IAAKsD,EAAYW,IACjBzE,MAAM,OACND,OAAO,OACPH,GAAI,CAAE8E,GAAI,aAGd,UAACJ,EAAA,EAAD,CAAKK,SAAU,EAAG/E,GAAI,CAAEsC,EAAG,GAA3B,WACE,SAAC0C,EAAA,EAAD,CAAYnD,QAAQ,QAAQoD,cAAY,EAAxC,UAAyC,mCAASf,QAAT,IAASA,OAAT,EAASA,EAAatB,UAC/D,UAACoC,EAAA,EAAD,CAAYnD,QAAQ,YAAY7B,GAAI,CAAEC,QAAS,OAAQiF,IAAK,GAAKD,cAAY,EAA7E,WACE,UAACE,EAAA,EAAD,CAASrD,MAAM,UAAf,iBAA8BqC,EAAAA,GAAAA,eAA2BN,MACxDK,EAAYkB,gBAAiB,UAACD,EAAA,EAAD,CAASrD,MAAM,OAAf,cAAwB+B,EAAOwB,kBAE/D,UAACL,EAAA,EAAD,CAAYnD,QAAQ,YAAY7B,GAAI,CAAEC,QAAS,OAAQiF,IAAK,GAA5D,WACE,SAACI,EAAD,CAAYC,KAAMnB,EAAOoB,IAAIC,EAAAA,GAAAA,OAAAA,SAC7B,SAACH,EAAD,CAAYC,KAAMnB,EAAOoB,IAAIC,EAAAA,GAAAA,OAAAA,kBApBU,KA2BjD,SAASH,EAAT,GAAsD,IAAhCC,EAA+B,EAA/BA,KACpB,IAAKA,EAAKG,KAAKhG,IAAK,OAAO,KAC3B,IAAMiG,GAAMC,EAAAA,EAAAA,IAAYL,EAAKM,MAAON,EAAKO,KAAOP,EAAKO,UAAWC,EAAJ,GAC5D,OAAO,UAACZ,EAAA,EAAD,CAASrD,MAAM,YAAf,UAA4BS,EAAAA,EAASgD,EAAKG,KAAKhG,KAA/C,IAAsDiG,KCfhD,SAASK,EAAT,GAAmK,IAAD,IAAzIC,EAAyI,EAAzIA,aAAcC,EAA2H,EAA3HA,iBAAkBC,EAAyG,EAAzGA,eAAgBC,EAAyF,EAAzFA,kBAAmBC,EAAsE,EAAtEA,QAASC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,eACvHC,GAAoB3C,EAAAA,EAAAA,YAAW4C,EAAAA,GAAzCC,SACFA,EAAQ,WAAGC,EAAAA,EAAAA,GAAYH,EAAkB,GAAKR,UAAtC,QAAwDQ,EACtE,mBAAoDE,QAApD,IAAoDA,OAApD,EAAoDA,EAAWV,UAA/D,QAAgF,GAAxEY,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAAwBvC,EAA3C,EAAmCwC,OAC7BC,GAAiBC,EAAAA,EAAAA,cAAY,kBAAMhB,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,EAAc,eAAa,CAACA,EAAcI,IACvGa,GAAoBD,EAAAA,EAAAA,cACxB,SAAAxE,GAAQ,OAAI,SAAC0E,EAAA,EAAD,CAAgBd,QAASW,EAAgBhH,GAAI,CAAE+E,SAAU,EAAG9E,QAAS,OAAQC,cAAe,UAA5F,SAAyGuC,MACrH,CAACuE,IAEGI,GAAoBC,EAAAA,EAAAA,GAAoBpB,GAC9C,IAAKU,IAAaE,IAAcC,IAAmBvC,EAAM,OAAO,KAChE,IAAM+C,EAAiC,CACrCT,UAAAA,EACAtC,KAAAA,EACAuC,eAAAA,EACAS,wBAAyB,EACzBZ,SAAAA,EACAS,kBAAAA,GAGF,OAAO,SAAC,EAAAzE,SAAD,CAAUD,UAAU,SAAC8E,EAAA,EAAD,CAAU3F,QAAQ,cAAc7B,GAAI,CAAEI,MAAO,OAAQD,OAAQ,OAAQsH,UAAW,OAApG,UACL,SAACf,EAAA,WAAD,CAAsBb,MAAOyB,EAA7B,UACE,UAACI,EAAA,EAAD,CAAW1H,GAAI,CAAEG,OAAQ,OAAQF,QAAS,OAAQC,cAAe,UAAjE,WACE,SAACwE,EAAA,EAAD,CAAK1E,GAAI,CAAEC,QAAS,OAAQK,SAAU,WAAYqH,OAAQ,EAAGjH,QAAS,IAAtE,UACE,SAACkH,EAAA,EAAD,CAAY5H,GAAI,CAAEsC,EAAG,IAAO+D,QAAS,SAAAwB,GAAK,OAAIT,EAAkB,CAAEU,UAAWjB,EAAUiB,YAAvF,SACGjB,EAAUiB,UAAW,SAACC,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,SAGzC,UAACC,EAAA,EAAD,CAAoBC,YAAa7B,EAAS8B,QAASjB,EAAnD,WACE,SAACkB,EAAD,CAAQ/B,QAAUA,OAA0BN,EAAhBO,KAC5B,UAAC+B,EAAA,EAAD,CAAarI,GAAI,CAAEI,MAAO,OAAQH,QAAS,OAAQC,cAAe,SAAUgF,IAAK,EAAGH,SAAU,GAA9F,WACE,SAACuD,EAAD,KACE9B,IAAkB,UAAC+B,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAS,IAArC,WAClB,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,EAAGzI,OAAO,OAAzB,UACE,SAAC0I,EAAA,EAAD,CAAgBjF,SAAUiD,EAAUiC,oBAErCC,EAAAA,EAAAA,IAAM,EAAG,GAAGC,KAAI,SAAAC,GAAC,OAAI,SAACV,EAAA,GAAD,CAAcI,MAAI,EAACC,GAAI,EAAGzI,OAAO,OAAjC,UAAwC,SAAC+I,EAAA,EAAD,CAAmBjD,aAAcY,EAAUsC,KAAKF,GAAIG,MAAOH,KAAxFA,SAElCzC,IAAkB,SAAC7C,EAAD,CAAgBC,SAAUiD,EAAUiC,kBACrDtC,IAAkB,SAAC6C,EAAD,IACnBlD,EACAD,EACAE,QAGJG,SAKT,SAAS6B,EAAT,GAA+F,IAA7E/B,EAA4E,EAA5EA,QAChB,GAAiCvC,EAAAA,EAAAA,YAAW4C,EAAAA,GAApCnC,EAAR,EAAQA,KAAMuC,EAAd,EAAcA,eACRb,EAAe1B,EAAKiB,IAAIC,EAAAA,GAAAA,SAAeI,MACvCyD,EAAe/E,EAAKiB,IAAIC,EAAAA,GAAAA,SAAeI,MACvC0D,EAAiBhF,EAAKiB,IAAIC,EAAAA,GAAAA,KAAWI,MACrC2D,EAAgBjF,EAAKiB,IAAIC,EAAAA,GAAAA,eAAqBI,MAC9C4D,EAAYlF,EAAKiB,IAAIC,EAAAA,GAAAA,KAAWI,MAChC6D,EAAYnF,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkBI,MACvC8D,EAAapF,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,MACzC+D,EAAarF,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,MAEzCgE,EAAQtF,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkBI,MACnCiE,EAASvF,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,MACrCkE,EAASxF,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,MAErCqB,GAAoBD,EAAAA,EAAAA,cACxB,SAAAxE,GAAQ,OAAI,SAAC0E,EAAA,EAAD,CAAgBd,QAAS,kBAAMJ,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,EAAc,cAAajG,GAAI,CAAE+E,SAAU,EAAG9E,QAAS,OAAQC,cAAe,UAAvI,SAAoJuC,MAChK,CAAC4D,EAASJ,IAEZ,OAAO,SAACgC,EAAA,EAAD,CAAoBC,YAAa7B,EAAS8B,QAASjB,EAAnD,UACL,UAACxC,EAAA,EAAD,CAAKzE,QAAQ,OACXK,SAAS,WACTiB,UAAS,eAAUuF,EAAe/F,OAAzB,QACTf,GAAI,CACF,YAAa,CACXgK,QAAS,KACT/J,QAAS,QAASK,SAAU,WAC5BC,KAAM,EAAGC,IAAK,EACdJ,MAAO,OAAQD,OAAQ,OACvBO,QAAS,GACTuJ,gBAAgB,OAAD,OAASnD,EAAeoD,UAAxB,KAAsCC,mBAAoB,SAAUC,eAAgB,UAGvGhK,MAAM,OAbR,WAcE,SAACsE,EAAA,EAAD,CAAKC,WAAY,EAAG3E,GAAI,CAAEyB,SAAU,CAAEmH,GAAI,MAAOyB,GAAI,QAAWC,UAAU,WAAWrK,QAAQ,OAAOC,cAAc,SAASyH,OAAQ,EAAnI,UACE,SAACjD,EAAA,EAAD,CACE/D,UAAU,MACVC,IAAKkG,EAAeyD,SACpBnK,MAAM,OACND,OAAO,OACPsB,SAAU,IACVzB,GAAI,CAAE8E,GAAI,aAGd,UAACJ,EAAA,EAAD,CAAKK,SAAU,EAAG/E,GAAI,CAAEwK,GAAI,EAAGC,GAAI,GAAKxK,QAAQ,OAAOC,cAAc,SAASyH,OAAQ,EAAtF,WACE,SAAC+C,EAAA,EAAD,CAAMC,OAAO,SAAC3F,EAAA,EAAD,CAAYnD,QAAQ,YAApB,SAAiCiF,EAAelE,OAAoBgI,KAAK,QAAQ9I,MAAOwH,EAActJ,GAAI,CAAEU,QAAS,QAClI,UAAC6H,EAAA,GAAD,CAAMC,WAAS,EAACE,QAAS,EAAGmC,SAAS,SAArC,WACE,UAACtC,EAAA,GAAD,CAAMI,MAAI,EAAC3I,GAAI,CAAE8K,WAAY,gBAA7B,WACE,UAAC9F,EAAA,EAAD,CAAYrE,UAAU,OAAOkB,QAAQ,KAAKkJ,WAAW,SAArD,iBAAoExB,MACpE,UAACvE,EAAA,EAAD,CAAYrE,UAAU,OAAOkB,QAAQ,KAAKC,MAAM,iBAAhD,cAAmEkJ,EAAAA,GAAkBvB,UAEvF,SAAClB,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC3D,EAAA,EAAD,CAAYnD,QAAQ,KAApB,UAAyB,UAACsD,EAAA,EAAD,eAAWqE,aAGxC,UAACjB,EAAA,GAAD,CAAMC,WAAS,EAACE,QAAS,EAAGmC,SAAS,SAArC,WACE,SAACtC,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC+B,EAAA,EAAD,CAAM5I,MAAO4H,EAAY,OAAS,YAAaiB,OAAO,4BAAUd,SAElE,SAACtB,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC+B,EAAA,EAAD,CAAM5I,MAAO6H,EAAa,OAAS,YAAagB,OAAO,4BAAUb,SAEnE,SAACvB,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC+B,EAAA,EAAD,CAAM5I,MAAO8H,EAAa,OAAS,YAAae,OAAO,4BAAUZ,YAGrE,SAAC/E,EAAA,EAAD,CAAYF,GAAI,EAAhB,UAAoB,SAAC,IAAD,CAAOmG,MAAOnE,EAAe/F,OAAQmK,SAAO,cAKxE,SAAS5C,IACP,IAAQtE,GAAaF,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SACAO,GAAST,EAAAA,EAAAA,YAAW4C,EAAAA,GAApBnC,KACF4G,GAAY9G,EAAAA,EAAAA,UAAQ,kBACxB+G,EAAAA,GAAAA,KAAgB,SAAAC,GAAC,YAAI,CAACA,EAAGrH,EAASsH,QAAT,UAAiB/G,EAAKiB,IAAIC,EAAAA,GAAAA,IAAU4F,GAAGE,IAAI1F,aAA3C,QAAoD,UAC7E,CAACtB,EAAMP,IAET,OAAO,SAACuE,EAAA,GAAD,CAAMiD,UAAU,MAAMhD,WAAS,EAACE,QAAS,IAAMD,QAAS,EAAxD,SACJ0C,EAAUnC,KAAI,+BAAEtJ,EAAF,KAAOF,EAAP,YACb,SAAC+I,EAAA,GAAD,CAAMI,MAAI,EAAWC,GAAI,EAAzB,UACE,SAACrJ,EAAA,EAAD,CAAkBE,YAAaD,EAAKG,QAASD,KAD/BA,QAOtB,SAAS2J,IACP,IAAQ9E,GAAST,EAAAA,EAAAA,YAAW4C,EAAAA,GAApBnC,KACR,OAAO,UAACG,EAAA,EAAD,CAAK1E,GAAI,CAAEI,MAAO,QAAlB,UACJqL,OAAOC,OAAOnH,EAAKoH,aAAaC,OAAO5C,KAAI,SAAA6C,GAAC,OAAI,SAAC,KAAD,CAAmCtG,KAAMsG,GAAlBA,EAAEnG,KAAKhG,QAC9E6E,EAAKiB,IAAIC,EAAAA,GAAAA,SAAeC,KAAKhG,MAAO,UAACgF,EAAA,EAAD,CAAK1E,GAAI,CAAEC,QAAS,OAAQiF,IAAK,EAAG4G,WAAY,UAAhD,WACnC,SAAC9G,EAAA,EAAD,CAAYD,SAAU,EAAtB,UAAyB,+CACxBxC,EAAAA,EAASgC,EAAKiB,IAAIC,EAAAA,GAAAA,SAAeC,KAAKhG,MACvC,SAACsF,EAAA,EAAD,UAAa5C,EAAAA,GAAAA,IAAWmC,EAAKiB,IAAIC,EAAAA,GAAAA,SAAeC,KAAKhG,e,+MCrK5C,SAASwJ,EAAT,GAAoH,IAAD,IAAtFjD,aAAAA,OAAsF,MAAvE,GAAuE,MAAnEmD,MAAAA,OAAmE,OAA1D,EAA0D,EAC1H2C,GAAgBlM,EAAAA,EAAAA,GAAWmM,EAAAA,GAAAA,IAAmB/F,GAAe,CAACA,IAC9DY,GAAYoF,EAAAA,EAAAA,GAAahG,GAC/B,GAAI8F,GAAiBlF,EAAW,CAC9B,IAAM3E,GAAQ,SAAC,EAAAS,SAAD,CAAUD,UAAU,SAAC,IAAD,CAAUb,QAAQ,OAAOzB,MAAO,MAApD,UACZ,UAAC,IAAD,WAAa2L,EAAcG,YAAc3J,EAAAA,EAASwJ,EAAcG,YAAhE,IAA8EH,EAAcnJ,UAG9F,OAAO,UAAC,IAAD,CAAU5C,GAAI,CAAEyB,SAAU,IAAKnB,SAAU,WAAYL,QAAS,OAAQC,cAAe,UAArF,WACL,SAAC,IAAD,CAAkB+B,UAAU,MAAMC,MAAOA,EAAzC,UACE,SAAC,IAAD,CAAKjC,QAAQ,OAAOsB,UAAS,eAAUwK,EAAchL,OAAxB,QAA7B,UACE,SAAC,IAAD,CACEJ,UAAU,MACVC,IAAKmL,EAAcI,aACnB1K,SAAS,OACTC,UAAU,OACV1B,GAAI,CAAES,UAAW,aAAc2L,gBAAiB,iBAItD,SAAC,IAAD,CAAYvK,QAAQ,YAAY7B,GAAI,CAAEM,SAAU,WAAYqB,WAAY,EAAGC,cAAe,QAA1F,UACE,UAAC,IAAD,CAASE,MAAM,UAAf,UAA2B+E,EAAU7F,MAArC,IAA6CgK,EAAAA,GAAkBnE,EAAU4C,iBAE3E,SAAC,IAAD,CAAY5H,QAAQ,YAAY7B,GAAI,CAAEM,SAAU,WAAYyB,OAAQ,EAAGC,MAAO,EAAGL,WAAY,EAAGC,cAAe,QAA/G,UACE,UAAC,IAAD,CAASE,MAAM,YAAf,cAA8B+E,EAAU2C,sBAI5C,OAAO,SAAC,IAAD,CAAUxJ,GAAI,CAAEC,QAAS,OAAQ6L,WAAY,SAAUO,eAAgB,SAAU7B,GAAI,SAArF,UACL,SAAC,IAAD,CAAK7J,UAAU,MAAMC,IAAKC,EAAAA,EAAAA,KAAA,cAAmBuI,EAAQ,IAAMpJ,GAAI,CAAEI,MAAO,MAAOD,OAAQ,OAAQO,QAAS,U,qbCfxG4L,EAAkB,CAAC,QAAS,SAAU,QAYrC,SAASC,EAAT,GAAmI,IAAhGC,EAA+F,EAA/FA,KAAMC,EAAyF,EAAzFA,OAAQC,EAAiF,EAAjFA,SAAiF,IAAvEC,OAAAA,OAAuE,MAA9D,kBAAM,GAAwD,MAAlDC,SAAAA,OAAkD,SACjIC,GAAWxI,EAAAA,EAAAA,UAAQ,kBAAMuI,EAAQ,CAAI,OAAJ,OAAcN,GAAmBA,IAAiB,CAACM,IAClF5I,GAAaF,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SAER,GAA4B8I,EAAAA,EAAAA,UAASD,EAAS,IAA9C,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8CJ,EAAAA,EAAAA,UAA0B,IAAxE,eAAOK,EAAP,KAAwBC,EAAxB,KACA,GAAwCN,EAAAA,EAAAA,UAA6B,IAArE,eAAOO,EAAP,KAAqBC,EAArB,KAEMC,GAAkB1N,EAAAA,EAAAA,GAAWmM,EAAAA,GAAAA,OAAuB,IAE1D,GAAoCwB,EAAAA,EAAAA,KAApC,eAAOC,EAAP,KAAmBC,EAAnB,MACAC,EAAAA,EAAAA,YAAU,kBAAM3J,EAAS4J,cAAcF,KAAgB,CAAC1J,EAAU0J,IAElE,IAAMG,GAAcxJ,EAAAA,EAAAA,UAAQ,kBAAMkJ,IAAmBO,EAAAA,EAAAA,IAAqB9J,EAAUuJ,KAAkB,CAACvJ,EAAUuJ,IAC3GQ,IAAgB1J,EAAAA,EAAAA,UAAQ,kBAAMkJ,GAAmBE,IAAcO,EAAAA,EAAAA,IAAuBhK,EAAUuJ,KAAkB,CAACE,EAAYzJ,EAAUuJ,IACzIU,IAAwB5J,EAAAA,EAAAA,UAAQ,kBAAMkJ,GAAkB,OAAI,IAAIW,IAAIC,EAAAA,KAAmBxB,QAAO,SAAAyB,GAAI,OAAIzB,EAAO3I,EAASqK,SAASD,GAAOb,EAAgBa,OAAU,KAAI,CAACpK,EAAUuJ,EAAiBZ,IAChM2B,IAAmBjK,EAAAA,EAAAA,UAAQ,kBAAOkJ,GAAmBM,GAAeE,GACxEE,GACGtB,QAAO4B,EAAAA,EAAAA,GAAe,CAAEC,QAASrB,EAAiBsB,WAAYpB,EAAcvF,SAAU,OAASiG,KAC/FW,MAAKC,EAAAA,EAAAA,GAAa5B,EAAQE,EAAWY,IACrCe,OACCX,GACGtB,QAAO4B,EAAAA,EAAAA,GAAe,CAAEC,QAASrB,EAAiBsB,WAAYpB,EAAcvF,SAAU,MAAQiG,KAC9FW,MAAKC,EAAAA,EAAAA,GAAa5B,EAAQE,EAAWY,KAE1C,KACF,CAACN,EAAiBJ,EAAiBE,EAAcN,EAAQE,EAAWY,EAAaE,GAAeE,KAElG,OAAKV,GACE,SAAC,IAAD,CAAcsB,KAAMrC,EAAMsC,QAASrC,EAAnC,UACL,UAAC,IAAD,YACE,SAAC,IAAD,CAAazM,GAAI,CAAEwK,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMhC,WAAS,EAACE,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,IAAD,CAAc3I,GAAI,CAAEG,OAAQ,QAAU4O,SAAUzB,EAAiBzH,MAAOwH,EAAczC,KAAK,aAE7F,SAAC,KAAD,CAAMjC,MAAI,EAAC5D,SAAU,EAArB,UACE,SAAC,IAAD,CAAe/E,GAAI,CAAEG,OAAQ,QAAU4O,SAAU3B,EAAoBvH,MAAOsH,EAAiBvC,KAAK,aAGpG,SAAC,KAAD,CAAMjC,MAAI,EAAC5D,SAAU,KAErB,SAAC,KAAD,CAAM4D,MAAI,EAAV,UACE,SAAC,IAAD,CAAc3I,GAAI,CAAEG,OAAQ,QAC1B0M,SAAUA,EAAUhH,MAAOkH,EAAQgC,SAAU/B,EAC7CC,UAAWA,EAAW+B,YAAa9B,OAEvC,SAAC,KAAD,CAAMvE,MAAI,EAAV,UACE,SAAC,IAAD,CAAatC,QAASoG,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WAAa,SAAC,KAAD,CAAMjE,WAAS,EAACE,QAAS,EAAzB,SACV4F,GAAiBtF,KAAI,SAAA/C,GAAY,OAAI,SAAC,KAAD,CAAM0C,MAAI,EAAoBC,GAAI,EAAGqG,GAAI,EAAG5E,GAAI,EAAhD,UACpC,SAAC6E,EAAD,CAAiCjJ,aAAcA,EAAcI,QAAS,WAAQoG,IAAkB,OAARC,QAAQ,IAARA,GAAAA,EAAWzG,KAAhFA,IADiCA,eA1B/B,KAkC/B,SAASiJ,EAAT,GAAwG,IAAD,MAA/E7I,EAA+E,EAA/EA,QAASJ,EAAsE,EAAtEA,aACzBa,GAAiBjH,EAAAA,EAAAA,GAAWmM,EAAAA,GAAAA,IAAmB/F,GAAe,CAACA,IAC/DU,GAAWC,EAAAA,EAAAA,GAAYX,GACrBjC,GAAaF,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SACFoD,GAAoBC,EAAAA,EAAAA,GAAoBpB,GACxC6B,EAAQ,UAAG9D,EAASqK,SAASpI,UAArB,aAAG,EAAiC6B,SAClCvD,GAAhB,iBAAyBoC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWV,UAApC,QAAqD,IAA7Cc,OACR,IAAKD,EAAgB,OAAO,KAC5B,IAAM/F,EAAS+F,EAAe/F,OAC9B,OAAO,UAAC,IAAD,gBACSgF,IAAb+B,IAA0B,SAAC,IAAD,CAAK7H,QAAQ,OAAOK,SAAS,WAAWgK,UAAU,QAAQ3C,OAAQ,EAAlE,UACzB,SAAC,IAAD,CAAY3H,GAAI,CAAEsC,EAAG,IAAO+D,QAAS,kBAAMe,EAAkB,CAAEU,UAAWA,KAA1E,SACGA,GAAW,SAAC,IAAD,KAAe,SAAC,IAAD,SAG/B,SAAC,IAAD,CAAgBzB,QAASA,EAAzB,UACE,UAAC,IAAD,CAAWrG,GAAI,CAAEC,QAAS,OAAQ6L,WAAY,UAA9C,WACE,SAAC,IAAD,CAAKnL,UAAU,MAAMC,IAAKkG,EAAeyD,SAAUvK,GAAI,CAAEI,MAAO,IAAKD,OAAQ,QAAUoB,UAAS,eAAUR,EAAV,WAChG,UAAC,IAAD,CAAKf,GAAI,CAAEmP,GAAI,GAAf,WACE,SAAC,IAAD,WAAY,4BAASrI,EAAelE,SACnC2B,GAAO,iCACN,UAAC,IAAD,CAAY1C,QAAQ,KAApB,cAA2BiF,EAAeoF,YAAc3J,EAAAA,EAASuE,EAAeoF,YAAhF,KAA6F,SAAC,IAAD,CAAStL,IAAG,UAAEC,EAAAA,EAAAA,mBAAF,aAAE,EAAqBiG,EAAesI,iBAA/I,IAAuKpD,EAAAA,GAAAA,eAA8BzH,EAAKiB,IAAIC,EAAAA,GAAAA,KAAWI,MAAOtB,EAAKiB,IAAIC,EAAAA,GAAAA,KAAWI,WACpP,UAAC,IAAD,YACE,SAAC,IAAD,CAAS/D,MAAM,UAAf,oBAA8ByC,EAAKiB,IAAIC,EAAAA,GAAAA,eAAqBI,SAD9D,KAEE,SAAC,IAAD,CAAS/D,MAAOyC,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkBI,MAAQ,OAAS,YAA5D,UAAyE,4BAAUtB,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkBI,UAFhH,KAGE,SAAC,IAAD,CAAS/D,MAAOyC,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,MAAQ,OAAS,YAA7D,UAA0E,4BAAUtB,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,UAHlH,KAIE,SAAC,IAAD,CAAS/D,MAAOyC,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,MAAQ,OAAS,YAA7D,UAA0E,4BAAUtB,EAAKiB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmBI,iBAE9G,+BACJ,SAAC,IAAD,CAAYhE,QAAQ,KAApB,UAAyB,SAAC,IAAD,CAASC,MAAM,UAAf,sBAE3B,4BAAO,SAAC,IAAD,CAAOmJ,MAAOlK,EAAQmK,SAAO,mB,sBC5H/B,SAASjD,EAAT,GAAmF,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,QAASkH,EAAgC,EAAhCA,aAAc5M,EAAkB,EAAlBA,SAC7E,OAAQyF,EAAYC,EAAQ1F,GAAa4M,EAAeA,EAAa5M,GAAYA,E,2TCMpE,SAAS6M,EAAT,GAAmJ,IAA3HC,EAA0H,EAA1HA,MAAOC,EAAmH,EAAnHA,aAAc7O,EAAqG,EAArGA,UAC1D,GAA0BmD,EAAAA,EAAAA,YAAW4C,EAAAA,GAA7BnC,EAAR,EAAQA,KAAMkL,EAAd,EAAcA,QAEd,KADgBpL,EAAAA,EAAAA,UAAQ,2CAAMkL,QAAN,IAAMA,GAAN,UAAMA,EAAOG,eAAb,aAAM,OAAAH,EAAiBhL,UAAvB,WAAsC,CAACgL,EAAOhL,IACxD,OAAO,KACrB,GAAI,SAAUgL,EAAO,CAEnB,IAAMhK,EAAOiK,EAAejL,EAAKiB,KAAImK,EAAAA,EAAAA,IAASJ,EAAMhK,KAAM,CAAEwB,OAAQyI,EAAajL,KAAKA,KAAK,MAAiBA,EAAKiB,IAAI+J,EAAMhK,MAC3H,GAAIA,EAAKqK,QAAS,OAAO,KACzB,GAAIH,EAAS,CACX,IAAMI,EAAUL,EAAeC,EAAQjK,KAAImK,EAAAA,EAAAA,IAASJ,EAAMhK,KAAM,CAAEwB,OAAQyI,EAAaC,QAASlL,KAAK,MAAiBkL,EAAQjK,IAAI+J,EAAMhK,MAClIuK,EAAWD,EAAQD,QAAU,EAAIC,EAAQhK,MAC/C,OAAO,SAACkK,EAAD,CAAkBxK,KAAMA,EAAMuK,SAAUA,EAAUE,OAAQT,EAAMU,WAAYtP,UAAWA,IAE3F,OAAO,SAACoP,EAAD,CAAkBxK,KAAMA,EAAMyK,OAAQT,EAAMU,WAAYtP,UAAWA,IAEjF,OAAO,SAACuP,EAAD,CAAmBX,MAAOA,EAAO5O,UAAWA,IAGrD,SAASuP,EAAT,GAAgH,IAAD,EAAlFX,EAAkF,EAAlFA,MAAO5O,EAA2E,EAA3EA,UAC1B4D,GAAST,EAAAA,EAAAA,YAAW4C,EAAAA,GAApBnC,KACF4L,GAAIC,EAAAA,EAAAA,IAAWb,EAAM1J,MAAOtB,GAC5B1C,GAAUuO,EAAAA,EAAAA,IAAWb,EAAM1N,QAAS0C,GACpC8L,EAAOd,EAAMc,OAAQ,0BAAOd,EAAMc,OAClCL,EAAST,EAAMU,aAAc,0BAAOV,EAAMU,aAChD,OAAO,UAAC,IAAD,CAAK7P,MAAM,OAAOJ,GAAI,CAAEC,QAAS,OAAQoM,eAAgB,gBAAiBnH,IAAK,GAAKvE,UAAWA,EAA/F,WACL,UAAC,IAAD,CAAYmB,MAAK,UAAKD,EAAL,SAAqB7B,GAAI,CAAEC,QAAS,OAAQiF,IAAK,EAAG4G,WAAY,UAAjF,UAA8FuE,EAAML,MACpG,UAAC,IAAD,WAA2B,kBAANG,EAAP,UAAwBA,EAAEG,eAA1B,aAAwB,OAAAH,EAAYZ,EAAMgB,OAASJ,EAAGZ,EAAMzJ,WAIvE,SAASiK,EAAT,GAAiK,IAArIxK,EAAoI,EAApIA,KAAMuK,EAA8H,EAA9HA,SAAUE,EAAoH,EAApHA,OAAQrP,EAA4G,EAA5GA,UACzD,GAAI4E,EAAKqK,QAAS,OAAO,KAEzBI,EAASA,IAAU,0BAAOA,IAC1B,IAAMQ,EAAOjL,EAAKG,KAAKhG,KAAO6C,EAAAA,EAASgD,EAAKG,KAAKhG,KAC3C+Q,EAAYlL,EAAKG,KAAKhG,IAAM0C,EAAAA,GAAAA,IAAWmD,EAAKG,KAAKhG,KAAO,GACxDgR,EAAanL,EAAKG,KAAKgL,WACvBC,EAAmBpL,EAAKqL,QAC1BC,EAAW,GACf,GAAIf,EAAU,CACZ,IAAMgB,EAAOvL,EAAKM,MAAQiK,EAC1Be,GAAW,6BAAOjL,EAAAA,EAAAA,IAAYkK,EAAUvK,EAAKO,MAAOgL,EAAO,MAAUA,GAAQ,MAAS,UAAC,IAAD,CAAWhP,MAAOgP,EAAO,EAAI,UAAY,QAAzC,cAAoDA,EAAO,EAAI,IAAM,IAAIlL,EAAAA,EAAAA,IAAYkL,EAAMvL,EAAKO,SAAqB,WACtM+K,GAAWjL,EAAAA,EAAAA,IAAYL,EAAKM,MAAON,EAAKO,MAC/C,IAAMiL,IAAuBxL,EAAKqL,UAAW,SAAC,IAAD,CAAkB3O,UAAU,MAAMC,OAAO,SAAC,IAAD,UAAayO,IAAtD,UAC3C,SAAC,IAAD,CAAKhQ,UAAU,OAAOX,GAAI,CAAEgR,OAAQ,QAApC,UAA8C,SAAC,IAAD,CAAiBR,KAAMS,EAAAA,UAEvE,OAAO,UAAC,IAAD,CAAK7Q,MAAM,OAAOJ,GAAI,CAAEC,QAAS,OAAQoM,eAAgB,gBAAiBnH,IAAK,GAAKvE,UAAWA,EAA/F,WACL,UAAC,IAAD,CAAYmB,MAAK,UAAKyD,EAAKG,KAAK7D,QAAf,SAA+B7B,GAAI,CAAEC,QAAS,OAAQiF,IAAK,EAAG4G,WAAY,UAA3F,YAA0G4E,IAAc,SAAC,IAAD,IAAYF,EAAMC,EAAWT,MACrJ,UAAC,IAAD,CAAYhQ,GAAI,CAAEC,QAAS,OAAQiF,IAAK,EAAG4G,WAAY,UAAvD,UAAqE+E,EAAUE,QAI5E,IAAMG,GAAmBlO,EAAAA,EAAAA,IAAOmO,EAAAA,EAAPnO,EAAa,gBAAGK,EAAH,EAAGA,MAAH,MAAgB,CAC3D+N,aAAc/N,EAAMgO,MAAMD,aAC1BE,SAAU,SACVC,OAAQ,EACR,wCAAyC,CACvC7N,gBAAiBL,EAAME,QAAQiO,YAAYC,MAE7C,uCAAwC,CACtC/N,gBAAiBL,EAAME,QAAQmO,cAAcD,W,iJC1CjD,GAzBiCzO,EAAAA,EAAAA,IAAO2O,EAAAA,EAAc,CACpDC,kBAAmB,SAACC,GAAD,MAAmB,cAATA,GAAiC,kBAATA,IADtB7O,EAEG,gBAAGK,EAAH,EAAGA,MAAH,IAAUyO,UAAAA,OAAV,MAAsB,YAAtB,MAAmCC,cAAAA,OAAnC,MAAmD,UAAnD,QAAoE,CACtG,IAAK,CACHrO,gBAAiBL,EAAME,QAAQuO,GAAWL,KAC1C3P,MAAOuB,EAAME,QAAQuO,GAAWE,cAElC,UAAW,CACTtO,gBAAiBL,EAAME,QAAQuO,GAAWG,MAE5C,iBAAkB,CAChBvO,gBAAiBL,EAAME,QAAQwO,GAAeN,KAC9C3P,MAAOuB,EAAME,QAAQwO,GAAeC,cAEtC,uBAAwB,CACtBtO,gBAAiBL,EAAME,QAAQwO,GAAeE,MAEhD,iBAAkB,CAChBvO,gBAAiBL,EAAME,QAAQuO,GAAWG,MAE5C,8BAA+B,CAC7BvO,gBAAiBL,EAAME,QAAQwO,GAAeE,U,6CCpBnC,SAASC,EAAT,GAA2E,IAAlDrM,EAAiD,EAAjDA,MAAOkJ,EAA0C,EAA1CA,SAAa9L,GAA6B,YACjFkP,GAAKlL,EAAAA,EAAAA,cAAY,SAACmL,EAAGC,GAAJ,OAAetD,EAASsD,GAAU,MAAK,CAACtD,IAC/D,OAAO,SAACuD,EAAA,GAAD,gBAAmBC,WAAS,EAACxD,SAAUoD,EAAItM,MAAOA,GAAS2M,EAAAA,GAAiBvP,GAA5E,aACJuP,EAAAA,EAAAA,KAAgB,SAAAC,GAAG,OAAI,SAAC,EAAD,CAAoC5M,MAAO4M,EAAKV,cAAeU,EAA/D,UACtB,SAAC/N,EAAA,EAAD,CAAK1E,GAAI,CAAE0S,SAAU,MAAO/Q,WAAY,GAAxC,SAA8CgR,EAAAA,EAAkBF,MADXA,W,kLCH5C,SAASG,EAAT,GAAyE,IAAjD/M,EAAgD,EAAhDA,MAAOkJ,EAAyC,EAAzCA,SAAa9L,GAA4B,YAC/EkP,GAAKlL,EAAAA,EAAAA,cAAY,SAACmL,EAAGC,GAAJ,OAAetD,EAASsD,GAAU,MAAK,CAACtD,IAC/D,OAAO,SAAC,KAAD,gBAAwBwD,WAAS,EAACxD,SAAUoD,EAAItM,MAAOA,GAASgN,EAAAA,IAAuB5P,GAAvF,aACJ4P,EAAAA,GAAAA,KAAsB,SAAAC,GAAE,aAAI,SAAC,IAAD,CAAuBjN,MAAOiN,EAA9B,UAC3B,SAAC,IAAD,CAASlS,IAAG,UAAEC,EAAAA,EAAAA,mBAAF,aAAE,EAAqBiS,GAAKlI,KAAM,KADAkI,W,mNCCrC,SAASjK,EAAT,GAA6D,IAAnCjF,EAAkC,EAAlCA,SAEjCC,GADeC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SACgBC,WAAWL,GAC7BM,GAAcrE,EAAAA,EAAAA,IAAiB,OAANgE,QAAM,IAANA,OAAA,EAAAA,EAAQnE,MAAOyE,EAAAA,GAAAA,IAAgBN,EAAOnE,KAAM,QAACmE,QAAD,IAACA,OAAD,EAACA,EAAQnE,MAC9E0E,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,GAAeL,IAAUS,EAAAA,EAAAA,IAAc,CAACJ,EAAYK,MAAMC,EAAAA,EAAAA,IAAiBX,OAAW,CAACK,EAAaL,IACjI,IAAKA,IAAWK,IAAgBE,EAAQ,OAAO,KAE/C,IAAM2O,GAAc,UAAC,IAAD,YAClB,SAACC,EAAD,CAAgBzN,KAAMnB,EAAOoB,IAAIC,EAAAA,GAAAA,OAAAA,SACjC,SAACuN,EAAD,CAAgBzN,KAAMnB,EAAOoB,IAAIC,EAAAA,GAAAA,OAAAA,UAGnC,OAAO,UAAC,IAAD,CAAUzF,GAAI,CAAEG,OAAQ,OAAQsB,SAAU,IAAKnB,SAAU,WAAYL,QAAS,OAAQC,cAAe,UAArG,WACL,SAAC,IAAD,CAAKD,QAAQ,OAAOC,cAAc,SAAS0E,aAAa,WAAWrD,UAAS,eAAU2C,EAAYnD,OAAtB,QAA5E,UACE,SAAC,IAAD,CAAmBO,MAAO4C,EAAa+O,SAAUF,EAAjD,UACE,SAAC,IAAD,CACEpS,UAAU,MACVC,IAAKsD,EAAYW,IACjBpD,SAAS,OACTC,UAAU,OACV1B,GAAI,CAAE8E,GAAI,eAIhB,SAAC,IAAD,CAAYjD,QAAQ,YAAY7B,GAAI,CAAEM,SAAU,WAAYqB,WAAY,EAAGC,cAAe,QAA1F,UACE,SAAC,IAAD,CAASE,MAAM,UAAf,SAA0BqC,EAAAA,GAAAA,eAA2BN,OAEtDK,EAAYkB,gBAAiB,SAAC,IAAD,CAAYvD,QAAQ,YAAY7B,GAAI,CAAEM,SAAU,WAAYyB,OAAQ,EAAGC,MAAO,EAAGL,WAAY,EAAGC,cAAe,QAA/G,UAC5B,UAAC,IAAD,CAASE,MAAM,YAAf,cAA6B+B,EAAOwB,mBAI1C,SAAS2N,EAAT,GAA0D,IAAhCzN,EAA+B,EAA/BA,KACxB,IAAKA,EAAKG,KAAKhG,IAAK,OAAO,KAC3B,IAAMiG,GAAMC,EAAAA,EAAAA,IAAYL,EAAKM,MAAON,EAAKO,KAAOP,EAAKO,UAAWC,EAAJ,GAC5D,OAAO,UAAC,IAAD,WAAaxD,EAAAA,EAASgD,EAAKG,KAAKhG,KAAhC,IAAuCiG,O,sICrCjC,SAASuN,EAAT,GAAiE,IAApC5R,EAAmC,EAAnCA,MAAO2R,EAA4B,EAA5BA,SAAUxQ,EAAkB,EAAlBA,SACrDP,GAAQ,UAAC,EAAAS,SAAD,CAAUD,UAAU,SAAC,IAAD,CAAUb,QAAQ,OAAOzB,MAAO,MAApD,WACZ,UAAC,IAAD,YAAY,SAAC,IAAD,CAASQ,IAAKC,EAAAA,EAAAA,YAAmBS,EAAMmN,cAAnD,IAAoEnN,EAAMsB,QACzEqQ,KAEH,OAAO,SAAC,IAAD,CAAkBhR,UAAU,MAAMC,MAAOA,EAAOG,oBAAkB,EAAlE,SACJI,M,yDCUQiE,GAAcyM,E,SAAAA,eAAc,K,0MChBnCC,EAAiB,+BAAYC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAa7CC,EAAK,SAAC1T,EAAgB2T,GAAjB,OAAoC,SAAC,IAAD,CAAWC,GAAE,mBAAc5T,EAAd,QAA4B6T,MAAOF,KACzFG,EAAUR,EAAeC,MAAK,SAAAQ,GAAE,OAAIC,EAAAA,EAAAA,IAAUrI,OAAOC,OAAOmI,GAAI7K,KAAI,SAAA+K,GAAC,OAAIA,EAAExP,YACpExE,EAAb,WAIE,WAAYD,EAAwBwB,EAAuBiD,GAAa,IAAD,4BAH9DjD,WAG8D,OAF9D5B,SAE8D,OAD9D6E,UAC8D,OAmCvEzB,YAAc,SAACnD,GAAD,OAAsB6T,EAAG,EAAK9T,IAAN,iBAAqBC,EAArB,WAnCiC,KAoCvEqU,YAAc,SAACrU,GAAD,OAAsB6T,EAAG,EAAK9T,IAAN,iBAAqBC,EAArB,WApCiC,KAqCvEsU,cAAgB,SAACC,GAAD,OAAiCV,EAAG,EAAK9T,IAAN,qBAAyBwU,KArCL,KAsCvEC,kBAAoB,SAACD,GAAD,uBAAoB,EAAK5S,MAAM8S,WAAWF,UAA1C,aAAoB,EAA+BG,UAtCA,KA6DvEC,UAAY,SAACJ,EAAgB3P,GAAjB,aAAkC,UAACA,EAAKiB,IAAIC,EAAAA,GAAAA,OAAa,EAAK/F,MAAMmG,aAAlC,QAA2C,IAAMqO,GA5D7FK,KAAKjT,MAAQA,EACbiT,KAAK7U,IAAMI,EACXyU,KAAKhQ,KAAOA,EAPhB,iCAUE,WAAa,OAAOiP,EAAGe,KAAK7U,IAAK,aAVnC,sBAWE,WACE,IAAMC,EAAU4U,KAAKC,MAAM,GAC3B,GAAKD,KAAK/S,UAAU7B,GACpB,OAAO4U,KAAK/S,UAAU7B,KAd1B,mBAgBE,WAAgB,OAAO,SAAC,IAAD,CAASiB,IAAK2T,KAAKE,WAAYzU,GAAI,CAAE0S,SAAU,aAhBxE,wBAoBE,WACE,IAAM/S,EAAU4U,KAAKC,MAAM,GAC3B,OAAO,6BAAM,SAAC,IAAD,CAAS5T,IAAK2T,KAAK/S,UAAU7B,KAAnC,IAAiD6T,EAAGe,KAAK7U,IAAK,gBAtBzE,mBA0BE,WAAwB,OAAO6U,KAAKjT,MAAMsB,OA1B5C,kBA2BE,WAA0C,OAAO2R,KAAKjT,MAAMP,SA3B9D,iBA4BE,WACE,OAAQwT,KAAK7U,KACX,IAAK,oBACL,IAAK,yBACL,IAAK,mBACL,IAAK,sBAAuB,MAAO,CAAC,WACpC,QAAS,OAAO,OAAI0L,EAAAA,OAlC1B,qBAqCE,WAAyC,OAAOmJ,KAAKjT,MAAMoT,QArC7D,sBAsCE,WAAiD,OAAOH,KAAKjT,MAAM8S,cAtCrE,kBA4CE,SAAWO,GAAuE,OAAOA,EAAMvB,EAAeC,MAAK,SAAAuB,GAAC,OAAIA,EAAED,WAAQ5O,IA5CpI,kBA6CE,WAAsB,OAAOqN,IA7C/B,sBA8CE,WAA0B,OAAOQ,IA9CnC,+BA+CE,SAAyBiB,GACvB,IAAMC,EAAkD,GAMxD,OALArJ,OAAOsJ,QAAQF,GAAQG,SAAQ,YAAmB,IAAD,eAAhBtV,EAAgB,KAAX4B,EAAW,KACzCP,EAASI,KAAKE,IAAL,MAAAF,MAAI,OAAQG,EAAMP,SAC7B+T,EAAQ/T,GAAS+T,EAAQ/T,GAASkU,KAAKvV,GACtCoV,EAAQ/T,GAAU,CAACrB,MAEnBoV,IAtDX,wBAyDE,SAAkBD,EAAmDtQ,GACnE,IAAM2Q,EAA+D,GAKrE,OAJAzJ,OAAOsJ,QAAQF,GAAQG,SAAQ,YAAsB,IAAD,eAAnBlV,EAAmB,KAAXwB,EAAW,KAC5C6T,EAAW1J,OAAO2J,KAAK9T,EAAM8S,YAAYpL,KAAI,SAAAqC,GAAC,OAAIgK,SAAShK,MAAiBsB,QAAO,SAAA2I,GAAE,OAAIhU,EAAMgT,UAAUgB,EAAI/Q,MAC/G4Q,EAAQI,SAAQL,EAAkBpV,GAAUqV,MAE3CD,MA/DX,KAmEaM,EAAoB,SAAChC,EAA6B3O,GAC7D,MAAO,CACL3C,MAAOsR,EAAG,WACVhD,MAAM,SAAC,IAAD,CAAS5F,KAAM,EAAG5K,GAAI,CAAEyV,GAAI,GAAK7U,IAAKiE,IAC5C6Q,QAAQ,SAAC,IAAD,CAAS5T,MAAM,UAAf,sB,iFCvFC2R,E,wHADPD,EAAK,SAACC,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAG,yBAAyBC,MAAOF,KAYvEkC,GAAUC,EAAAA,EAAAA,IAAkBC,EAAAA,IAAoB,SAAAzD,GAAC,MAAI,CAAC,GAAD,OAAIA,EAAJ,UAC3D0D,EAAAA,EAAAA,IAAUC,EAAAA,GAAAA,WAAA,UAAOF,EAAAA,GAAAA,KAAuB,SAAA5M,GAAC,OAAI+M,EAAAA,EAAAA,IAAI,EAAGC,EAAAA,GAAMhN,SAAO,GAAGiN,EAAAA,EAAAA,IAAQ,UAEtEC,EAA+B,CACnCvT,KAAM4Q,EAAG,yBACT4C,KAAM5C,EAAG,yBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,IAAxB,IAAuCA,EAAAA,EAAAA,KAAvC,IAAuDA,EAAAA,EAAAA,MAAvD,IAAwEA,EAAAA,EAAAA,KAAxE,IAAwFA,EAAAA,EAAAA,QAAxF,SACNmN,QAAS,SAACnL,GAAD,OAAoF,IAAlEiO,EAAAA,EAAAA,QAAmB,SAAAJ,GAAC,OAAI7N,EAAKiB,IAAIyQ,EAAAA,GAAM7D,IAAIvM,OAAS,KAAG0P,QAClFc,SAAU,CAAC,CACTC,UAAU,EACVC,OAAQ9K,OAAOC,OAAOiK,GAAS3M,KAAI,SAAAzD,GAAI,MAAK,CAAEA,KAAAA,SAK5CiR,GAASV,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,KAAY,GAAGC,EAAAA,EAAAA,IAAQ,MAC1CO,EAA4B,CAChC7T,KAAM4Q,EAAG,sBACT4C,KAAM5C,EAAG,sBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,KAAP,IAAuBA,EAAAA,EAAAA,QAC7BmN,QAAS,SAACnL,GAAD,OAAkBA,EAAKiB,IAAIyQ,EAAAA,GAAAA,MAAYpQ,OAAS,GACzDwQ,SAAU,CAAC,CACTC,UAAU,EACVC,OAAQ,CAAC,CACPlG,MAAMqG,EAAAA,EAAAA,IAAG,uBACT7Q,OAAQ,GACRC,KAAM,KACL,CACDP,KAAMiR,OAMNG,GAASb,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,MAAa,GAAGC,EAAAA,EAAAA,IAAQ,MAC3CU,EAA6B,CACjChU,KAAM4Q,EAAG,sBACT4C,KAAM5C,EAAG,sBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,SAC9BmN,QAAS,SAACnL,GAAD,OAAkBA,EAAKiB,IAAIyQ,EAAAA,GAAAA,OAAapQ,OAAS,GAC1DwQ,SAAU,CAAC,CACTC,UAAU,EACVC,OAAQ,CAAC,CACPlG,MAAMqG,EAAAA,EAAAA,IAAG,uBACT7Q,OAAQ,GACRC,KAAM,KACL,CACDP,KAAMoR,OAMNE,EAAa,CAAC,YAAa,iBAC3BC,GAASC,EAAAA,EAAAA,IAAaF,GACtBG,GAASlB,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,KAAY,GAAGgB,EAAAA,EAAAA,IAAMH,EAAQ,MAAMZ,EAAAA,EAAAA,IAAQ,OAC9DgB,EAA4B,CAChCtU,KAAM4Q,EAAG,sBACT4C,KAAM5C,EAAG,sBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,KAAP,IAAuBA,EAAAA,EAAAA,QAC7BmN,QAAS,SAACnL,GAAD,OAAkBA,EAAKiB,IAAIyQ,EAAAA,GAAAA,MAAYpQ,OAAS,GACzDwQ,SAAU,CAAC,CACTC,UAAU,EACVC,OAAQ,CAAC,CACPlG,MAAMqG,EAAAA,EAAAA,IAAG,0BACT7Q,OAAQ,GACRC,KAAM,MAERqR,YAAa,CACXb,UAAU,EACVc,KAAMP,EACNhR,MAAOiR,EACPlU,MAnFO6Q,EAmFG,sBAnFgB,SAAC,IAAD,CAAWC,GAAG,qBAAqBC,MAAOF,KAoFpE4D,OAAQ,CACNnV,MAAOsR,EAAG,sBACVhD,KAAMjO,EAAAA,EAAAA,MAER+U,OAAQ,CACNC,GAAI,CACFhB,OAAQ,CAAC,CACPhR,KAAMyR,UASZQ,EAA0B,CAC9B5U,KAAM4Q,EAAG,oBACT4C,KAAM5C,EAAG,oBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,QAAP,IAA0BA,EAAAA,EAAAA,WAChCmN,QAAS,SAACnL,GAAD,OAAkBA,EAAKiB,IAAIyQ,EAAAA,GAAAA,SAAepQ,OAAS,GAC5DwQ,SAAU,CAAC,CACTC,UAAU,EACVC,OAAQ,CAAC,CACPlG,MAAMqG,EAAAA,EAAAA,IAAG,wBACT7Q,OAAQ,GACRC,KAAM,SAMN2R,GAAa3B,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,MAAa,GAAGC,EAAAA,EAAAA,KAAS,MAChDwB,GAAa5B,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,MAAa,GAAGC,EAAAA,EAAAA,IAAQ,KAC/CyB,GAAW7B,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,MAAa,GAAGC,EAAAA,EAAAA,KAAS,MAC9C0B,EAA6B,CACjChV,KAAM4Q,EAAG,uBACT4C,KAAM5C,EAAG,uBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,SAC9BmN,QAAS,SAACnL,GAAD,OAAkBA,EAAKiB,IAAIyQ,EAAAA,GAAAA,OAAapQ,OAAS,GAC1DwQ,SAAU,CAAC,CACTC,UAAU,EACVC,OAAQ,CAAC,CACPhR,KAAMkS,GACL,CACDlS,KAAMmS,GACL,CACDnS,KAAMoS,OAMNE,EAAa,CAAC,YAAa,gBAC3BC,GAASf,EAAAA,EAAAA,IAAac,GACtBE,GAAgBjC,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,IAAW,GAAGC,EAAAA,EAAAA,IAAQ,MAChD8B,GAAalC,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,IAAW,GAAGgB,EAAAA,EAAAA,IAAMa,EAAQ,MAAM5B,EAAAA,EAAAA,IAAQ,OACjE+B,GAAanC,EAAAA,EAAAA,IAAUG,EAAAA,GAAAA,IAAW,GAAGgB,EAAAA,EAAAA,IAAMa,EAAQ,MAAM5B,EAAAA,EAAAA,KAAS,MAsC3DgC,EAAgC,CAC3C/B,EACAM,EACAG,EACAM,EACAM,EACAI,EA3C+B,CAC/BhV,KAAM4Q,EAAG,qBACT4C,KAAM5C,EAAG,qBACThD,MAAM,4BAAOjO,EAAAA,EAAAA,IAAP,IAAsBA,EAAAA,EAAAA,OAC5BmN,QAAS,SAACnL,GAAD,OAAkBA,EAAKiB,IAAIyQ,EAAAA,GAAAA,KAAWpQ,OAAS,GACxDwQ,SAAU,CAAC,CACTC,UAAU,EACVjG,KAAMmD,EAAG,qBACT+C,OAAQ,CAAC,CACPhR,KAAMwS,IAERZ,YAAa,CACXb,UAAU,EACVc,KAAMS,EACNhS,MAAOiS,EACPT,OAAQ,CACNnV,MAAOsR,EAAG,qBACVhD,KAAMjO,EAAAA,EAAAA,KAERK,MAAM8T,EAAAA,EAAAA,IAAG,qBACTY,OAAQ,CACNC,GAAI,CACFhB,OAAQ,CAAC,CACPhR,KAAMyS,GACL,CACDzS,KAAM0S,GACL,CACD5H,MAAM8H,EAAAA,EAAAA,IAAI,YACVtS,MAAO,GACPC,KAAM,aAkBLsS,GAAgBC,EAAAA,EAAAA,IAAa,CACxCC,QAAO,kBACF3C,GADC,IAEJ4C,KAAM/B,EACNgC,SAAU7B,EACV8B,YAAahB,EACbiB,SAAUhB,EACViB,OAAQhB,EACRiB,QAASb,EACTc,SAAUb,EACVc,cAAeb,IAEjBc,MAAO,CAELC,UAAWhC,M,uMCjNFN,EAAK,SAACjD,EAAgB/H,GAAjB,OAAqC,SAAC,IAAD,CAAWgI,GAAG,QAAQC,MAAOF,EAAQ/H,OAAQA,KACvFyM,EAAM,SAAC1E,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAG,YAAYC,MAAOF,KAE3DsD,EAAe,SAACK,GAAD,OAAoB6B,EAAAA,EAAAA,IAAiB,CAAC,eAAF,eAAoB7B,MAC7E,SAAS8B,EAAKxZ,EAAgDyZ,GACnE,IAAM/B,EAAO,CAAC1X,EAAKyZ,GAEnB,MAAO,CAAC/B,EADKL,EAAaK,IAQrB,SAASgC,EAAMC,EAAyC3Z,GAC7D,MAAO,CACL,SAAC+T,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAE,UAAK2F,EAAL,YAAgB3Z,EAAhB,QAA2BiU,MAAOF,KACnE,SAACA,EAAgB/H,GAAjB,OAAqC,SAAC,IAAD,CAAWgI,GAAE,UAAK2F,EAAL,YAAgB3Z,GAAOiU,MAAOF,EAAQ/H,OAAQA,Q,6MCX9F4N,EAAe,+BAAYjG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAQ5BpP,EAAAA,WAMnB,WAAYzE,EAAgBwE,EAA2BqV,EAAwBhV,GAAa,IAAD,4BALlF7E,SAKkF,OAJlF4B,WAIkF,OAHlFiD,UAGkF,OAFlFxD,YAEkF,OADlF0N,gBACkF,OAW3F+E,GAAK,SAACC,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAE,iBAAY,EAAKhU,IAAjB,QAA4BiU,MAAOF,KAXkB,KAgB3F+F,mBAAqB,SAACC,GAAD,OAAyB,EAAKrU,cAAgB,EAAKoO,GAAL,6BAA8BiG,IAAiB,IAfhHlF,KAAKxT,OAASwY,EAAWxY,OACzBwT,KAAK9F,WAAa8K,EAAW9K,WAC7B8F,KAAK7U,IAAMA,EACX6U,KAAKjT,MAAQ4C,EACbqQ,KAAKhQ,KAAOA,EAG6B,OAF1C,0BAMD,WAAa,OAAOgQ,KAAKf,GAAG,UAAS,yBACrC,WAAsB,OAAOe,KAAKxT,OAAS,IAAG,uBAC9C,WAAoB,OAAOwT,KAAKnP,cAAgBmP,KAAKf,GAAG,eAAiB,KAAI,uBAC7E,WAAoB,OAAOe,KAAKf,GAAG,iBAAgB,eAEnD,WAAY,OAAOe,KAAKjT,MAAMkP,OAAM,qBACpC,WAAkB,OAAO+D,KAAKjT,MAAMoY,aAAY,oBAChD,WAAiB,OAAOnF,KAAKjT,MAAM+S,WAAU,2BAC7C,WACE,OAAIE,KAAKnP,cAAsBuU,EAAAA,GACnBC,EAAAA,KACb,4BACD,SAAe5Y,GACb,OAAIuT,KAAKnP,eAAsByU,EAAAA,EAAAA,IAAe7Y,IAClC8Y,EAAAA,EAAAA,IAAkB9Y,MAC/B,mBAnBD,WAAsB,OAAOsY,MAAc,EAdxBnV,GAAAA,EAaZqB,IAAM,SAACuU,GAAD,OAAiEA,EAAYT,EAAajG,MAAK,SAAA2G,GAAC,OAAIA,EAAED,WAAchU,GAb9G5B,EAeZ8V,iBAAmB,SAACpF,EAA4CpG,GAA7C,OAAkGhD,OAAOyO,YAAYzO,OAAOsJ,QAAQF,GAAQlI,QAAO,gDAAyC8B,aAAeA,OAflNtK,EAgBZgW,eAAiB,SAACtW,GAAD,gBAAsCA,EAAO7C,MAA7C,YAAsDgK,EAAAA,GAAkBnH,EAAO4F,aAmBlG,IAAM+L,EAAoB,SAAChC,EAA6B3O,EAAauV,EAAmB1E,GAA9D,MAAgH,CAC/IxT,MAAOsR,EAAG,eACVhD,KAAM,SAAAjM,GAAI,OAAI,SAAC,IAAD,CAASqG,KAAM,EAAG5K,GAAI,CAAEyV,GAAI,GAAK7U,IAAK2D,EAAKiB,IAAIC,EAAAA,GAAAA,OAAAA,KAAkBI,MAAQ,EAAIhB,EAAMuV,KACjG1E,OAAQA,IAAU,SAAC,IAAD,CAAS5T,MAAM,UAAf,SAA0B4T,MAGjC2E,EAAkB,SAAC7G,GAAD,OAC7B,SAAAjP,GAAI,OAAIiP,EAAG,sBAAD,OAAuBjP,EAAKiB,IAAIC,EAAAA,GAAAA,OAAAA,aAA0BI,W,kLCjDvD,SAASyU,IAA4B,IAAD,EACzCtW,GAAaF,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SACFuW,GAAWC,EAAAA,EAAAA,MAEjB,cAA+BC,EAAAA,EAAAA,IAAS,CAAErD,KAAM,2BAA4BsD,KAAK,WAAjF,QAA6F,CAAEC,OAAQ,CAAEC,IAAK,MAAxGD,OAAUC,IAAAA,OAAhB,MAAsB,GAAtB,EACMzI,GAAKlL,EAAAA,EAAAA,aAAW,mCACpB,WAAOhB,GAAP,oFACQY,EAAY7C,EAASqK,SAASpI,GAChC4U,EAASD,EAER/T,EAJP,wBAKUiU,ECjBL,CACLpb,IDgBqCuG,ECfrCjF,MAAO,EACPyI,UAAW,EACXsR,QAAS,SACTC,aAAc,GACdC,mBAAmBC,EAAAA,EAAAA,GAAa9P,EAAAA,IAAa,iBAAM,MACnDtC,eAAgB,GAChBqO,YAAa,GACbgE,WAAY,GACZC,cAAe,GACfC,eAAeC,EAAAA,EAAAA,KACfC,OAAQ,CACNC,KAAM,EACNC,MAAO,EACPC,MAAO,GAETC,aAAc,GACdnS,cAAe,EACfL,KAAM,CAAC,GAAI,GAAI,IACfyS,aAAa,EACb9T,UAAU,GDHN9D,EAAS6X,WAAWf,GANxB,SAOiC9O,EAAAA,GAAAA,IAAmB/F,GAPpD,UAOUa,EAPV,0DASUjD,GAASiY,EAAAA,EAAAA,GAAqBhV,EAAesI,eAC7CxL,EAAWI,EAAS+X,aAAalY,GACvCG,EAASgY,kBAAkBpY,EAAUqC,GAIrC4U,EAAS,GAfb,QAiBEN,EAAS,cAAD,OAAetU,EAAf,YAA+B4U,IAjBzC,4CADoB,sDAoBpB,CAACN,EAAUvW,EAAU4W,IAEvB,OAAOzI,I,2FEnCM,SAASlG,IAAgE,IAAnDhG,EAAkD,uDAAJ,GACjF,GAAqBnC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,EAAR,EAAQA,SACR,GAAqC8I,EAAAA,EAAAA,UAAS9I,EAASqK,SAASpI,IAAhE,eAAOY,EAAP,KAAkBoV,EAAlB,KAKA,OAJAtO,EAAAA,EAAAA,YAAU,kBAAMsO,EAAgBjY,EAASqK,SAASpI,MAAgB,CAACjC,EAAUiC,KAC7E0H,EAAAA,EAAAA,YAAU,kBACR1H,EAAejC,EAASkY,WAAWjW,EAAcgW,QAAmBlW,IACpE,CAACE,EAAcgW,EAAiBjY,IAC3B6C,I,0HCmBM,SAASQ,EAAoBpB,GAC1C,IAAQjC,GAAaF,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SAER,OAAOiD,EAAAA,EAAAA,cAAY,SAACyO,GAClB,GAAKzP,EAEL,GAAI,SAAUyP,EAAQ,OAAQA,EAAOyG,MACnC,IAAK,SACHnY,EAASgY,kBAAkBtG,EAAOnK,GAAItF,GACtC,MACF,IAAK,gBACH,IAAMY,EAAY7C,EAASqK,SAASpI,GAC9BmV,EAAgBvU,EAAUuU,cACxBgB,EAAmB1G,EAAnB0G,QAASvW,EAAU6P,EAAV7P,MACjB,GAAIuV,EAAcgB,KAAavW,EAAO,MACtC7B,EAAS6X,YAAT,kBAAyBhV,GAAzB,IAAoCuU,eAAc,kBAAMA,GAAP,cAAuBgB,EAAUvW,OAClF,MAEF,IAAK,YACH,IAAMgB,EAAY7C,EAASqK,SAASpI,GAC5BmW,EAAmB1G,EAAnB0G,QAASvW,EAAU6P,EAAV7P,MAEXsV,GAAakB,EAAAA,EAAAA,IAAUxV,EAAUsU,YAEvC,GAAIA,EAAWiB,KAAavW,EAAO,MAC9BA,EACAsV,EAAWiB,GAAWvW,SADRsV,EAAWiB,GAG9BpY,EAAS6X,YAAT,kBAAyBhV,GAAzB,IAAoCsU,WAAAA,KACpC,MAEF,IAAK,aACH,IAAMtU,EAAY7C,EAASqK,SAASpI,GAC5BmW,EAAY1G,EAAZ0G,QAEFjB,EAAatU,EAAUsU,kBACtBA,EAAWiB,GAElBpY,EAAS6X,YAAT,kBAAyBhV,GAAzB,IAAoCsU,WAAAA,KACpC,MAEF,IAAK,OACH,IAAMtU,EAAY7C,EAASqK,SAASpI,GAC5BkD,EAAStC,EAATsC,KAEAC,EAA+BsM,EAA/BtM,MAAgBkT,EAAe5G,EAAxB6G,QACTC,EAAarT,EAAKC,GAIxB,GAHAD,EAAKC,GAASkT,EAGVE,EAAY,CACd,IAAMC,EAAUzY,EAASqK,SAASmO,GAC9BC,GAASzY,EAAS6X,YAAT,kBAAyBY,GAAzB,IAAkCtT,KAAM,CAAC,GAAI,GAAI,OAIhE,GAAImT,EAAY,CACd,IAAMxB,EAAU9W,EAASqK,SAASiO,GAC9BxB,GACFA,EAAQ3R,KAAK6L,SAAQ,SAAA0H,GACnB,GAAKA,EAAL,CACA,IAAMC,EAAQ3Y,EAASqK,SAASqO,GAChCC,GAAS3Y,EAAS6X,YAAT,kBAAyBc,GAAzB,IAAgCxT,KAAMwT,EAAMxT,KAAKH,KAAI,SAAA4T,GAAC,OAAIA,IAAMN,EAAa,GAAKM,YAMjGzT,EAAK6L,SAAQ,SAAC0H,EAAGG,GACf,GAAKH,EAAL,CACA,IAAM5B,EAAU9W,EAASqK,SAASqO,GAC9B5B,GAAS9W,EAAS6X,YAAT,kBAAyBf,GAAzB,IAAkC3R,KAAM,CAAClD,GAAD,eAAkBkD,IAAMwD,QAAO,SAACmQ,EAAG7T,GAAJ,OAAUA,IAAM4T,EAAO,YAI7G7Y,EAAS6X,YAAT,kBAAyBhV,GAAzB,IAAoCsC,KAAAA,UAGtCnF,EAAS6X,YAAT,kBAAyB7X,EAASqK,SAASpI,IAAmByP,MAC/D,CAACzP,EAAcjC,M,uSCrFL,SAAS4C,EAAYX,GAA8H,IAA7FsB,EAA4F,uDAA1D,EAAGwV,EAAuD,uCAC/J,GAAqBjZ,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,EAAR,EAAQA,SACR,GAA8BwJ,EAAAA,EAAAA,KAA9B,eAAOwP,EAAP,KAAgBC,EAAhB,KACMC,GAAiBrd,EAAAA,EAAAA,GAAWsd,EAAYnZ,EAAUiC,EAAcsB,EAAyBwV,GAAc,CAACC,EAAS/W,EAAcjC,EAAUuD,EAAyBwV,IAExK,SAA4CG,QAA5C,IAA4CA,EAAAA,EAAkB,GAA9D,IAAQ/T,KAAAA,OAAR,MAAe,GAAf,EAAmBxC,EAAnB,EAAmBA,SAAUyW,EAA7B,EAA6BA,YAE7BzP,EAAAA,EAAAA,YAAU,kBACR1H,EAAejC,EAASkY,WAAWjW,EAAcgX,QAAclX,IAC/D,CAACE,EAAcgX,EAAYjZ,KAE7B2J,EAAAA,EAAAA,YAAU,kBACR1H,EAAejC,EAASqZ,aAAaJ,QAAclX,IACnD,CAACE,EAAcgX,EAAYjZ,IAE7B,cAAyBmF,EAAzB,GAAOmU,EAAP,KAAWC,EAAX,KAAeC,EAAf,KAAmBC,EAAnB,MACA9P,EAAAA,EAAAA,YAAU,kBACR2P,EAAKtZ,EAASkY,WAAWoB,EAAIL,QAAclX,IAC3C,CAACuX,EAAIL,EAAYjZ,KACnB2J,EAAAA,EAAAA,YAAU,kBACR4P,EAAKvZ,EAASkY,WAAWqB,EAAIN,QAAclX,IAC3C,CAACwX,EAAIN,EAAYjZ,KACnB2J,EAAAA,EAAAA,YAAU,kBACR6P,EAAKxZ,EAASkY,WAAWsB,EAAIP,QAAclX,IAC3C,CAACyX,EAAIP,EAAYjZ,KACnB2J,EAAAA,EAAAA,YAAU,kBACR8P,EAAKzZ,EAASkY,WAAWuB,EAAIR,QAAclX,IAC3C,CAAC0X,EAAIR,EAAYjZ,IAEnB,IAAM0Z,GAAWrZ,EAAAA,EAAAA,UAAQ,WACvB,OAAOsC,IAAYgX,EAAAA,EAAAA,IAAchX,EAAUV,KAC1C,CAACU,EAAUV,IACR1B,GAAOF,EAAAA,EAAAA,UAAQ,WACnB,GAAKqZ,GAAaN,EAClB,OAAOQ,EAAAA,EAAAA,IAAUF,GAAU,SAACG,EAAKC,GAC/B,MAA6BV,EAAWU,GAApBC,GAApB,EAAQxZ,MAAR,aACA,OAAO,kBAAKsZ,GAAQE,QAErB,CAACL,EAAUN,IAEd,OAAO7Y,EAGF,SAAe4Y,EAAtB,iDAAO,OAAP,oBAAO,WAA2BnZ,EAA2BiC,GAAtD,gGAAuFsB,EAAvF,+BAAyH,EAAGwV,EAA5H,uBAEA9W,EAFA,iEAGyB+X,EAAkBha,EAAUiC,EAAcsB,EAAyBwV,GAH5F,UAGCkB,EAHD,+DAKC9U,EAAuB,CAAClD,GACxBmX,GAND,UAMiBnX,EAAegY,GAC/BtX,GAPD,UAO2CV,EAAegY,EAAgB1Z,MAP1E,UASC2Z,QAAQC,IAAIF,EAAgBpX,UAAUsC,KAAKH,IAA/B,mCAAmC,WAAO8U,GAAP,0EAC9CA,EAD8C,iEAE1BE,EAAkBha,EAAU8Z,GAFF,UAE7CM,EAF6C,wDAInDjV,EAAK8L,KAAK6I,GACVV,EAAWU,GAAMM,EACjBzX,EAASmX,GAAMM,EAAW7Z,KANyB,4CAAnC,wDATb,iCAkBE,CAAE4E,KAAAA,EAAMxC,SAAAA,EAAUyW,WAAAA,IAlBpB,6EA2BQY,EAAkB,EAAlBA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCha,EAA2BiC,GAA5D,sGAA6FsB,EAA7F,+BAA+H,EAAGwV,EAAlI,uBAEO9W,EAFP,oDAGQY,EAAY7C,EAASqK,SAASpI,GAHtC,oDAKQpC,EAASG,EAASC,WAAW4C,EAAUiC,gBAL/C,oEAO+BkD,EAAAA,GAAAA,IAAmB/F,GAPlD,eAOQa,EAPR,iBAQ4B3C,EAAAA,GAAAA,IAAgBN,EAAOnE,KARnD,eAQQwE,EARR,iBASmCnE,EAAAA,EAAAA,WATnC,WASQse,EATR,OAUOvX,GAAmB5C,GAAgBma,EAV1C,0DAWQlT,GAAY,OAAC4R,QAAD,IAACA,EAAAA,EAAetR,OAAOC,OAAO7E,EAAUoU,mBAAmBjS,KAAI,SAAA4L,GAAC,OAAI5Q,EAASsH,QAAQsJ,OAAKjI,QAAO,SAAAiI,GAAC,OAAIA,KAClHrQ,EAZR,kBAaO4G,EAAUnC,KAAI,SAAA4L,GAAC,OAAI0J,EAAAA,EAAAA,IAAmB1J,EAAGrN,OAbhD,EAcIgX,EAAAA,EAAAA,IAAoB1X,GACpBC,EAAe0X,QAAQ3X,EAAUqF,aACjC1H,EAAAA,EAAAA,IAAiBX,GACjBK,EAAYK,KACZ8Z,EACA7a,EAAAA,GACA4U,EAAAA,IApBJ,kBAsBS,CAAEvR,UAAAA,EAAWhD,OAAAA,EAAQiD,eAAAA,EAAgB5C,YAAAA,EAAaK,KAAAA,IAtB3D","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactSetSlotTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/Character/CharacterSelectionModal.tsx","Components/ConditionalWrapper.tsx","Components/FieldDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","DataContext.tsx","Data/Artifacts/ArtifactSheet.tsx","Data/Resonance.tsx","Data/SheetUtil.tsx","Data/Weapons/WeaponSheet.tsx","ReactHooks/useCharSelectionCallback.tsx","Util/CharacterUtil.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useTeamData.tsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport KeyMap, { cacheValueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { SlotKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport ArtifactSetSlotTooltip from './ArtifactSetSlotTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level, mainStatVal } = art\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <ArtifactSetSlotTooltip slotKey={key} sheet={artifactSheet}>\r\n      <Box\r\n        component=\"img\"\r\n        className={`grad-${rarity}star`}\r\n        src={artifactSheet.slotIcons[key]}\r\n        maxWidth=\"100%\"\r\n        maxHeight=\"100%\"\r\n      />\r\n    </ArtifactSetSlotTooltip>\r\n    <Typography sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }} variant=\"subtitle2\"><SqBadge color={levelVariant as any}>+{level}</SqBadge></Typography>\r\n    <Typography variant='h6' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, }}>\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{cacheValueString(mainStatVal, KeyMap.unit(mainStatKey))}{KeyMap.unit(mainStatKey)} {KeyMap.getStr(mainStatKey)}</Typography>} disableInteractive>\r\n        <SqBadge color=\"secondary\" sx={{ p: 0.25 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n      </BootstrapTooltip>\r\n    </Typography>\r\n  </CardDark>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport { SlotKey } from \"../../Types/consts\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\ntype Data = {\r\n  slotKey: SlotKey,\r\n  sheet: ArtifactSheet | undefined,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function ArtifactSetSlotTooltip({ slotKey, sheet, children }: Data) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"text\" width={100} />\r\n    <Skeleton variant=\"text\" width={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <Box>\r\n      <Typography><strong>{sheet?.name}</strong></Typography>\r\n      <Typography>{artifactSlotIcon(slotKey)} {sheet?.getSlotName?.(slotKey)}</Typography>\r\n    </Box>\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useContext, useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.img}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from './CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { Stars } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey | \"\",\r\n  onClick?: (characterKey: CharacterKey, tab: string) => void,\r\n  onClickHeader?: (characterKey: CharacterKey, tab: string) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, footer, isTeammateCard }: CharacterCardProps) {\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const { character, characterSheet, target: data } = teamData?.[characterKey] ?? {}\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey, \"overview\"), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!teamData || !character || !characterSheet || !data) return null;\r\n  const dataContextObj: dataContextObj = {\r\n    character,\r\n    data,\r\n    characterSheet,\r\n    mainStatAssumptionLevel: 0,\r\n    teamData,\r\n    characterDispatch\r\n  }\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <DataContext.Provider value={dataContextObj}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n          <IconButton sx={{ p: 0.5 }} onClick={event => characterDispatch({ favorite: !character.favorite })}>\r\n            {character.favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n          <Header onClick={!onClick ? onClickHeader : undefined} />\r\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n            <Artifacts />\r\n            {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n              <Grid item xs={1} height=\"100%\">\r\n                <WeaponCardPico weaponId={character.equippedWeapon} />\r\n              </Grid>\r\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} index={i} /></Grid>)}\r\n            </Grid>}\r\n            {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n            {!isTeammateCard && <Stats />}\r\n            {weaponChildren}\r\n            {artifactChildren}\r\n            {characterChildren}\r\n          </CardContent>\r\n        </ConditionalWrapper>\r\n        {footer}\r\n      </CardLight>\r\n    </DataContext.Provider>\r\n  </Suspense>\r\n}\r\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey, tab: string) => void }) {\r\n  const { data, characterSheet } = useContext(DataContext)\r\n  const characterKey = data.get(input.charKey).value as CharacterKey\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey, \"overview\")} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item>\r\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1 }: { characterKey: CharacterKey | \"\", index?: number }) {\r\n  const teammateSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const character = useCharacter(characterKey)\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <BootstrapTooltip placement=\"top\" title={title}>\r\n        <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n          <Box\r\n            component=\"img\"\r\n            src={teammateSheet.thumbImgSide}\r\n            maxWidth=\"100%\"\r\n            maxHeight=\"100%\"\r\n            sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n          />\r\n        </Box>\r\n      </BootstrapTooltip>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge>\r\n      </Typography>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"secondary\" >C{character.constellation}</SqBadge>\r\n      </Typography>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport useForceUpdate from \"../../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../ReactHooks/useTeamData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\r\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => database.followAnyChar(setFavesDirty), [database, setFavesDirty])\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"yes\" }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"no\" }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [characterSheets, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }: { onClick: () => void, characterKey: CharacterKey, }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const teamData = useTeamData(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const favorite = database._getChar(characterKey)?.favorite\r\n  const { target: data } = teamData?.[characterKey] ?? {}\r\n  if (!characterSheet) return null\r\n  const rarity = characterSheet.rarity\r\n  return <Box>\r\n    {favorite !== undefined && <Box display=\"flex\" position=\"absolute\" alignSelf=\"start\" zIndex={1}>\r\n      <IconButton sx={{ p: 0.5 }} onClick={() => characterDispatch({ favorite: !favorite })}>\r\n        {favorite ? <Favorite /> : <FavoriteBorder />}\r\n      </IconButton>\r\n    </Box>}\r\n    <CardActionArea onClick={onClick} >\r\n      <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n        <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n        <Box sx={{ pl: 1 }}>\r\n          <Typography><strong>{characterSheet.name}</strong></Typography>\r\n          {data ? <>\r\n            <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{CharacterSheet.getLevelString(data.get(input.lvl).value, data.get(input.asc).value)}</Typography>\r\n            <Typography >\r\n              <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\r\n            </Typography>\r\n          </> : <>\r\n            <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n          </>}\r\n          <small><Stars stars={rarity} colored /></small>\r\n        </Box>\r\n      </CardLight>\r\n    </CardActionArea >\r\n  </Box>\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { DataContext, dataContextObj } from \"../DataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\nimport StatIcon from \"./StatIcon\";\r\nimport { data as dataNode } from '../Formula/utils'\r\nimport { Data } from \"../Formula/type\";\r\nimport { Groups } from \"@mui/icons-material\";\r\n\r\nexport default function FieldDisplay({ field, fieldContext, component }: { field: IFieldDisplay, fieldContext?: dataContextObj, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    // TODO: remove as Data\r\n    const node = fieldContext ? data.get(dataNode(field.node, { target: fieldContext.data.data[0] } as Data)) : data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = fieldContext ? oldData.get(dataNode(field.node, { target: fieldContext.oldData!.data[0] } as Data)) : oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n  const formulaTextOverlay = !!node.formula && <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Typography sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >{fieldVal}{formulaTextOverlay}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey | \"\") => void\r\n  value: ElementKey | \"\"\r\n}\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <ToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} >\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import { Box, Typography } from '@mui/material';\r\nimport { useContext, useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.img}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography variant='subtitle1' sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }}>\r\n      <SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n      <SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\r\nimport { UIData } from \"./Formula/uiData\"\r\nimport { ICachedCharacter } from \"./Types/character\"\r\nimport { CharacterKey } from \"./Types/consts\"\r\nimport { ICachedWeapon } from \"./Types/weapon\"\r\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\r\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  data: UIData\r\n  oldData?: UIData\r\n  mainStatAssumptionLevel: number\r\n  teamData: TeamData\r\n  characterDispatch: (action: characterReducerAction) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Translate } from \"../../Components/Translate\";\r\nimport { mergeData } from \"../../Formula/api\";\r\nimport { Data } from \"../../Formula/type\";\r\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../../Types/consts\";\r\nimport { DocumentSection } from \"../../Types/sheet\";\r\nimport { UIData } from \"../../Formula/uiData\"\r\nimport { input } from \"../../Formula\"\r\nimport SqBadge from \"../../Components/SqBadge\";\r\nimport IConditional from \"../../Types/IConditional\";\r\n\r\n// TODO: remove typecasting once all sheets populated\r\nconst artifactSheets = import(\".\").then(imp => imp.default)\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  document?: DocumentSection[],\r\n}\r\n\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\nconst allData = artifactSheets.then(as => mergeData(Object.values(as).map(s => s.data)))\r\nexport class ArtifactSheet {\r\n  readonly sheet: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  readonly data: Data\r\n  constructor(setKey: ArtifactSetKey, sheet: IArtifactSheet, data: Data) {\r\n    this.sheet = sheet\r\n    this.key = setKey\r\n    this.data = data\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get defIconSrc() {\r\n    const slotKey = this.slots[0]\r\n    if (!this.slotIcons[slotKey]) return undefined\r\n    return this.slotIcons[slotKey]\r\n  }\r\n  get defIcon() { return <ImgIcon src={this.defIconSrc} sx={{ fontSize: \"1.5em\" }} /> }\r\n  /**\r\n   * @deprecated use src directly\r\n   */\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.sheet.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.sheet.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return [...allSlotKeys]\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.sheet.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.sheet.setEffects }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.sheet.setEffects[setNum]?.document\r\n\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set ? artifactSheets.then(a => a[set]) : undefined }\r\n  static get getAll() { return artifactSheets }\r\n  static get getAllData() { return allData }\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, data: UIData) {\r\n    const artifactSetEffect: Partial<Record<ArtifactSetKey, SetNum[]>> = {}\r\n    Object.entries(sheets).forEach(([setKey, sheet]) => {\r\n      const setNums = (Object.keys(sheet.setEffects).map(k => parseInt(k)) as SetNum[]).filter(sn => sheet.hasEnough(sn, data))\r\n      if (setNums.length) artifactSetEffect[setKey] = setNums\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n  hasEnough = (setNum: SetNum, data: UIData) => (data.get(input.artSet[this.key]).value ?? 0) >= setNum\r\n}\r\nexport const conditionalHeader = (tr: (string) => Displayable, img: string): IConditional[\"header\"] => {\r\n  return {\r\n    title: tr(\"setName\"),\r\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={img} />,\r\n    action: <SqBadge color=\"success\">4-set</SqBadge>\r\n  }\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, min, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`,\r\ngreaterEq(sum(...allElementsWithPhy.map(i => min(1, tally[i]))), 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(tally.pyro, 2, percent(0.25))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(tally.hydro, 2, percent(0.25))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15)))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }],\r\n    conditional: {\r\n      teamBuff: true,\r\n      path: condSIPath,\r\n      value: condSI,\r\n      name: trm(\"ShatteringIce.cond\"),\r\n      header: {\r\n        title: tr(\"ShatteringIce.name\"),\r\n        icon: StatIcon.cryo,\r\n      },\r\n      states: {\r\n        on: {\r\n          fields: [{\r\n            node: siNode\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(tally.anemo, 2, percent(-0.15))\r\nconst iwNodeMove = greaterEq(tally.anemo, 2, percent(0.1))\r\nconst iwNodeCD = greaterEq(tally.anemo, 2, percent(-0.05))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(tally.geo, 2, percent(0.15))\r\nconst erNodeDMG_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15)))\r\nconst erNodeRes_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2)))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }],\r\n    conditional: {\r\n      teamBuff: true,\r\n      path: condERPath,\r\n      value: condER,\r\n      header: {\r\n        title: tr(\"EnduringRock.name\"),\r\n        icon: StatIcon.geo,\r\n      },\r\n      name: st(\"protectedByShield\"),\r\n      states: {\r\n        on: {\r\n          fields: [{\r\n            node: erNodeDMG_\r\n          }, {\r\n            node: erNodeRes_\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: 15,\r\n            unit: \"s\"\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    incHeal_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { Translate } from \"../Components/Translate\"\r\nimport { ReadNode } from \"../Formula/type\"\r\nimport { customStringRead } from \"../Formula/utils\"\r\nimport { ArtifactSetKey, CharacterKey, WeaponKey } from \"../Types/consts\"\r\n\r\nexport const st = (strKey: string, values?: object) => <Translate ns=\"sheet\" key18={strKey} values={values} />\r\nexport const sgt = (strKey: string) => <Translate ns=\"sheet_gen\" key18={strKey} />\r\n\r\nexport const condReadNode = (path: string[]) => customStringRead([\"conditional\", ...path])\r\nexport function cond(key: CharacterKey | WeaponKey | ArtifactSetKey, subKey: string): [path: string[], node: ReadNode<string>] {\r\n  const path = [key, subKey]\r\n  const node = condReadNode(path)\r\n  return [path, node]\r\n}\r\n\r\ntype Translated = [tr: ((i18key: string) => Displayable), tran: ((i18key: string, values?: object) => Displayable)]\r\nexport function trans(typeKey: \"char\", key: CharacterKey): Translated\r\nexport function trans(typeKey: \"weapon\", key: WeaponKey): Translated\r\nexport function trans(typeKey: \"artifact\", key: ArtifactSetKey): Translated\r\nexport function trans(typeKey: \"char\" | \"weapon\" | \"artifact\", key: CharacterKey | WeaponKey | ArtifactSetKey): Translated {\r\n  return [\r\n    (strKey: string) => <Translate ns={`${typeKey}_${key}_gen`} key18={strKey} />,\r\n    (strKey: string, values?: object) => <Translate ns={`${typeKey}_${key}`} key18={strKey} values={values} />\r\n  ]\r\n}\r\n","import { Translate } from '../../Components/Translate';\r\nimport { Data } from '../../Formula/type';\r\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\r\nimport { DocumentSection } from '../../Types/sheet';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\r\nimport type { WeaponData } from 'pipeline';\r\nimport IConditional from '../../Types/IConditional';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport { input } from '../../Formula';\r\nimport SqBadge from '../../Components/SqBadge';\r\nconst weaponSheets = import('.').then(imp => imp.default)\r\n\r\nexport interface IWeaponSheet {\r\n  icon: string,\r\n  iconAwaken: string,\r\n  document: DocumentSection[],\r\n}\r\n\r\nexport default class WeaponSheet {\r\n  readonly key: WeaponKey;\r\n  readonly sheet: IWeaponSheet;\r\n  readonly data: Data;\r\n  readonly rarity: Rarity;\r\n  readonly weaponType: WeaponTypeKey;\r\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\r\n    this.rarity = weaponData.rarity\r\n    this.weaponType = weaponData.weaponType\r\n    this.key = key\r\n    this.sheet = weaponSheet\r\n    this.data = data\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\r\n  static get getAll() { return weaponSheets }\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  get hasRefinement() { return this.rarity > 2 }\r\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\r\n  get img() { return this.sheet.icon }\r\n  get imgAwaken() { return this.sheet.iconAwaken }\r\n  get document() { return this.sheet.document }\r\n  get milestoneLevels(): Array<[number, number]> {\r\n    if (this.hasRefinement) return milestoneLevels as any\r\n    else return lowRarityMilestoneLevels as any\r\n  }\r\n  ambiguousLevel(level: number) {\r\n    if (this.hasRefinement) return ambiguousLevel(level)\r\n    else return ambiguousLevelLow(level)\r\n  }\r\n}\r\nexport const conditionalHeader = (tr: (string) => Displayable, img: string, imgAwaken: string, action?: Displayable): IConditional[\"header\"] => ({\r\n  title: tr(`passiveName`),\r\n  icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\r\n  action: action && <SqBadge color=\"success\">{action}</SqBadge>,\r\n})\r\n\r\nexport const conditionaldesc = (tr: (string) => Displayable) =>\r\n  data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\r\n","import { useCallback, useContext } from \"react\";\r\nimport { useNavigate, useMatch } from \"react-router\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { initialCharacter } from \"../Util/CharacterUtil\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\r\n\r\n/**\r\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\r\n * @returns\r\n */\r\nexport default function useCharSelectionCallback() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const navigate = useNavigate()\r\n  // Used to maintain the previous tab, if there is one\r\n  let { params: { tab = \"\" } } = useMatch({ path: \"/character/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\r\n  const cb = useCallback(\r\n    async (characterKey: CharacterKey) => {\r\n      const character = database._getChar(characterKey)\r\n      let navTab = tab\r\n      // Create a new character + weapon, with linking if char isnt in db.\r\n      if (!character) {\r\n        const newChar = initialCharacter(characterKey)\r\n        database.updateChar(newChar)\r\n        const characterSheet = await CharacterSheet.get(characterKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.createWeapon(weapon)\r\n        database.setWeaponLocation(weaponId, characterKey)\r\n        // If we are navigating to a new character,\r\n        // redirect to Overview, regardless of previous tab.\r\n        // Trying to enforce a certain UI flow when building new characters\r\n        navTab = \"\"\r\n      }\r\n      navigate(`/character/${characterKey}/${navTab}`)\r\n    },\r\n    [navigate, database, tab],\r\n  )\r\n  return cb\r\n}\r\n","import { initialBuildSettings } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\"\r\nimport { objectKeyMap } from \"./Util\"\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: \"\",\r\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditional: {},\r\n    bonusStats: {},\r\n    enemyOverride: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n    team: [\"\", \"\", \"\"],\r\n    compareData: false,\r\n    favorite: false,\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database._getChar(characterKey))\r\n  useEffect(() => updateCharacter(database._getChar(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateCharacter) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"enemyOverride\": {\r\n        const character = database._getChar(characterKey)!\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.updateChar({ ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = deepClone(character.bonusStats)\r\n\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { team } = character\r\n\r\n        const { index, charKey: newCharKey } = action\r\n        const oldCharKey = team[index]\r\n        team[index] = newCharKey\r\n\r\n        // move the old char to \"inventory\"\r\n        if (oldCharKey) {\r\n          const oldChar = database._getChar(oldCharKey)\r\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\r\n        }\r\n\r\n        // unequip new char from its old teammates\r\n        if (newCharKey) {\r\n          const newChar = database._getChar(newCharKey)\r\n          if (newChar) {\r\n            newChar.team.forEach(t => {\r\n              if (!t) return\r\n              const tChar = database._getChar(t)\r\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\r\n            })\r\n          }\r\n        }\r\n\r\n        // equip new char to new teammates\r\n        team.forEach((t, tind) => {\r\n          if (!t) return\r\n          const newChar = database._getChar(t)\r\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\r\n        })\r\n\r\n        // update src character\r\n        database.updateChar({ ...character, team })\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}\r\n","import { useContext, useEffect, useMemo } from \"react\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { TeamData } from \"../DataContext\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  team: CharacterKey[],\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const teamDataBundle = usePromise(getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt), [dbDirty, characterKey, database, mainStatAssumptionLevel, overrideArt])\r\n\r\n  const { team = [], teamData, teamBundle } = teamDataBundle ?? {}\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.followAnyArt(setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  const [t1, t2, t3, t4] = team\r\n  useEffect(() =>\r\n    t1 ? database.followChar(t1, setDbDirty) : undefined,\r\n    [t1, setDbDirty, database])\r\n  useEffect(() =>\r\n    t2 ? database.followChar(t2, setDbDirty) : undefined,\r\n    [t2, setDbDirty, database])\r\n  useEffect(() =>\r\n    t3 ? database.followChar(t3, setDbDirty) : undefined,\r\n    [t3, setDbDirty, database])\r\n  useEffect(() =>\r\n    t4 ? database.followChar(t4, setDbDirty) : undefined,\r\n    [t4, setDbDirty, database])\r\n\r\n  const calcData = useMemo(() => {\r\n    return teamData && uiDataForTeam(teamData, characterKey as CharacterKey)\r\n  }, [teamData, characterKey])\r\n  const data = useMemo(() => {\r\n    if (!calcData || !teamBundle) return\r\n    return objectMap(calcData, (obj, ck) => {\r\n      const { data: _, ...rest } = teamBundle[ck]!\r\n      return { ...obj, ...rest }\r\n    })\r\n  }, [calcData, teamBundle])\r\n\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const char1DataBundle = await getCharDataBundle(database, characterKey, mainStatAssumptionLevel, overrideArt)\r\n  if (!char1DataBundle) return\r\n  const team: CharacterKey[] = [characterKey]\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const databundle = await getCharDataBundle(database, ck)\r\n    if (!databundle) return\r\n    team.push(ck)\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { team, teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\nasync function getCharDataBundle(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[])\r\n  : Promise<CharBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database._getChar(characterKey)\r\n  if (!character) return\r\n  const weapon = database._getWeapon(character.equippedWeapon)\r\n  if (!weapon) return\r\n  const characterSheet = await CharacterSheet.get(characterKey)\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  if (!characterSheet || !weaponSheet || !artifactSheetsData) return\r\n  const artifacts = (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database._getArt(a))).filter(a => a) as ICachedArtifact[]\r\n  const data = [\r\n    ...artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)),\r\n    dataObjForCharacter(character),\r\n    characterSheet.getData(character.elementKey),\r\n    dataObjForWeapon(weapon),\r\n    weaponSheet.data,\r\n    artifactSheetsData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","mainStatVal","levelVariant","Math","floor","max","sheet","className","slotIcons","maxWidth","maxHeight","lineHeight","pointerEvents","variant","color","bottom","right","placement","title","cacheValueString","KeyMap","disableInteractive","p","StatIcon","ArtifactSetSlotTooltip","children","fallback","Suspense","name","artifactSlotIcon","getSlotName","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useContext","DatabaseContext","database","_getWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","img","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","value","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","footer","isTeammateCard","teamDataContext","DataContext","teamData","useTeamData","character","characterSheet","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterDispatch","useCharacterReducer","dataContextObj","mainStatAssumptionLevel","Skeleton","minHeight","CardLight","zIndex","IconButton","event","favorite","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","Header","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","map","i","CharacterCardPico","team","index","Stats","characterEle","characterLevel","constellation","ascension","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","py","pr","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","stars","colored","artifacts","allSlotKeys","k","_getArt","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","CharacterSheet","useCharacter","elementKey","thumbImgSide","transformOrigin","justifyContent","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","sortKeys","useState","sortBy","setsortBy","ascending","setascending","elementalFilter","setelementalFilter","weaponFilter","setweaponFilter","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","followAnyChar","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","Set","allCharacterKeys","cKey","_getChar","characterKeyList","filterFunction","element","weaponType","sort","sortFunction","concat","open","onClose","onChange","onChangeAsc","md","CharacterBtn","pl","weaponTypeKey","falseWrapper","FieldDisplay","field","fieldContext","oldData","canShow","dataNode","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","icon","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","cursor","faQuestionCircle","FieldDisplayList","List","borderRadius","shape","overflow","margin","contentDark","main","contentDarker","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","ElementToggle","cb","e","newVal","ToggleButtonGroup","exclusive","allElements","ele","fontSize","uncoloredEleIcons","WeaponToggle","allWeaponTypeKeys","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","createContext","artifactSheets","then","imp","default","tr","strKey","ns","key18","allData","as","mergeData","s","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","hasEnough","this","slots","defIconSrc","icons","set","a","sheets","grouped","entries","forEach","push","artifactSetEffect","setNums","keys","parseInt","sn","length","conditionalHeader","m","action","pcNodes","objectKeyValueMap","allElementsWithPhy","greaterEq","sum","min","tally","percent","protectiveCanopy","desc","sections","teamBuff","fields","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","conditional","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","resonanceSheets","sgt","resonanceData","inferInfoMut","premod","atk_","incHeal_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","total","critRate_","customStringRead","cond","subKey","trans","typeKey","weaponSheets","weaponData","passiveDescription","refineIndex","iconAwaken","milestoneLevels","lowRarityMilestoneLevels","ambiguousLevel","ambiguousLevelLow","weaponKey","w","getWeaponsOfType","fromEntries","getLevelString","imgAwaken","conditionaldesc","useCharSelectionCallback","navigate","useNavigate","useMatch","end","params","tab","navTab","newChar","hitMode","reactionMode","equippedArtifacts","objectKeyMap","bonusStats","enemyOverride","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","compareData","updateChar","defaultInitialWeapon","createWeapon","setWeaponLocation","updateCharacter","followChar","type","statKey","deepClone","newCharKey","charKey","oldCharKey","oldChar","t","tChar","c","tind","_","overrideArt","dbDirty","setDbDirty","teamDataBundle","getTeamData","teamBundle","followAnyArt","t1","t2","t3","t4","calcData","uiDataForTeam","objectMap","obj","ck","rest","getCharDataBundle","char1DataBundle","Promise","all","databundle","artifactSheetsData","dataObjForArtifact","dataObjForCharacter","getData"],"sourceRoot":""}