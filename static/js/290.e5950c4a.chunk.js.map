{"version":3,"file":"static/js/290.e5950c4a.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/ConditionalWrapper.tsx","Components/StarDisplay.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Data/Resonance.tsx","ReactHooks/useCharMeta.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport Artifact from '../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport ArtifactTooltip from './ArtifactTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level } = art\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <Box\r\n      component=\"img\"\r\n      className={`grad-${rarity}star`}\r\n      src={artifactSheet.slotIcons[key]}\r\n      maxWidth=\"100%\"\r\n      maxHeight=\"100%\"\r\n    />\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\r\n    </Typography>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\r\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n    </Typography>\r\n  </CardDark></ArtifactTooltip>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { Suspense } from \"react\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <ArtifactData art={art} />\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\r\n  const { slotKey, level, rarity, mainStatKey, substats } = art\r\n  const slotName = sheet?.getSlotName(slotKey)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const mainIcon = StatIcon[mainStatKey]\r\n  const mainVariant = KeyMap.getVariant(mainStatKey)\r\n  return <Box p={1}>\r\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\r\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\r\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\r\n    <Box py={1}>\r\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\r\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\r\n      </Typography>)}\r\n    </Box>\r\n\r\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\r\n  </Box>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  return <SqBadge color=\"secondary\">{node.info.icon} {nodeVStr(node)}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useCharMeta from '../../ReactHooks/useCharMeta';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport CharacterCardPico from './CharacterCardPico';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  hideStats?: boolean\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  const { favorite } = useCharMeta(characterKey)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={600} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n        <IconButton sx={{ p: 0.5 }} onClick={_ => database.charMeta.set(characterKey, { favorite: !favorite })}>\r\n          {favorite ? <Favorite /> : <FavoriteBorder />}\r\n        </IconButton>\r\n      </Box>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n        {(character && dataContextObj && characterContextObj) ?\r\n          <ExistingCharacterCardContent\r\n            characterContextObj={characterContextObj}\r\n            dataContextObj={dataContextObj}\r\n            characterKey={characterKey}\r\n            onClick={onClick}\r\n            onClickHeader={onClickHeader}\r\n            isTeammateCard={isTeammateCard}\r\n            character={character}\r\n            onClickTeammate={onClickTeammate}\r\n            hideStats={hideStats}\r\n            weaponChildren={weaponChildren}\r\n            artifactChildren={artifactChildren}\r\n            characterChildren={characterChildren}\r\n          /> : <NewCharacterCardContent characterKey={characterKey} />}\r\n      </ConditionalWrapper>\r\n      {footer}\r\n    </CardLight>\r\n\r\n  </Suspense>\r\n}\r\n\r\ntype ExistingCharacterCardContentProps = {\r\n  characterContextObj: CharacterContextObj\r\n  dataContextObj: dataContextObj\r\n  characterKey: CharacterKey\r\n  onClick?: (characterKey: CharacterKey) => void\r\n  onClickHeader?: (characterKey: CharacterKey) => void\r\n  isTeammateCard?: boolean\r\n  character: ICachedCharacter\r\n  onClickTeammate?: (characterKey: CharacterKey) => void\r\n  hideStats?: boolean\r\n  weaponChildren?: Displayable\r\n  artifactChildren?: Displayable\r\n  characterChildren?: Displayable\r\n}\r\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\r\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\r\n      <HeaderContent />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n      <Artifacts />\r\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n        <Grid item xs={1} height=\"100%\">\r\n          <WeaponCardPico weaponId={character.equippedWeapon} />\r\n        </Grid>\r\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n      </Grid>}\r\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n      {!isTeammateCard && !hideStats && <Stats />}\r\n      {weaponChildren}\r\n      {artifactChildren}\r\n      {characterChildren}\r\n    </CardContent>\r\n  </DataContext.Provider></CharacterContext.Provider>\r\n}\r\n\r\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\r\n  return < >\r\n    <Header characterKey={characterKey} >\r\n      <HeaderContentNew characterKey={characterKey} />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\r\n    </CardContent>\r\n  </>\r\n}\r\n\r\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  if (!characterSheet) return null\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\n\r\nfunction HeaderContent() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item>\r\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n      </Grid>\r\n    </Grid>\r\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n\r\n  </>\r\n}\r\n\r\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, database, gender])\r\n\r\n  if (!characterSheet) return null\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterSheet.elementKey} sx={{ opacity: 0.85 }} />\r\n    <Box mt={1}>\r\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\r\n    </Box>\r\n    <Typography mt={1.5} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n  </>\r\n}\r\n\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\r\n    {data.get(input.special).info.name && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {data.get(input.special).info.icon}\r\n      <Typography>{data.get(input.special).info.name}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { gender } = useDBMeta()\r\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            <Box\r\n              component=\"img\"\r\n              src={teammateSheet.thumbImgSide}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\r\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\r\n        </Typography>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Rarity } from '../Types/consts'\r\nimport ColorText from './ColoredText'\r\n\r\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <ColorText color={colored ? \"warning\" : undefined} >\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </ColorText>\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  return <Typography>{node.info.icon} {nodeVStr(node)}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\r\nimport KeyMap from \"../KeyMap\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, stg, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\r\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\r\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\r\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\r\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: stg(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// Sprawling Canopy\r\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\r\nconst condSC2ele = condReadNode(condSC2elePath)\r\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\r\nconst condSC3ele = condReadNode(condSC3elePath)\r\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, KeyMap.info(\"eleMas\")))\r\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, KeyMap.info(\"eleMas\"))))\r\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, KeyMap.info(\"eleMas\"))))\r\nconst sprawlingGreenery: IResonance = {\r\n  name: tr(\"SprawlingGreenery.name\"),\r\n  desc: tr(\"SprawlingGreenery.desc\"),\r\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"SprawlingGreenery.desc\"),\r\n    fields: [{ node: scBase_eleMas }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC2elePath,\r\n    value: condSC2ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond2ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc2ele_eleMas\r\n        }, {\r\n          text: stg(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC3elePath,\r\n    value: condSC3ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond3ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc3ele_eleMas\r\n        }, {\r\n          text: stg(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n  sprawlingGreenery,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    hp_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\n\r\nexport default function useCharMeta(key: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [charMeta, setCharMetaState] = useState(() => database.charMeta.get(key))\r\n  useEffect(() => database.charMeta.follow(key, (k, r, dbMeta) => setCharMetaState(dbMeta)), [key, database])\r\n  useEffect(() => setCharMetaState(database.charMeta.get(key)), [database, key])\r\n  return charMeta\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { IConditionalValues } from \"../Types/sheet\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\ntype characterTeamConditional = {\r\n  type: \"teamConditional\",\r\n  teamMateKey: CharacterKey,\r\n  conditional: IConditionalValues\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n    const character = database.chars.get(characterKey)\r\n    if (!character) return\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const { statKey, value } = action\r\n        const bonusStats = deepClone(character.bonusStats)\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const { statKey } = action\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"teamConditional\": {\r\n        const { teamMateKey, conditional } = action\r\n        const teamConditional = deepClone(character.teamConditional)\r\n        teamConditional[teamMateKey] = conditional\r\n        database.chars.set(characterKey, { ...character, teamConditional })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n        const { index, charKey } = action\r\n        team[index] = charKey\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...character, ...action })\r\n  }, [characterKey, database])\r\n}\r\n","import { useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nexport default function useMediaQueryUp() {\r\n  const theme = useTheme();\r\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n  if (xl) return \"xl\"\r\n  if (lg) return \"lg\"\r\n  if (md) return \"md\"\r\n  if (sm) return \"sm\"\r\n  return \"xs\"\r\n}\r\n","import { useContext, useDeferredValue, useEffect } from \"react\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamData | undefined> {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n\r\n  const char1DataBundle = await getCharDataBundle(database, true, mainStatAssumptionLevel,\r\n    character,\r\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\r\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n  )\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const tchar = database.chars.get(ck)\r\n    if (!tchar) return\r\n    const databundle = await getCharDataBundle(database, false, 0,\r\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\r\n      database.weapons.get(tchar.equippedWeapon)!,\r\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\n\r\nasync function getCharDataBundle(database: ArtCharDatabase, useCustom = false, mainStatAssumptionLevel: number,\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  artifacts: ICachedArtifact[] | Data,\r\n): Promise<CharBundle | undefined> {\r\n\r\n  const characterSheet = await CharacterSheet.get(character.key, database.gender)\r\n  if (!characterSheet) return\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  if (!weaponSheet) return\r\n\r\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\r\n\r\n  const weaponSheetsData = useCustom ? (() => {\r\n    // display is included in WeaponSheet.getAllDataOfType\r\n    const { display, ...restWeaponSheetData } = weaponSheet.data\r\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\r\n  })() : weaponSheet.data\r\n\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, artifactSheetsData])\r\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\r\n  const data = [\r\n    ...artifactData,\r\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\r\n    dataObjForWeapon(weapon),\r\n    sheetData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n","type SortConfig<T> = (id: T) => number | string\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortbyKeys: Keys[], ascending: boolean, configs: SortConfigs<Keys, T>, ascendingBypass: Keys[] = []) {\r\n  return (a: T, b: T): number => {\r\n    for (const sortby of sortbyKeys) {\r\n      let diff = 0\r\n      const config = configs[sortby]\r\n      const aV = config(a)\r\n      const bV = config(b)\r\n      if (typeof aV === \"string\" && typeof bV === \"string\") diff = aV.localeCompare(bV)\r\n      else diff = ((bV as number) - (aV as number))\r\n      if (diff !== 0) return ascendingBypass.includes(sortby) ? diff : (ascending ? -1 : 1) * diff\r\n    }\r\n    return 0\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Partial<Record<Keys, any>>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","icon","nodeVStr","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamDataContext","DataContext","teamData","useTeamData","character","useCharacter","gender","useDBMeta","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","favorite","useCharMeta","Skeleton","CardLight","zIndex","IconButton","_","charMeta","set","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","undefined","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","JSON","stringify","alignItems","teammateSheet","thumbImgSide","transformOrigin","falseWrapper","StarIcon","faStar","StarsDisplay","Array","keys","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","tr","strKey","ns","key18","trm","teamSize","sum","allElements","tally","pcNodes","objectKeyValueMap","e","greaterEq","percent","protectiveCanopy","desc","canShow","sections","teamBuff","fields","ffNode","ferventFlames","text","st","unit","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","stg","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","useState","setCharMetaState","useEffect","follow","r","dbMeta","chars","updateCharacter","v","action","type","enemyOverride","statKey","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","useMediaQueryUp","theme","useTheme","sm","useMediaQuery","breakpoints","up","md","mainStatAssumptionLevel","overrideArt","overrideWeapon","useForceUpdate","dbDirty","setDbDirty","dbDirtyDeferred","useDeferredValue","getTeamDataCalc","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","weapons","equippedArtifacts","a","filter","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponTypeKey","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","common","weaponID","setWeapon","handleMultiSelect","allKeys","arr","len","Set","toggleArr","sortFunction","sortbyKeys","ascending","configs","ascendingBypass","b","sortby","diff","config","aV","bV","localeCompare","filterFunction","filterOptions","filterConfigs","entries","every","optionKey","optionVal"],"sourceRoot":""}