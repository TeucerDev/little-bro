{"version":3,"file":"static/js/159.ff2acf50.chunk.js","mappings":"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","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildResult.ts","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\r\n\r\ntype MenuItemWithImageProps = {\r\n  value: string\r\n  image?: Displayable\r\n  text: Displayable\r\n  theme: Theme\r\n  isSelected?: boolean\r\n  addlElement?: Displayable\r\n  props?: object\r\n}\r\n\r\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\r\n  return <MenuItem key={value} value={value} {...props}>\r\n    <ListItemIcon>{image}</ListItemIcon>\r\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\r\n      {text}\r\n    </ListItemText>\r\n    {addlElement && addlElement}\r\n  </MenuItem>\r\n}\r\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport i18n from '../../i18n';\r\nimport KeyMap from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\r\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\r\nimport ColorText from '../ColoredText';\r\nimport MenuItemWithImage from '../MenuItemWithImage';\r\nimport SolidColoredTextField from '../SolidColoredTextfield';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\n\r\ntype Grouper = string | number | undefined\r\n\r\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\r\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\r\n  key: T\r\n  label: string\r\n  grouper?: G\r\n}\r\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\r\n  selectedArtifactKeys: T[]\r\n  setArtifactKeys: (keys: T[]) => void\r\n  getName: (key: T) => string\r\n  getImage: (key: T) => JSX.Element\r\n  label: string\r\n}\r\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\r\n  ArtifactMultiAutocompleteProps<T, G>) {\r\n  const theme = useTheme()\r\n\r\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\r\n    setArtifactKeys(value.map(v => v.key))\r\n  }\r\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\r\n  return <Autocomplete\r\n    autoHighlight\r\n    multiple\r\n    disableCloseOnSelect\r\n    options={options}\r\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\r\n    onChange={handleChange}\r\n    getOptionLabel={(option) => option.label}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    renderInput={(params) => <TextField\r\n      {...params}\r\n      label={label}\r\n      variant=\"filled\"\r\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\r\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\r\n      type=\"search\"\r\n    />}\r\n    renderOption={(props, option) => (\r\n      <MenuItemWithImage\r\n        key={option.key}\r\n        value={option.key}\r\n        image={<ColorText color={KeyMap.getVariant(option.key)}>{getImage(option.key)}</ColorText>}\r\n        text={<ColorText color={KeyMap.getVariant(option.key)}>{option.label}</ColorText>}\r\n        theme={theme}\r\n        isSelected={selectedArtifactKeys.includes(option.key)}\r\n        props={props}\r\n      />\r\n    )}\r\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\r\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\r\n      const color = element ? element : undefined\r\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\r\n    })}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  artSetKeys: ArtifactSetKey[]\r\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\r\n}\r\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\r\n  if (!artifactSheets) return null\r\n\r\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\r\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\r\n    .sort(sortByRarityAndName)\r\n\r\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\r\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\r\n    selectedArtifactKeys={artSetKeys}\r\n    setArtifactKeys={setArtSetKeys}\r\n    getName={(key: ArtifactSetKey) => artifactSheets(key).nameRaw}\r\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\r\n    label={t(\"artifact:autocompleteLabels.sets\")}\r\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\r\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\r\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\r\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\r\n      </ListSubheader>\r\n      {params.children}\r\n    </List>}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  mainStatKeys: MainStatKey[]\r\n  setMainStatKeys: (keys: MainStatKey[]) => void\r\n}\r\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\r\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\r\n    selectedArtifactKeys={mainStatKeys}\r\n    setArtifactKeys={setMainStatKeys}\r\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\r\n    getImage={(key: MainStatKey) => StatIcon[key]}\r\n    label={t(\"autocompleteLabels.mainStats\")}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  substatKeys: SubstatKey[]\r\n  setSubstatKeys: (keys: SubstatKey[]) => void\r\n}\r\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\r\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\r\n    selectedArtifactKeys={substatKeys}\r\n    setArtifactKeys={setSubstatKeys}\r\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\r\n    getImage={(key: SubstatKey) => StatIcon[key]}\r\n    label={t(\"autocompleteLabels.substats\")}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\r\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\r\n  key: T\r\n  label: string\r\n  grouper?: G\r\n}\r\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\r\n  selectedArtifactKey: T\r\n  setArtifactKey: (key: T | \"\") => void\r\n  getName: (key: T) => string\r\n  getImage: (key: T) => JSX.Element\r\n  label: string\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n}\r\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\r\n  ArtifactSingleAutocompleteProps<T, G>) {\r\n  const theme = useTheme();\r\n\r\n  const options = useMemo(() =>\r\n    (showDefault\r\n      ? [{ key: \"\" as T, label: defaultText }]\r\n      : []\r\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\r\n      { key, label: getName(key), grouper }\r\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\r\n\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={options}\r\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\r\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\r\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\r\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    getOptionDisabled={option => disable(option.key)}\r\n    renderInput={(props) => <SolidColoredTextField\r\n      {...props}\r\n      label={label}\r\n      startAdornment={getImage(selectedArtifactKey)}\r\n      hasValue={selectedArtifactKey ? true : false}\r\n    />}\r\n    renderOption={(props, option) => (\r\n      <MenuItemWithImage\r\n        key={option.key}\r\n        value={option.key}\r\n        image={getImage(option.key)}\r\n        text={option.label}\r\n        theme={theme}\r\n        isSelected={selectedArtifactKey === option.key}\r\n        props={props}\r\n      />\r\n    )}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  artSetKey: ArtifactSetKey | \"\"\r\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\r\n  label?: string\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n}\r\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\r\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\r\n  if (!artifactSheets) return null\r\n\r\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\r\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\r\n    .sort(sortByRarityAndName)\r\n\r\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\r\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\r\n    selectedArtifactKey={artSetKey}\r\n    setArtifactKey={setArtSetKey}\r\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets(key).nameRaw}\r\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\r\n    label={label}\r\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\r\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\r\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\r\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\r\n      </ListSubheader>\r\n      {params.children}\r\n    </List>}\r\n    {...props}\r\n  />\r\n}\r\n\r\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\r\n  if (a.grouper > b.grouper) {\r\n    return -1\r\n  }\r\n  if (a.grouper < b.grouper) {\r\n    return 1\r\n  }\r\n\r\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\r\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\r\n  if (aName < bName) {\r\n    return -1\r\n  }\r\n  if (aName > bName) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n","import { Card, Slider } from \"@mui/material\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport CustomNumberInput from \"../CustomNumberInput\"\r\n\r\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  setLow: (low: number) => void,\r\n  setHigh: (high: number) => void,\r\n  setBoth: (low: number, high: number) => void,\r\n  dark?: boolean,\r\n  disabled?: boolean,\r\n  showLevelText?: boolean,\r\n}) {\r\n  const [sliderLow, setsliderLow] = useState(levelLow)\r\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\r\n  const setSlider = useCallback(\r\n    (e: unknown, value: number | number[]) => {\r\n      if (typeof value == \"number\") throw new TypeError()\r\n      const [l, h] = value\r\n      setsliderLow(l)\r\n      setsliderHigh(h)\r\n    },\r\n    [setsliderLow, setsliderHigh])\r\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\r\n\r\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\r\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\r\n    <CustomNumberInput\r\n      value={sliderLow}\r\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\r\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\r\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\r\n      startAdornment={showLevelText ? \"Level: \" : undefined}\r\n      disabled={disabled}\r\n    />\r\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\r\n      getAriaLabel={() => 'Arifact Level Range'}\r\n      value={[sliderLow, sliderHigh]}\r\n      onChange={setSlider}\r\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\r\n      valueLabelDisplay=\"auto\"\r\n      min={0} max={20} step={1} marks\r\n      disabled={disabled}\r\n    />\r\n    <CustomNumberInput\r\n      value={sliderHigh}\r\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\r\n      sx={{ px: 1, width: 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      disabled={disabled}\r\n    />\r\n  </Card>\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\r\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\r\n    {avatar}\r\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\r\n    {action && <Typography variant=\"caption\">{action}</Typography>}\r\n  </Box>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { Translate } from '../Translate';\r\n\r\ninterface ConditionalSelectorProps {\r\n  conditional: DocumentConditional,\r\n  disabled?: boolean,\r\n}\r\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\r\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\r\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else if (\"path\" in conditional) {\r\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  }\r\n}\r\n\r\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const [stateKey, st] = Object.entries(conditional.states)[0]\r\n  const badge = getStateBadge(st.name)\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n    {condName} {badge}\r\n  </Button>\r\n}\r\n\r\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\r\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n      <span>Not Active</span>\r\n    </MenuItem>\r\n    <Divider />\r\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalMultiple\r\n}\r\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [character, characterDispatch])\r\n\r\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\r\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\r\n      const conditionalValue = data.get(st.value).value\r\n      const isSelected = conditionalValue === stateKey\r\n      return <Button\r\n        color={isSelected ? \"success\" : \"primary\"}\r\n        disabled={disabled}\r\n        fullWidth\r\n        key={stateKey}\r\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\r\n        size=\"small\"\r\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n        sx={{ borderRadius: 0 }}\r\n      >\r\n        {getCondName(st.name)}\r\n      </Button>\r\n    })}\r\n  </ButtonGroup>\r\n}\r\n\r\nfunction isElement(disp: Displayable): disp is JSX.Element {\r\n  return (typeof disp !== \"string\")\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\r\n  if (!stateName) return \"\"\r\n\r\n  let badgeColor: ButtonProps['color'] = \"primary\"\r\n  let badgeText = stateName\r\n  if (stateName && isElement(stateName)) {\r\n    if (stateName.props.color) {\r\n      badgeColor = stateName.props.color\r\n      badgeText = <span>{stateName.props.children}</span>\r\n    }\r\n  }\r\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getCondName(condName: Displayable): Displayable {\r\n  if (isElement(condName)) {\r\n    const key = condName.props.key18\r\n    const ns = condName.props.ns\r\n    const values = condName.props.values\r\n    return <Translate ns={ns} key18={key} values={values} useBadge />\r\n  }\r\n  return condName\r\n}\r\n","import { CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport { HeaderDisplay } from \"../DocumentDisplay\"\r\nimport FieldsDisplay from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: DocumentConditional,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n  hideDesc?: boolean,\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  let fields\r\n  if (\"path\" in conditional) {\r\n    const condVal = data.get(conditional.value).value\r\n    fields = condVal && conditional.states[condVal]?.fields\r\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    fields = Object.values(conditional.states).flatMap(state => {\r\n      const stateVal = data.get(state.value).value\r\n      return stateVal ? state.fields : []\r\n    })\r\n  }\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\r\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\r\n      <ConditionalSelector conditional={conditional} />\r\n    </CardContent>\r\n    {fields && <FieldsDisplay fields={fields} />}\r\n  </CardDark>\r\n}\r\n","import { Box, Divider, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport FieldsDisplay from \"./FieldDisplay\"\r\nimport InfoTooltip from \"./InfoTooltip\"\r\n\r\ntype DocumentDisplayProps = {\r\n  sections: DocumentSection[],\r\n  teamBuffOnly?: boolean,\r\n  hideDesc?: boolean,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n}\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  if (!sections.length) return null\r\n  const sectionDisplays = sections.map((s, i) => {\r\n    // If we can't show this section, return null\r\n    if (s.canShow && !data.get(s.canShow).value) return null\r\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\r\n    if (teamBuffOnly && !s.teamBuff) return null\r\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  }).filter(s => s)\r\n  if (!sectionDisplays.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  if (\"fields\" in section) {\r\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else if (\"states\" in section) {\r\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else /* if (\"text\" in section) */ {\r\n    return <TextSectionDisplay section={section} />\r\n  }\r\n}\r\n\r\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, section) && section.header &&\r\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\r\n    }\r\n    <FieldsDisplay fields={section.fields} />\r\n  </CardDark>\r\n}\r\n\r\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\r\n  const { data } = useContext(DataContext)\r\n  return <div>\r\n    {evalIfFunc(section.text, data)}\r\n  </div>\r\n}\r\n\r\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  const { data } = useContext(DataContext)\r\n  let { icon, title, action } = header\r\n  icon = evalIfFunc(icon, data)\r\n  const description = !hideDesc && evalIfFunc(header.description, data)\r\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\r\n  return <>\r\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\r\n    {!hideDivider && <Divider />}\r\n  </>\r\n}\r\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\r\nimport { Ascension } from '../Types/consts';\r\nimport { clamp } from '../Util/Util';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\r\nimport DropdownButton from './DropdownMenu/DropdownButton';\r\n\r\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\r\n  const setLevel = useCallback((level: number = 1) => {\r\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\r\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\r\n    setBoth({ level, ascension })\r\n  }, [setBoth, ascensionMaxLevels, useLow])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\r\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\r\n    else setBoth({ ascension: lowerAscension })\r\n  }, [setBoth, ascensionMaxLevels, ascension, level])\r\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n    <CustomNumberInputButtonGroupWrapper >\r\n      <CustomNumberInput onChange={setLevel} value={level}\r\n        startAdornment=\"Lv. \"\r\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\r\n        sx={{ height: \"100%\", pl: 2 }} />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\r\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\r\n        const selected = lv === level && as === ascension\r\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\r\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\r\n        </MenuItem>\r\n      })}\r\n    </DropdownButton>\r\n  </ButtonGroup>\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { allRefinement, Refinement } from \"../Types/consts\"\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\r\n\r\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\r\n    {allRefinement.map(r =>\r\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\r\n        {t(\"refinement\", { value: r })}\r\n      </MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Button } from '@mui/material';\r\nimport React, { Suspense, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ThumbSide from '../../Components/Character/ThumbSide';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\r\n\r\nconst CharacterSelectionModal = React.lazy(() => import('../CharacterSelectionModal'))\r\n\r\nexport default function CharSelectDropdown() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const [showModal, setshowModal] = useState(false)\r\n  const setCharacter = useCharSelectionCallback()\r\n  return <>\r\n    <Suspense fallback={false}>\r\n      <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\r\n    </Suspense>\r\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\r\n  </>\r\n}\r\n","import { ExpandMore } from '@mui/icons-material';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\r\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\r\nimport { DisplaySub, Variant } from '../../Formula/type';\r\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\r\n\r\nexport default function FormulaModal() {\r\n  const { modalOpen } = useContext(FormulaDataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\r\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\r\n    <CardDark>\r\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CalculationDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const sections = getDisplaySections(contextData ?? data)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    <Box sx={{ mr: -1, mb: -1 }}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Box>\r\n  </Suspense>\r\n}\r\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const { data } = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\r\n  if (!header) return null\r\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\r\n  const { title, icon, action } = header\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <CardContent>\r\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\r\n  const { node: contextNode } = useContext(FormulaDataContext)\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\r\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\r\n\r\n  useEffect(() => {\r\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\r\n  }, [scrollRef, node, contextNode])\r\n\r\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\r\n    <AccordionSummary expandIcon={<ExpandMore />} >\r\n      <Typography><ColorText color={node.info.variant}>{node.info.name}</ColorText> <strong>{nodeVStr(node)}</strong></Typography>\r\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\r\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\r\n      </Box>}\r\n    </AccordionSummary>\r\n    <AccordionDetails >\r\n      {node.formulas.map((subform, i) => <Typography key={i} component=\"div\">{subform}</Typography>)}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\r\nimport TextButton from \"./TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  onReset?: () => void\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\r\n\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ px: 1 }}>\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore, Replay } from \"@mui/icons-material\";\r\nimport { Box, Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useState } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../Context/CharacterContext\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { uiInput as input } from \"../Formula\";\r\nimport { nodeVStr } from \"../Formula/uiData\";\r\nimport KeyMap from '../KeyMap';\r\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport StatIcon from \"./StatIcon\";\r\nimport StatInput from \"./StatInput\";\r\n\r\nexport function EnemyExpandCard() {\r\n  const { t } = useTranslation(\"ui\")\r\n  const { characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const eLvlNode = data.get(input.enemy.level)\r\n  const eDefRed = data.get(input.enemy.defRed)\r\n  const eDefIgn = data.get(input.enemy.defIgn)\r\n  const onReset = useCallback(() => characterDispatch({ enemyOverride: {} }), [characterDispatch])\r\n\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n      <Chip size=\"small\" color=\"success\" label={<span>{eLvlNode.info.name} <strong>{eLvlNode.value}</strong></span>} />\r\n      {allElementsWithPhy.map(element => <Typography key={element} ><EnemyResText element={element} /></Typography>)}\r\n      <Typography>DEF Red. {nodeVStr(eDefRed)}</Typography>\r\n      <Typography>DEF Ignore {nodeVStr(eDefIgn)}</Typography>\r\n      <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" gap={1}>\r\n        <Button size=\"small\" color=\"error\" onClick={onReset} startIcon={<Replay />}>{t`reset`}</Button>\r\n        <ExpandButton\r\n          expand={expanded}\r\n          onClick={toggle}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n          size=\"small\"\r\n          sx={{ marginLeft: 0 }}\r\n        >\r\n          <ExpandMore />\r\n        </ExpandButton>\r\n      </Box>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\r\n  const { data } = useContext(DataContext)\r\n  const node = data.get(input.enemy[`${element}_res_`])\r\n  const immune = !isFinite(node.value)\r\n  const content = immune ? <span >{StatIcon[element]} &#8734;</span> :\r\n    <span >{StatIcon[element]} <strong>{nodeVStr(node)}</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\r\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const defaultVal = 10\r\n\r\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\r\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\r\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\r\n        value={eLvl}\r\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\r\n        defaultValue={data.get(input.lvl).value}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\r\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\r\n      />\r\n    </Grid>\r\n    {allElementsWithPhy.map(eleKey => {\r\n      const statKey = `${eleKey}_enemyRes_`\r\n      const val = enemyOverride[statKey]\r\n      const elementImmunity = val === Number.MAX_VALUE\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\r\n          value={val !== undefined ? (elementImmunity ? Infinity : val) : 10}\r\n          placeholder={elementImmunity ? \"∞ \" : KeyMap.getStr(statKey)}\r\n          defaultValue={defaultVal}\r\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\r\n            Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\r\n        value={eDefRed}\r\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\r\n        value={eDefIgn}\r\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and LB will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport CloseButton from \"../../Components/CloseButton\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport StatEditorList from \"../../Components/StatEditorList\";\r\nimport { CharacterContext } from \"../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../Context/DataContext\";\r\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\r\nimport { ReadNode } from \"../../Formula/type\";\r\nimport { nodeVStr } from \"../../Formula/uiData\";\r\nimport { allEleDmgKeys, allEleResKeys } from \"../../KeyMap\";\r\n\r\nconst cols = {\r\n  xs: 1, md: 2, lg: 3\r\n}\r\n\r\nexport default function StatModal({ open, onClose }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <ModalWrapper open={open} onClose={onClose}>\r\n    <CardDark>\r\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <Stack spacing={1}>\r\n          <BonusStatsEditor />\r\n          <EnemyExpandCard />\r\n          <MainStatsCards />\r\n        </Stack>\r\n      </CardContent></CardDark>\r\n  </ModalWrapper>\r\n}\r\nconst keys = [...allInputPremodKeys]\r\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\r\nfunction BonusStatsEditor() {\r\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\r\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\r\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\r\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\r\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\r\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\r\n\r\nconst otherStatKeys = [\r\n  ...allEleDmgKeys,\r\n  ...allEleResKeys,\r\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\r\n] as const\r\n\r\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\r\n\r\n\r\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  return <FieldDisplayList >\r\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={JSON.stringify(rn.info)} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\r\n    {extra}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction MainStatsCards() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const specialNode = data.get(input.special)\r\n  const charEle = characterSheet.elementKey\r\n  const isMelee = characterSheet.isMelee()\r\n\r\n  const otherStatReadNodes = useMemo(() => {\r\n    const nodes = otherStatKeys.filter(k => {\r\n      if (k.includes(charEle)) return false\r\n      if (isMelee && k.includes(\"physical\")) return true\r\n      return true\r\n    }).map(k => input.total[k])\r\n\r\n    return nodes.filter(n => !!data.get(n).value)\r\n  }, [data, charEle, isMelee])\r\n\r\n\r\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\r\n\r\n  return <CardLight><CardContent>\r\n    <Grid container columns={cols} spacing={1}>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Main Stats\">\r\n          <StatDisplayContent nodes={mainReadNodes}\r\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.icon} {specialNode.info.name}</ColorText></span>\r\n              <span >{nodeVStr(specialNode)}</span>\r\n            </ListItem>}\r\n          />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Other Stats\">\r\n          <StatDisplayContent nodes={otherStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Misc Stats\">\r\n          <StatDisplayContent nodes={miscStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>}\r\n    </Grid>\r\n  </CardContent></CardLight>\r\n}\r\nfunction StatDisplayCard({ title, children }) {\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n      </Box>\r\n    </CardContent>\r\n    {children}\r\n  </CardDark>\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\r\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildSettingData\";\r\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\r\nimport { allOperations, constantFold, OptNode } from \"../../../../Formula/optimization\";\r\nimport { ConstantNode } from \"../../../../Formula/type\";\r\nimport { constant, customRead, max, min, threshold } from \"../../../../Formula/utils\";\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\r\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\r\n\r\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\r\nexport function pruneAll(nodes: OptNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: OptNode[], arts: ArtifactsBySlot } {\r\n  let should = forced\r\n  /** If `key` makes progress, all operations in `value` should be performed */\r\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\r\n    pruneOrder: { pruneNodeRange: true },\r\n    pruneArtRange: { pruneNodeRange: true },\r\n    pruneNodeRange: { reaffine: true },\r\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\r\n  }\r\n  let count = 0\r\n  while (Object.values(should).some(x => x) && count++ < 20) {\r\n    if (should.pruneOrder) {\r\n      delete should.pruneOrder\r\n      const newArts = pruneOrder(arts, numTop, exclusion)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneOrder }\r\n      }\r\n    }\r\n    if (should.pruneArtRange) {\r\n      delete should.pruneArtRange\r\n      const newArts = pruneArtRange(nodes, arts, minimum)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneArtRange }\r\n      }\r\n    }\r\n    if (should.pruneNodeRange) {\r\n      delete should.pruneNodeRange\r\n      const newNodes = pruneNodeRange(nodes, arts)\r\n      if (nodes !== newNodes) {\r\n        nodes = newNodes\r\n        should = { ...should, ...deps.pruneNodeRange }\r\n      }\r\n    }\r\n    if (should.reaffine) {\r\n      delete should.reaffine\r\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\r\n      if (nodes !== newNodes || arts !== newArts) {\r\n        nodes = newNodes\r\n        arts = newArts\r\n        should = { ...should, ...deps.reaffine }\r\n      }\r\n    }\r\n  }\r\n  return { nodes, arts }\r\n}\r\n\r\nexport function pruneExclusion(nodes: OptNode[], exclusion: ArtSetExclusion): OptNode[] {\r\n  const maxValues: Dict<keyof typeof exclusion, number> = {}\r\n  for (const [key, e] of Object.entries(exclusion)) {\r\n    if (!e.includes(4)) continue\r\n    maxValues[key] = e.includes(2) ? 1 : 3\r\n  }\r\n  return mapFormulas(nodes, f => f, f => {\r\n    if (f.operation !== \"threshold\") return f\r\n\r\n    const [v, t, pass, fail] = f.operands\r\n    if (v.operation === \"read\" && t.operation === \"const\") {\r\n      const key = v.path[v.path.length - 1], thres = t.value\r\n      if (key in maxValues) {\r\n        const max: number = maxValues[key]\r\n        if (max < thres) return fail\r\n        if (thres === 2 && exclusion[key]!.includes(2))\r\n          return threshold(v, 4, pass, fail)\r\n      }\r\n    }\r\n    return f\r\n  })\r\n}\r\n\r\nfunction reaffine(nodes: OptNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: OptNode[], arts: ArtifactsBySlot } {\r\n  const affineNodes = new Set<OptNode>(), topLevelAffine = new Set<OptNode>()\r\n\r\n  function visit(node: OptNode, isAffine: boolean) {\r\n    if (isAffine) affineNodes.add(node)\r\n    else node.operands.forEach(op => affineNodes.has(op) && topLevelAffine.add(op))\r\n  }\r\n\r\n  const dynKeys = new Set<string>()\r\n\r\n  forEachNodes(nodes, _ => { }, f => {\r\n    const { operation } = f\r\n    switch (operation) {\r\n      case \"read\":\r\n        dynKeys.add(f.path[1])\r\n        visit(f, true)\r\n        break\r\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\r\n      case \"mul\": {\r\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\r\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\r\n        break\r\n      }\r\n      case \"const\": visit(f, true); break\r\n      case \"res\": case \"threshold\": case \"sum_frac\":\r\n      case \"max\": case \"min\": visit(f, false); break\r\n      default: assertUnreachable(operation)\r\n    }\r\n  })\r\n\r\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\r\n    Object.keys(arts.base).length === dynKeys.size)\r\n    return { nodes, arts }\r\n\r\n  let current = -1\r\n  function nextDynKey(): string {\r\n    while (dynKeys.has(`${++current}`));\r\n    return `${current}`\r\n  }\r\n\r\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\r\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\r\n  const affineMap = new Map(affine.map(node => [node,\r\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\r\n      ? node\r\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\r\n  nodes = mapFormulas(nodes, f => affineMap.get(f) ?? f, f => f)\r\n\r\n  function reaffineArt(stat: DynStat): DynStat {\r\n    const values = constantFold([...affineMap.keys()], {\r\n      dyn: objectMap(stat, (value) => constant(value))\r\n    } as any, _ => true)\r\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\r\n  }\r\n  const result = {\r\n    nodes, arts: {\r\n      base: reaffineArt(arts.base),\r\n      values: objectKeyMap(allSlotKeys, slot =>\r\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\r\n    }\r\n  }\r\n  const offsets = Object.entries(reaffineArt({}))\r\n  for (const arts of Object.values(result.arts.values))\r\n    for (const { values } of arts)\r\n      for (const [key, baseValue] of offsets)\r\n        values[key] -= baseValue\r\n  return result\r\n}\r\n/** Remove artifacts that cannot be in top `numTop` builds */\r\nfunction pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\r\n  let progress = false\r\n  const noRainbow = !exclusion.rainbow?.length\r\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\r\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\r\n  const values = objectKeyMap(allSlotKeys, slot => {\r\n    const list = arts.values[slot]\r\n    const newList = list.filter(art => {\r\n      let count = 0\r\n      return list.every(other => {\r\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\r\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\r\n        if (greaterEqual && (greater || other.id > art.id) &&\r\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\r\n          count++\r\n        return count < numTop\r\n      })\r\n    })\r\n    if (newList.length !== list.length) progress = true\r\n    return newList\r\n  })\r\n  return progress ? { base: arts.base, values } : arts\r\n}\r\n/** Remove artifacts that cannot reach `minimum` in any build */\r\nfunction pruneArtRange(nodes: OptNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const wrap = { arts }\r\n  while (true) {\r\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\r\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\r\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\r\n\r\n    let progress = false\r\n    const values = objectKeyMap(allSlotKeys, slot => {\r\n      const result = wrap.arts.values[slot].filter(art => {\r\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\r\n        const newRange = computeNodeRange(nodes, read)\r\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\r\n      })\r\n      if (result.length !== wrap.arts.values[slot].length)\r\n        progress = true\r\n      return result\r\n    })\r\n    if (!progress) break\r\n    wrap.arts = { base: wrap.arts.base, values }\r\n  }\r\n  return wrap.arts\r\n}\r\nfunction pruneNodeRange(nodes: OptNode[], arts: ArtifactsBySlot): OptNode[] {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\r\n  const nodeRange = computeNodeRange(nodes, reads)\r\n\r\n  return mapFormulas(nodes, f => {\r\n    {\r\n      const { min, max } = nodeRange.get(f)!\r\n      if (min === max) return constant(min)\r\n    }\r\n    const { operation } = f\r\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\r\n    switch (operation) {\r\n      case \"threshold\": {\r\n        const [value, threshold, pass, fail] = operandRanges\r\n        if (value.min >= threshold.max) return f.operands[2]\r\n        else if (value.max < threshold.min) return f.operands[3]\r\n        if (pass.max === pass.min &&\r\n          fail.max === fail.min &&\r\n          pass.min === fail.min && isFinite(pass.min))\r\n          return constant(pass.max)\r\n        break\r\n      }\r\n      case \"min\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\r\n        break\r\n      }\r\n      case \"max\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every(op2 => op1.max >= op2.min)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\r\n        break\r\n      }\r\n    }\r\n    return f\r\n  }, f => f)\r\n}\r\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  ranges.forEach(range => {\r\n    Object.entries(range).forEach(([key, value]) => {\r\n      if (result[key]) {\r\n        result[key].min += value.min\r\n        result[key].max += value.max\r\n      } else result[key] = { ...value }\r\n    })\r\n  })\r\n  return result\r\n}\r\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  if (arts.length) {\r\n    Object.keys(arts[0].values)\r\n      .filter(key => arts.every(art => art.values[key]))\r\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\r\n    arts.forEach(({ values }) => {\r\n      for (const [key, value] of Object.entries(values)) {\r\n        if (!result[key]) result[key] = { min: 0, max: value }\r\n        else {\r\n          if (result[key].max < value) result[key].max = value\r\n          if (result[key].min > value) result[key].min = value\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\nexport function computeFullArtRange(arts: ArtifactsBySlot): DynMinMax {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  return addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\r\n}\r\nexport function computeNodeRange(nodes: OptNode[], reads: DynMinMax): Map<OptNode, MinMax> {\r\n  const range = new Map<OptNode, MinMax>()\r\n\r\n  forEachNodes(nodes, _ => { }, f => {\r\n    const { operation } = f\r\n    const operands = f.operands.map(op => range.get(op)!)\r\n    let current: MinMax\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.path[0] !== \"dyn\")\r\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\r\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\r\n        break\r\n      case \"const\": current = computeMinMax([f.value]); break\r\n      case \"add\": case \"min\": case \"max\":\r\n        current = {\r\n          min: allOperations[operation](operands.map(x => x.min)),\r\n          max: allOperations[operation](operands.map(x => x.max)),\r\n        }; break\r\n      case \"res\": current = {\r\n        min: allOperations[operation]([operands[0].max]),\r\n        max: allOperations[operation]([operands[0].min]),\r\n      }; break\r\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\r\n        accu.min * current.min, accu.min * current.max,\r\n        accu.max * current.min, accu.max * current.max,\r\n      ])); break\r\n      case \"threshold\":\r\n        if (operands[0].min >= operands[1].max) current = operands[2]\r\n        else if (operands[0].max < operands[1].min) current = operands[3]\r\n        else current = computeMinMax([], [operands[2], operands[3]])\r\n        break\r\n      case \"sum_frac\": {\r\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\r\n        if (sum.min <= 0 && sum.max >= 0)\r\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\r\n        else\r\n          // TODO: Check this\r\n          current = computeMinMax([\r\n            x.min / sum.min, x.min / sum.max,\r\n            x.max / sum.min, x.max / sum.max\r\n          ])\r\n        break\r\n      }\r\n      default: assertUnreachable(operation)\r\n    }\r\n    range.set(f, current)\r\n  })\r\n  return range\r\n}\r\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\r\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\r\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\r\n  return { min, max }\r\n}\r\n\r\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\r\n  return {\r\n    base: arts.base,\r\n    values: objectKeyMap(allSlotKeys, slot => {\r\n      const filter = filters[slot]\r\n      switch (filter.kind) {\r\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\r\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\r\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\r\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\r\n}\r\nexport function mergePlot(plots: PlotData[]): PlotData {\r\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\r\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\r\n  while (keys.size > maxCount) {\r\n    scale *= reductionScaling\r\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\r\n  }\r\n  const result: PlotData = {}\r\n  for (const plot of plots)\r\n    for (const build of Object.values(plot)) {\r\n      const x = Math.round(build.plot! / scale) * scale\r\n      if (!result[x] || result[x]!.value < build.value)\r\n        result[x] = build\r\n    }\r\n  return result\r\n}\r\n\r\nexport function countBuilds(arts: ArtifactsBySlot): number {\r\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\r\n}\r\n\r\n\r\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\r\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\r\n  filter_loop: for (const filter of filters) {\r\n    for (const [slot, f] of Object.entries(filter)) {\r\n      const available = artSets[slot]!\r\n      switch (f.kind) {\r\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\r\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\r\n        case \"id\": break\r\n      }\r\n    }\r\n    yield filter\r\n  }\r\n}\r\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\r\n  return new Set(exclusion?.includes(2)\r\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\r\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\r\n}\r\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\r\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\r\n  /**\r\n   * This generation algorithm is separated into two parts:\r\n   * - \"Shape\" generation\r\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\r\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\r\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\r\n   * - Shape filling\r\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\r\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\r\n   */\r\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\r\n  let shapes: number[][] = []\r\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\r\n    if (current.length === 5) {\r\n      if (allowedRainbows.has(rainbows.length))\r\n        shapes.push(current)\r\n      return\r\n    }\r\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\r\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\r\n  }\r\n  populateShapes([0], new Set([0]), [0])\r\n  function indexOfShape(shape: number[], replacing: number) {\r\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\r\n      return undefined\r\n    shape = [...shape]\r\n    shape[replacing] = 5\r\n    return shape.reduce((a, b) => a * 6 + b, 0)\r\n  }\r\n  for (let replacing = 4; replacing >= 0; replacing--) {\r\n    const required: Map<number, number> = new Map()\r\n    for (const shape of shapes) {\r\n      const id = indexOfShape(shape, replacing)\r\n      if (id === undefined) continue\r\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\r\n    }\r\n    for (const [id, remaining] of required.entries()) {\r\n      if (remaining === 0) {\r\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\r\n        shape[replacing] = 5\r\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\r\n        shapes.push(shape)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Shapes are now calculated and merged, proceed to fill in the sets\r\n\r\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\r\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\r\n\r\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\r\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\r\n\r\n  function* check(shape: number[]) {\r\n    const used: Set<ArtifactSetKey> = new Set()\r\n    let groupped: number[][] = [], rainbows: number[] = []\r\n    for (const i of shape) {\r\n      groupped.push([])\r\n      if (i === 5) rainbows.push(groupped.length - 1)\r\n      else groupped[i].push(groupped.length - 1)\r\n    }\r\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\r\n    let usableRainbows = rainbows.length\r\n\r\n    // Inception.. because js doesn't like functions inside a for-loop\r\n    function* check(i: number) {\r\n      if (i === groupped.length)\r\n        return yield* check_free(0)\r\n\r\n      for (const set of artSets) {\r\n        if (used.has(set)) continue\r\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\r\n        let requiredRainbows = 0\r\n\r\n        if (allowedSet && !allowedSet.has(length)) {\r\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\r\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\r\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\r\n        }\r\n\r\n        used.add(set)\r\n        counts[set] = groupped[i].length\r\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\r\n        usableRainbows -= requiredRainbows\r\n\r\n        yield* check(i + 1)\r\n\r\n        usableRainbows += requiredRainbows\r\n        counts[set] = 0\r\n        used.delete(set)\r\n      }\r\n    }\r\n    // We separate filling rainbow slots from groupped slots because it has an entirely\r\n    // different set of rules regarding what can be filled and what states to be kept.\r\n    function* check_free(i: number) {\r\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\r\n      let required = 0\r\n      for (const set of artSets) {\r\n        const allowedSet = allowedCounts[set], count = counts[set]\r\n        if (!allowedSet) continue\r\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\r\n        else if (!allowedSet.has(count)) {\r\n          required += [...allowedSet].find(x => x > count)! - count\r\n          missing.push(set)\r\n        }\r\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\r\n      }\r\n      if (required > remaining) return\r\n      if (i === rainbows.length) {\r\n        yield { ...result }\r\n        return\r\n      }\r\n      if (required === remaining) {\r\n        for (const set of missing) {\r\n          counts[set]++\r\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n          yield* check_free(i + 1)\r\n          counts[set]--\r\n        }\r\n        return\r\n      }\r\n      for (const set of [...isolated, ...missing]) {\r\n        counts[set]++\r\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n        yield* check_free(i + 1)\r\n        counts[set]--\r\n      }\r\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\r\n      yield* check_free(i + 1)\r\n    }\r\n    yield* check(0)\r\n  }\r\n  for (const shape of shapes) yield* check(shape)\r\n}\r\n\r\nexport type RequestFilter = StrictDict<SlotKey,\r\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"id\", ids: Set<string> }\r\n>\r\n\r\nexport type DynStat = { [key in string]: number }\r\nexport type ArtifactBuildData = {\r\n  id: string\r\n  set?: ArtifactSetKey\r\n  values: DynStat\r\n}\r\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\r\n\r\nexport type PlotData = Dict<number, Build>\r\nexport interface Build {\r\n  value: number\r\n  plot?: number\r\n  artifactIds: string[]\r\n}\r\n\r\nexport type DynMinMax = { [key in string]: MinMax }\r\nexport type MinMax = { min: number, max: number }\r\n","import { Box } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport DocumentDisplay from \"../DocumentDisplay\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  hideHeader?: boolean,\r\n  conditionalsOnly?: boolean\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\r\n  return <Box display=\"flex\" flexDirection=\"column\">\r\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\r\n  </Box>\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/DataManagers/BuildSettingData\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport default function useBuildSetting(characterKey: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\r\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\r\n    [characterKey, setBuildSetting, database])\r\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\r\n\r\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\r\n}\r\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport CloseButton from '../../../../../Components/CloseButton';\r\nimport ColorText from '../../../../../Components/ColoredText';\r\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\r\nimport { Translate } from '../../../../../Components/Translate';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\r\nimport { UIData } from '../../../../../Formula/uiData';\r\nimport { constant } from '../../../../../Formula/utils';\r\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\r\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\r\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\r\n  const dataContext = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\r\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const [open, setOpen] = useState(false)\r\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\r\n  const onClose = useCallback(() => setOpen(false), [setOpen])\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\r\n\r\n  const artSlotCount = useMemo(() => {\r\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\r\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\r\n    return dbDirty && artSlotCount\r\n  }, [dbDirty, database, artSetKeyList])\r\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\r\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\r\n\r\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\r\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\r\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\r\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\r\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\r\n  }), [artSetKeyList, artSetExclusion])\r\n  const artifactCondCount = useMemo(() =>\r\n    (Object.keys(conditional)).filter(k =>\r\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\r\n    , [conditional])\r\n  const fakeDataContextObj = useMemo(() => ({\r\n    ...dataContext,\r\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\r\n  }), [dataContext])\r\n  const resetArtConds = useCallback(() => {\r\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\r\n    characterDispatch({ conditional: tconditional })\r\n  }, [conditional, characterDispatch]);\r\n  const setAllExclusion = useCallback(\r\n    (setnum: number, exclude = true) => {\r\n      const artSetExclusion_ = deepClone(artSetExclusion)\r\n      artSetKeyList.forEach(k => {\r\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\r\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\r\n      })\r\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\r\n    },\r\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\r\n  )\r\n\r\n  return <>\r\n    <CardLight sx={{ display: \"flex\" }}>\r\n      <CardContent sx={{ flexGrow: 1 }} >\r\n        <Typography>\r\n          <strong>{t`artSetConfig.title`}</strong>\r\n        </Typography>\r\n        <Stack spacing={1}>\r\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\r\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n        </Stack>\r\n\r\n      </CardContent>\r\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\r\n        <Settings />\r\n      </Button>\r\n    </CardLight>\r\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent >\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\r\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\r\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\r\n          </Box>\r\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\r\n        </CardContent></CardLight>\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Typography sx={{ flexGrow: 1 }}><strong>\r\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\r\n          </strong></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\r\n        </CardContent></CardLight>\r\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <CardLight>\r\n              <CardContent>\r\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\r\n                </Box>\r\n              </CardContent>\r\n            </CardLight>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\r\n          {artSetKeyList.map(setKey => {\r\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onClose} />\r\n      </CardContent>\r\n    </CardDark></ModalWrapper >}\r\n  </>\r\n}\r\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\r\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\r\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\r\n      </Box>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\r\n  const { t } = useTranslation(\"sheet\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\r\n  const allow4 = !setExclusionSet.includes(4)\r\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (!allow4 || slots < 4) return []\r\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [sheet.setEffects, allow4, slots])\r\n  const exclude2 = setExclusionSet.includes(2)\r\n  const exclude4 = setExclusionSet.includes(4)\r\n  return <Grid item key={setKey} xs={1}>\r\n    <CardLight sx={{ height: \"100%\", opacity: slots < 2 ? \"50%\" : undefined }}>\r\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\r\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\r\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\r\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\r\n            <InfoTooltip title={<Box>\r\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\r\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\r\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\r\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\r\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\r\n              </Box>\r\n            </Box>} />\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\r\n        </Box>\r\n      </Box>\r\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\r\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\r\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\r\n      </ButtonGroup>\r\n\r\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\r\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {set4CondNums.map(setNumKey =>\r\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n          )}\r\n        </CardContent>\r\n      </DataContext.Provider>}\r\n    </CardLight>\r\n  </Grid >\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\r\n\r\nconst levels = [0, 4, 8, 12, 16, 20] as const\r\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\r\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\r\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { CardContent, Divider, Typography } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nexport default function BonusStatsCard() {\r\n  const { character: { bonusStats } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const bonusStatsKeys = Object.keys(bonusStats)\r\n  if (!bonusStatsKeys.length) return null\r\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Bonus Stats</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {nodes.map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\r\nimport { ReactNode } from 'react';\r\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\r\n\r\nexport const warningBuildNumber = 10000000\r\nexport type BuildStatus = {\r\n  type: \"active\" | \"inactive\"\r\n  tested: number      // tested, including `failed`\r\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\r\n  skipped: number\r\n  total: number\r\n  startTime?: number\r\n  finishTime?: number\r\n}\r\n\r\nconst Monospace = styled(\"strong\")({\r\n  fontFamily: \"monospace\"\r\n})\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n}));\r\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\r\n  const hasTotal = isFinite(total)\r\n\r\n  const generatingBuilds = type !== \"inactive\"\r\n  const unskipped = total - skipped\r\n\r\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\r\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\r\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\r\n\r\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\r\n\r\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\r\n  let title = \"\" as ReactNode\r\n  let subtitle = \"\" as ReactNode\r\n  let progress = undefined as undefined | number\r\n\r\n  if (generatingBuilds) {\r\n    progress = tested * 100 / (unskipped)\r\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\r\n  } else if (tested + skipped) {\r\n    progress = 100\r\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Total duration: {durationString}</Typography>\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  return <Alert severity={color} variant=\"filled\" sx={{\r\n    \"& .MuiAlert-message\": {\r\n      flexGrow: 1\r\n    }\r\n  }}>\r\n    {title}\r\n    {subtitle}\r\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\r\n      {hasTotal && <Grid item>\r\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\r\n      </Grid>}\r\n      <Grid item flexGrow={1} >\r\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\r\n      </Grid>\r\n    </Grid>}\r\n  </Alert>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport useArtifact from \"../../ReactHooks/useArtifact\";\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedSubstat } from \"../../Types/artifact\";\r\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ColorText from \"../ColoredText\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport { StatColoredWithUnit } from \"../StatDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ArtifactTooltip from \"./ArtifactTooltip\";\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  slotKey: SlotKey,\r\n  mainStatAssumptionLevel?: number,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType\r\n}\r\n\r\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\r\n  const art = useArtifact(artifactId)\r\n  const { database } = useContext(DatabaseContext)\r\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\r\n  const theme = useTheme()\r\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\r\n  </BGComponent>\r\n\r\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\">\r\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\r\n        <ArtifactTooltip art={art}>\r\n          <Box\r\n            component=\"img\"\r\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\r\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\r\n          />\r\n        </ArtifactTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        {/* mainstats */}\r\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\r\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\r\n              <span>{StatIcon[mainStatKey]}</span>\r\n            </BootstrapTooltip>\r\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\r\n          </Typography>} />\r\n      </Box>\r\n      {/* substats */}\r\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\r\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\r\n  if (!stat.value) return null\r\n  const numRolls = stat.rolls?.length ?? 0\r\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n  const unit = KeyMap.unit(stat.key)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\r\n        <span>{StatIcon[stat.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { Masonry } from \"@mui/lab\"\r\nimport { Divider, ListItem } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\r\nimport { DisplaySub } from \"../../Formula/type\"\r\nimport { NodeDisplay } from \"../../Formula/uiData\"\r\nimport { customRead } from \"../../Formula/utils\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { objectMap } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport SqBadge from \"../SqBadge\"\r\n\r\nexport default function StatDisplayComponent() {\r\n  const { data } = useContext(DataContext)\r\n  const sections = useMemo(() =>\r\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\r\n    [data])\r\n  return <Box sx={{ mr: -1, mb: -1 }}>\r\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Masonry >\r\n  </Box>\r\n}\r\n\r\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const optimizationTarget = useContext(OptimizationTargetContext)\r\n  const { data, oldData } = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\r\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\r\n  if (!header) return <CardDark></CardDark>\r\n\r\n  const { title, icon, action } = header\r\n  return <CardDark >\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\r\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\r\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\r\n        />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { input } from \"../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\r\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useWeapon from \"../../ReactHooks/useWeapon\";\r\nimport { LocationKey } from \"../../Types/consts\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\r\n\r\ntype Data = {\r\n  weaponId?: string,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType,\r\n}\r\n\r\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\r\n  const { refinement, location } = weapon\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\r\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\r\n        <WeaponNameTooltip sheet={weaponSheet}>\r\n          <Box\r\n            component=\"img\"\r\n            src={weaponSheet.getImg(weapon.ascension)}\r\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n          />\r\n        </WeaponNameTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\r\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\r\n        <WeaponStat node={UIData.get(input.weapon.main)} />\r\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.name) return null\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.name}</Typography>} disableInteractive>\r\n        <span>{node.info.icon}</span>\r\n      </BootstrapTooltip>\r\n      <span>{nodeVStr(node)}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ location }: { location: LocationKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { Checkroom, ChevronRight } from '@mui/icons-material';\r\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ArtifactSlotKey } from 'pipeline';\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\r\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\r\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allSlotKeys, ArtifactSetKey, charKeyToLocCharKey, SlotKey } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\ntype NewOld = {\r\n  newId: string,\r\n  oldId?: string\r\n}\r\n\r\ntype BuildDisplayItemProps = {\r\n  index?: number,\r\n  compareBuild: boolean,\r\n  disabled?: boolean,\r\n  extraButtonsRight?: JSX.Element,\r\n  extraButtonsLeft?: JSX.Element,\r\n}\r\n//for displaying each artifact build\r\nexport default function BuildDisplayItem({ index, compareBuild, extraButtonsRight, extraButtonsLeft, disabled }: BuildDisplayItemProps) {\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const dataContext = useContext(DataContext)\r\n\r\n  const { data, oldData } = dataContext\r\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\r\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\r\n\r\n  const equipBuild = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\r\n    allSlotKeys.forEach(s => {\r\n      const aid = data.get(input.art[s].id).value\r\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\r\n    })\r\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\r\n  }, [characterKey, data, database])\r\n\r\n  const statProviderContext = useMemo(() => {\r\n    const dataContext_ = { ...dataContext }\r\n    if (!compareBuild) dataContext_.oldData = undefined\r\n    return dataContext_\r\n  }, [dataContext, compareBuild])\r\n\r\n  // Memoize Arts because of its dynamic onClick\r\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\r\n    <Grid item xs={1} key={slotKey} >\r\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\r\n        const oldId = equippedArtifacts[slotKey]\r\n        const newId = data.get(input.art[slotKey].id).value!\r\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\r\n      }} />\r\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\r\n\r\n  if (!oldData) return null\r\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\r\n\r\n  return <CardLight>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\r\n      <CardContent>\r\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\r\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\r\n          <SetBadges currentlyEquipped={currentlyEquipped} />\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          </Box>\r\n          {extraButtonsLeft}\r\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped} startIcon={<Checkroom />}>Equip Build</Button>\r\n          {extraButtonsRight}\r\n        </Box>\r\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\r\n          <Grid item xs={1}>\r\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\r\n          </Grid>\r\n          {artNanos}\r\n        </Grid>\r\n        <DataContext.Provider value={statProviderContext}>\r\n          <StatDisplayComponent />\r\n        </DataContext.Provider>\r\n      </CardContent>\r\n    </Suspense>\r\n  </CardLight>\r\n}\r\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\r\n  allSlotKeys.forEach(slotKey => {\r\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\r\n    if (!set) return\r\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\r\n    else setToSlots[set] = [slotKey]\r\n  })\r\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\r\n  )}</>\r\n\r\n}\r\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n  if (!artifactSheet) return null\r\n  const numInSet = slotarr.length\r\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\r\n  return <Box>\r\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\r\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\r\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\r\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\r\n      </Typography></SqBadge>\r\n    </ArtifactSetTooltip>\r\n  </Box>\r\n}\r\n\r\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const onEquip = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\r\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\r\n    onClose()\r\n  }, [newId, database, characterKey, onClose])\r\n\r\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\r\n    <CardDark>\r\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\r\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Download, Replay } from '@mui/icons-material';\r\nimport { Button, CardContent, Collapse, Divider, Grid, styled, Typography } from '@mui/material';\r\nimport { useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CartesianGrid, ComposedChart, Label, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\r\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nimport { Build } from '../common';\r\nimport OptimizationTargetSelector from './OptimizationTargetSelector';\r\n\r\nexport type ChartData = {\r\n  valueNode: NumNode,\r\n  plotNode: NumNode,\r\n  data: Build[]\r\n}\r\ntype ChartCardProps = {\r\n  chartData?: ChartData\r\n  plotBase?: string[],\r\n  setPlotBase: (path: string[] | undefined) => void\r\n  disabled?: boolean\r\n}\r\ntype Point = { x: number, y: number, min?: number }\r\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\r\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\r\n  const [showDownload, setshowDownload] = useState(false)\r\n  const [showMin, setshowMin] = useState(true)\r\n\r\n  const { displayData, downloadData } = useMemo(() => {\r\n    if (!chartData) return { displayData: null, downloadData: null }\r\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\r\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\r\n    const minimumData: Point[] = []\r\n    for (const point of increasingX) {\r\n      let last: Point | undefined\r\n      while ((last = minimumData.pop())) {\r\n        if (last.y > point.y) {\r\n          minimumData.push(last)\r\n          break\r\n        }\r\n      }\r\n      minimumData.push(point)\r\n    }\r\n\r\n    // Note:\r\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\r\n    // It could be faster too since there're no empty entries in `minimumData`.\r\n    if (minimumData[0]?.x !== increasingX[0]?.x)\r\n      increasingX[0].min = minimumData[0].y\r\n    minimumData.forEach(x => { x.min = x.y })\r\n\r\n    const downloadData = {\r\n      minimum: minimumData.map(({ x, y }) => [x, y]),\r\n      allData: increasingX.map(({ x, y }) => [x, y]),\r\n    }\r\n    return { displayData: increasingX, downloadData }\r\n  }, [chartData])\r\n\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography >{t`tcGraph.vs`}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <OptimizationTargetSelector optimizationTarget={plotBase} setTarget={target => setPlotBase(target)} />\r\n        </Grid>\r\n        <Grid item>\r\n          <BootstrapTooltip title={t(\"ui:reset\")} placement=\"top\">\r\n            <span><Button color=\"error\" onClick={() => setPlotBase(undefined)} disabled={!plotBase}>\r\n              <Replay />\r\n            </Button></span>\r\n          </BootstrapTooltip>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <InfoTooltip placement=\"top\" title={t(\"page_character_optimize:tcGraph.desc\")} />\r\n        </Grid>\r\n        {!!downloadData && <Grid item>\r\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n            color={showMin ? \"success\" : \"secondary\"}\r\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showMinStatThr`}</Button>\r\n        </Grid>}\r\n        {!!downloadData && <Grid item>\r\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    {!!displayData && <Divider />}\r\n    {chartData && !!displayData && <CardContent>\r\n      <Collapse in={!!downloadData && showDownload}>\r\n        <CardDark sx={{ mb: 2 }}>\r\n          <CardContent>\r\n            <Typography>Min Data</Typography>\r\n            <DataDisplay data={downloadData?.minimum} />\r\n            <Typography>All Data</Typography>\r\n            <DataDisplay data={downloadData?.allData} />\r\n          </CardContent>\r\n        </CardDark>\r\n      </Collapse>\r\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\r\n    </CardContent>}\r\n  </CardLight >\r\n}\r\nconst TextArea = styled(\"textarea\")({\r\n  width: \"100%\",\r\n  fontFamily: \"monospace\",\r\n  resize: \"vertical\",\r\n  minHeight: \"5em\"\r\n})\r\nfunction DataDisplay({ data, }: { data?: object }) {\r\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\r\n    const target = e.target as HTMLTextAreaElement;\r\n    target.selectionStart = 0;\r\n    target.selectionEnd = target.value.length;\r\n  }} />\r\n}\r\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\r\n  displayData: Point[],\r\n  plotNode: NumNode,\r\n  valueNode: NumNode,\r\n  showMin: boolean\r\n}) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  // Below works because character translation should already be loaded\r\n  const xLabel = <Label fill=\"white\" dy={10}>\r\n    {getLabelFromNode(plotNode, t)}\r\n  </Label>\r\n  const yLabel = <Label fill=\"white\" angle={-90} dx={-40}>\r\n    {getLabelFromNode(valueNode, t)}\r\n  </Label>\r\n  return <ResponsiveContainer width=\"100%\" height={600}>\r\n    <ComposedChart data={displayData}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotNode.info?.unit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} label={xLabel} height={50} />\r\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueNode.info?.unit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" label={yLabel} width={100} />\r\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\r\n      <Legend />\r\n      <Scatter name={t`tcGraph.optTarget`} dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\r\n      {showMin && <Line name={t`tcGraph.minStatReqThr`} dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n}\r\n\r\nfunction getLabelFromNode(node: NumNode, t: any) {\r\n  console.log(node)\r\n  return typeof node.info?.name === \"string\"\r\n      ? node.info.name\r\n      : `${t(`${node.info?.name?.props.ns}:${node.info?.name?.props.key18}`)}${node.info?.textSuffix ? ` ${node.info?.textSuffix}` : \"\"}`\r\n}\r\n","import { Replay } from '@mui/icons-material';\r\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\r\nimport StatIcon from '../../../../../Components/StatIcon';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\r\nimport { allElementsWithPhy } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\r\n\r\nexport default function MainStatSelectionCard({ disabled = false, }: {\r\n  disabled?: boolean\r\n}) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\r\n      const numSel = mainStatKeys[slotKey].length\r\n      return <Box key={slotKey}>\r\n        <Divider />\r\n        <CardContent sx={{ pt: 1 }}>\r\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\r\n              <span>{artifactSlotIcon(slotKey)}</span>\r\n            </BootstrapTooltip>\r\n            <Box flexGrow={1}>\r\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\r\n            </Box>\r\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\r\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\r\n              <Replay />\r\n            </Button>\r\n          </Box>\r\n          <Grid container spacing={1}>\r\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\r\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\r\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\r\n                ? element ?? \"success\"\r\n                : \"secondary\"\r\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\r\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\r\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\r\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\r\n                    {StatIcon[mainStatKey]}\r\n                  </Button>\r\n                </BootstrapTooltip>\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n        </CardContent>\r\n      </Box>\r\n    })}\r\n  </Box >\r\n}\r\n","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CardLight from \"../../../../../Components/Card/CardLight\"\r\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\r\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\r\nimport { DataContext } from \"../../../../../Context/DataContext\"\r\nimport { input } from \"../../../../../Formula\"\r\nimport { StatKey } from \"../../../../../KeyMap\"\r\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\r\nimport useBuildSetting from \"../useBuildSetting\"\r\n\r\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\r\n\r\n  const statKeys = useMemo(() => {\r\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n    const charEle = data.get(input.charEle).value as ElementKey\r\n    statKeys.push(`${charEle}_dmg_`)\r\n    return statKeys\r\n  }, [data])\r\n\r\n\r\n  return <Box>\r\n    <CardLight>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography>{t`constraintFilter.title`}</Typography>\r\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\r\n      </CardContent>\r\n    </CardLight>\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\r\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\r\n    </Box>\r\n  </Box>\r\n}\r\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\r\nimport CardDark from \"../../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\r\nimport CloseButton from \"../../../../../Components/CloseButton\";\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\r\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\r\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\r\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\r\nimport { ICachedCharacter } from \"../../../../../Types/character\";\r\nimport { CharacterKey } from \"../../../../../Types/consts\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\nconst CharacterSelectionModal = React.lazy(() => import('../../../../CharacterSelectionModal'))\r\n\r\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const [{ equipmentPriority: tempEquipmentPriority }, setTO] = useState(database.displayOptimize.get())\r\n  useEffect(() => database.displayOptimize.follow((r, to) => setTO(to)), [database, setTO])\r\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\r\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\r\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => database.displayOptimize.set({ equipmentPriority }), [database])\r\n\r\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    var element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const removePrio = useCallback((fromIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    arr.splice(fromIndex, 1)\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\r\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\r\n\r\n  const numAbove = useMemo(() => {\r\n    let numAbove = equipmentPriority.length\r\n    const index = equipmentPriority.indexOf(characterKey)\r\n    if (index >= 0) numAbove = index\r\n    return numAbove\r\n  }, [characterKey, equipmentPriority])\r\n  const numUseEquippedChar = useMemo(() => {\r\n    return database.chars.keys.length - 1 - numAbove\r\n  }, [numAbove, database])\r\n  const numUnlisted = useMemo(() => {\r\n    return database.chars.keys.length - equipmentPriority.length\r\n  }, [equipmentPriority, database])\r\n\r\n  return <Box display=\"flex\" gap={1}>\r\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\r\n      <CardContent>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\r\n          </Grid>\r\n          <Grid item sx={{ mb: -1 }}>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <CardLight sx={{ mb: 1 }}>\r\n          <CardContent>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\r\n          </CardContent>\r\n        </CardLight>\r\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n          {equipmentPriority.map((ck, i) =>\r\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\r\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\r\n          </Box>\r\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark ></ModalWrapper>\r\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\r\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\r\n        <Box>\r\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\r\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\r\n        </Box>\r\n      </Button>\r\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n\r\nconst itemSize = 60\r\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\r\n  characterKey: CharacterKey,\r\n  rank: number,\r\n  maxRank: number,\r\n  setRank: (r: number | undefined) => void,\r\n  onRemove: () => void,\r\n  numAbove: number,\r\n}) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const character = useCharacter(characterKey)\r\n  const onClick = useCharSelectionCallback()\r\n  if (!character) return null\r\n  const { equippedWeapon, equippedArtifacts } = character\r\n  return <CardLight sx={{ p: 1 }}  >\r\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\r\n      <SqBadge color=\"info\">\r\n        <Typography>#{rank}</Typography>\r\n      </SqBadge>\r\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\r\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\r\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\r\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\r\n      </SqBadge>\r\n      <Box>\r\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\r\n          <CustomNumberInputButtonGroupWrapper >\r\n            <CustomNumberInput onChange={setRank} value={rank}\r\n              // startAdornment=\"Rank:\"\r\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\r\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\r\n          </CustomNumberInputButtonGroupWrapper>\r\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\r\n            <KeyboardDoubleArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\r\n            <KeyboardArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\r\n            <KeyboardArrowDown />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\r\n            <KeyboardDoubleArrowDown />\r\n          </Button>\r\n          <Button color=\"error\" onClick={onRemove}>\r\n            <Close />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Box>\r\n    <Grid container columns={7} spacing={1}>\r\n      <Grid item xs={1} >\r\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\r\n      </Grid>\r\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\r\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\r\n    </Grid>\r\n\r\n  </CardLight>\r\n}\r\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const filter = useCallback((char?: ICachedCharacter) => {\r\n    if (!char) return false\r\n    return !list.includes(char.key)\r\n  }, [list])\r\n  return <>\r\n    <Suspense fallback={false}>\r\n      <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\r\n    </Suspense>\r\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\r\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\r\n    </Button>\r\n  </>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\n\r\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\r\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\r\n    <Box>\r\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\r\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\r\n    </Box>\r\n  </Button>\r\n}\r\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\r\nimport { input } from \"../../../../Formula\";\r\nimport { computeUIData } from \"../../../../Formula/api\";\r\nimport { formulaString } from \"../../../../Formula/debug\";\r\nimport { Data, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\r\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\r\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\r\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\r\n\r\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\r\nexport const dynamicData = {\r\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\r\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\r\n}\r\n\r\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\r\n  const result: ArtifactsBySlot = {\r\n    base: {},\r\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\r\n  }\r\n  const keys = new Set<string>()\r\n\r\n  for (const art of arts) {\r\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n\r\n    const data: ArtifactBuildData = {\r\n      id: art.id, set: art.setKey,\r\n      values: {\r\n        [art.setKey]: 1,\r\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\r\n        ...Object.fromEntries(art.substats.map(substat =>\r\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\r\n      },\r\n    }\r\n    delete data.values[\"\"]\r\n    result.values[art.slotKey].push(data)\r\n    Object.keys(data.values).forEach(x => keys.add(x))\r\n  }\r\n  result.base = objectKeyMap([...keys], _ => 0)\r\n  if (allowPartial)\r\n    for (const value of Object.values(result.values))\r\n      value.push({ id: \"\", values: {} })\r\n  return result\r\n}\r\n\r\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\r\n  const stats = { ...base }\r\n  for (const art of arts) {\r\n    for (const [key, value] of Object.entries(art.values)) {\r\n      stats[key] = (stats[key] ?? 0) + value\r\n    }\r\n  }\r\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\r\n  const uiData = computeUIData([data])\r\n  return {\r\n    base, arts, stats,\r\n    data, uiData,\r\n    nodes: nodes.map(formulaString),\r\n    results: nodes.map(node => uiData.get(node)),\r\n  }\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Close, Science, TrendingUp } from '@mui/icons-material';\r\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\r\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\r\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\r\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\r\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\r\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\r\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { defThreads } from '../../../../Database/DataEntries/DisplayOptimizeEntry';\r\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\r\nimport { uiInput as input } from '../../../../Formula/index';\r\nimport { optimize } from '../../../../Formula/optimization';\r\nimport { NumNode } from '../../../../Formula/type';\r\nimport { UIData } from '../../../../Formula/uiData';\r\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\r\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\r\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\r\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\r\nimport { objPathValue, range } from '../../../../Util/Util';\r\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\r\nimport { maxBuildsToShowList } from './Build';\r\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, pruneExclusion, RequestFilter } from './common';\r\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\r\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\r\nimport BonusStatsCard from './Components/BonusStatsCard';\r\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\r\nimport BuildDisplayItem from './Components/BuildDisplayItem';\r\nimport ChartCard, { ChartData } from './Components/ChartCard';\r\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\r\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\r\nimport StatFilterCard from './Components/StatFilterCard';\r\nimport UseEquipped from './Components/UseEquipped';\r\nimport UseExcluded from './Components/UseExcluded';\r\nimport { compactArtifacts, dynamicData } from './foreground';\r\nimport useBuildResult from './useBuildResult';\r\nimport useBuildSetting from './useBuildSetting';\r\n\r\nexport default function TabBuild() {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\r\n  const generatingBuilds = buildStatus.type !== \"inactive\"\r\n\r\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\r\n\r\n  const [artsDirty, setArtsDirty] = useForceUpdate()\r\n\r\n  const [{ equipmentPriority, threads = defThreads }, setDisplayOptimize] = useState(database.displayOptimize.get())\r\n  useEffect(() => database.displayOptimize.follow((r, to) => setDisplayOptimize(to)), [database, setDisplayOptimize])\r\n\r\n  const maxWorkers = threads > defThreads ? defThreads : threads\r\n  const setMaxWorkers = useCallback(threads => database.displayOptimize.set({ threads }), [database],)\r\n\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const onClickTeammate = useCharSelectionCallback()\r\n\r\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\r\n\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n  const { buildResult: { builds, buildDate }, buildResultDispatch } = useBuildResult(characterKey)\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\r\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\r\n\r\n  //register changes in artifact database\r\n  useEffect(() =>\r\n    database.arts.followAny(setArtsDirty),\r\n    [setArtsDirty, database])\r\n\r\n  // Provides a function to cancel the work\r\n  const cancelToken = useRef(() => { })\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => cancelToken.current(), [])\r\n  const generateBuilds = useCallback(async () => {\r\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n    if (!characterKey || !optimizationTarget) return\r\n\r\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\r\n    if (useEquippedArts) {\r\n      const index = equipmentPriority.indexOf(characterKey)\r\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\r\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\r\n    }\r\n    const filteredArts = database.arts.values.filter(art => {\r\n      if (art.level < levelLow) return false\r\n      if (art.level > levelHigh) return false\r\n      const mainStats = mainStatKeys[art.slotKey]\r\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\r\n\r\n      // If its equipped on the selected character, bypass the check\r\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\r\n\r\n      if (art.exclude && !useExcludedArts) return false\r\n      if (art.location && !useEquippedArts) return false\r\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\r\n      return true\r\n    })\r\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\r\n\r\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\r\n    if (!teamData) return\r\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\r\n    if (!workerData) return\r\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\r\n    let unoptimizedOptimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\r\n    if (!unoptimizedOptimizationTargetNode) return\r\n    const targetNode = unoptimizedOptimizationTargetNode\r\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\r\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\r\n      return { value: input.total[key], minimum: value }\r\n    }).filter(x => x.value && x.minimum > -Infinity)\r\n\r\n    setchartData(undefined)\r\n\r\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\r\n\r\n    let unoptimizedNodes = [...valueFilter.map(x => x.value), unoptimizedOptimizationTargetNode], arts = split!\r\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\r\n\r\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\r\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\r\n    if (plotBase) {\r\n      unoptimizedNodes.push(objPathValue(workerData.display ?? {}, plotBase))\r\n      minimum.push(-Infinity)\r\n    }\r\n\r\n    const prepruneArts = arts\r\n    let nodes = optimize(unoptimizedNodes, workerData, ({ path: [p] }) => p !== \"dyn\")\r\n    nodes = pruneExclusion(nodes, artSetExclusion);\r\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\r\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\r\n    }))\r\n    nodes = optimize(nodes, {}, _ => false)\r\n\r\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\r\n    let optimizationTargetNode = nodes.pop()!\r\n\r\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\r\n\r\n    const minFilterCount = 16_000_000, maxRequestFilterInFlight = maxWorkers * 16\r\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\r\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\r\n    const workers: Worker[] = []\r\n\r\n    function getThreshold(): number {\r\n      return wrap.buildValues[maxBuildsToShow - 1].val\r\n    }\r\n    function fetchContinueWork(): WorkerCommand {\r\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: getThreshold() }\r\n    }\r\n    function fetchPruningWork(): WorkerCommand | undefined {\r\n      const { done, value } = unprunedFilters.next()\r\n      return done ? undefined : {\r\n        command: \"split\", minCount: minFilterCount,\r\n        threshold: getThreshold(), filter: value,\r\n      }\r\n    }\r\n    function fetchRequestWork(): WorkerCommand | undefined {\r\n      const filter = requestFilters.pop()\r\n      return !filter ? undefined : {\r\n        command: \"iterate\",\r\n        threshold: getThreshold(), filter\r\n      }\r\n    }\r\n\r\n    const filters = nodes\r\n      .map((value, i) => ({ value, min: minimum[i] }))\r\n      .filter(x => x.min > -Infinity)\r\n\r\n    const finalizedList: Promise<FinalizeResult>[] = []\r\n    for (let i = 0; i < maxWorkers; i++) {\r\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\r\n\r\n      const setup: Setup = {\r\n        command: \"setup\",\r\n        id: i, arts,\r\n        optimizationTarget: optimizationTargetNode,\r\n        plotBase: plotBaseNode,\r\n        maxBuilds: maxBuildsToShow,\r\n        filters\r\n      }\r\n      worker.postMessage(setup, undefined)\r\n      if (i === 0) {\r\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\r\n        worker.postMessage(countCommand, undefined)\r\n      }\r\n      let finalize: (_: FinalizeResult) => void\r\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\r\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\r\n        switch (data.command) {\r\n          case \"interim\":\r\n            status.tested += data.tested\r\n            status.failed += data.failed\r\n            status.skipped += data.skipped\r\n            if (data.buildValues) {\r\n              wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\r\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\r\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\r\n            }\r\n            break\r\n          case \"split\":\r\n            if (data.filter) {\r\n              requestFilters.push(data.filter)\r\n              splittingWorkers.add(data.id)\r\n            } else splittingWorkers.delete(data.id)\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"iterate\":\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"finalize\":\r\n            worker.terminate()\r\n            finalize(data);\r\n            return\r\n          case \"count\":\r\n            const [pruned, prepruned] = data.counts\r\n            status.total = prepruned\r\n            status.skipped += prepruned - pruned\r\n            return\r\n          default: console.log(\"DEBUG\", data)\r\n        }\r\n        while (idleWorkers.length) {\r\n          const id = idleWorkers.pop()!, worker = workers[id]\r\n          let work: WorkerCommand | undefined\r\n          if (requestFilters.length < maxRequestFilterInFlight) {\r\n            work = fetchPruningWork()\r\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\r\n          }\r\n          if (!work) work = fetchRequestWork()\r\n          if (work) worker.postMessage(work)\r\n          else {\r\n            idleWorkers.push(id)\r\n            if (idleWorkers.length === 4 * maxWorkers) {\r\n              const command: WorkerCommand = { command: \"finalize\" }\r\n              workers.forEach(worker => worker.postMessage(command))\r\n            }\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      workers.push(worker)\r\n      cancelled.then(() => worker.terminate())\r\n      finalizedList.push(finalized)\r\n    }\r\n    for (let i = 0; i < 3; i++)\r\n      idleWorkers.push(...range(0, maxWorkers - 1))\r\n\r\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\r\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\r\n    clearInterval(buildTimer)\r\n    cancelToken.current = () => { }\r\n\r\n    if (!results) {\r\n      status.tested = 0\r\n      status.failed = 0\r\n      status.skipped = 0\r\n      status.total = 0\r\n    } else {\r\n      if (plotBase) {\r\n        const plotData = mergePlot(results.map(x => x.plotData!))\r\n        const plotBaseNode = objPathValue(workerData.display ?? {}, plotBase) as NumNode\r\n        let data = Object.values(plotData)\r\n        if (targetNode.info?.unit === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\r\n        if (plotBaseNode.info?.unit === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\r\n        setchartData({\r\n          valueNode: targetNode,\r\n          plotNode: plotBaseNode,\r\n          data\r\n        })\r\n      }\r\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\r\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\r\n      buildResultDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\r\n    }\r\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\r\n  }, [characterKey, database, buildResultDispatch, maxWorkers, buildSetting, equipmentPriority])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n\r\n  const setPlotBase = useCallback(plotBase => {\r\n    buildSettingDispatch({ plotBase })\r\n    setchartData(undefined)\r\n  }, [buildSettingDispatch])\r\n  const dataContext: dataContextObj | undefined = useMemo(() => {\r\n    return data && teamData && { data, teamData }\r\n  }, [data, teamData])\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to LB yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\r\n    {/* Build Generator Editor */}\r\n    {dataContext && <DataContext.Provider value={dataContext}>\r\n\r\n      <Grid container spacing={1} >\r\n        {/* 1*/}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          {/* character card */}\r\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\r\n        </Grid>\r\n\r\n        {/* 2 */}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <CardLight>\r\n            <CardContent  >\r\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\r\n              <BootstrapTooltip placement=\"top\" title={<Box>\r\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\r\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\r\n              </Box>}>\r\n                <Box>\r\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\r\n                </Box>\r\n              </BootstrapTooltip>\r\n            </CardContent>\r\n            {/* main stat selector */}\r\n            <MainStatSelectionCard disabled={generatingBuilds} />\r\n          </CardLight>\r\n          <BonusStatsCard />\r\n        </Grid>\r\n\r\n        {/* 3 */}\r\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <ArtifactSetConfig disabled={generatingBuilds} />\r\n\r\n          {/* use excluded */}\r\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\r\n\r\n          {/* use equipped */}\r\n          <UseEquipped disabled={generatingBuilds} />\r\n\r\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`allowPartial`}</Button>\r\n          { /* Level Filter */}\r\n          <CardLight>\r\n            <CardContent>{t`levelFilter`}</CardContent>\r\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\r\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\r\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\r\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\r\n              disabled={generatingBuilds}\r\n            />\r\n          </CardLight>\r\n\r\n          {/*Minimum Final Stat Filter */}\r\n          <StatFilterCard disabled={generatingBuilds} />\r\n\r\n        </Grid>\r\n      </Grid>\r\n      {/* Footer */}\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1} >\r\n          <ButtonGroup>\r\n            <Button\r\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\r\n              color={characterKey ? \"success\" : \"warning\"}\r\n              onClick={generateBuilds}\r\n              startIcon={<TrendingUp />}\r\n            >Generate Builds</Button>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<Trans t={t} i18nKey=\"build\" count={maxBuildsToShow}>\r\n                {{ count: maxBuildsToShow }} Builds\r\n                </Trans>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  {t(\"buildDropdownDesc\")}\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\r\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>\r\n                  <Trans t={t} i18nKey=\"build\" count={v}>\r\n                    {{ count: v }} Builds\r\n                  </Trans>\r\n                </MenuItem>)}\r\n            </DropdownButton>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<Trans t={t} i18nKey=\"thread\" count={maxWorkers}>\r\n                {{ count: maxWorkers }} Threads\r\n                </Trans>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  {t(\"threadDropdownDesc\")}\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\r\n                onClick={() => setMaxWorkers(v)}>\r\n                  <Trans t={t} i18nKey=\"thread\" count={v}>\r\n                    {{ count: v }} Threads\r\n                  </Trans>\r\n              </MenuItem>)}\r\n            </DropdownButton>\r\n            <Button\r\n              disabled={!generatingBuilds}\r\n              color=\"error\"\r\n              onClick={() => cancelToken.current()}\r\n              startIcon={<Close />}\r\n            >Cancel</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Grid item>\r\n          <span>Optimization Target: </span>\r\n          {<OptimizationTargetSelector\r\n            optimizationTarget={optimizationTarget}\r\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\r\n            disabled={!!generatingBuilds}\r\n          />}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\r\n      <Box >\r\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\r\n      </Box>\r\n      <CardLight>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\r\n            <Typography sx={{ flexGrow: 1 }}>\r\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\r\n                : <span>Select a character to generate builds.</span>}\r\n            </Typography>\r\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildResultDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\r\n          </Box>\r\n          <Grid container display=\"flex\" spacing={1}>\r\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\r\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\r\n            <Grid item flexGrow={1} />\r\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\r\n            </SolidToggleButtonGroup></Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\r\n        <BuildList builds={builds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\r\n      </OptimizationTargetContext.Provider>\r\n    </DataContext.Provider>}\r\n  </Box>\r\n}\r\nfunction BuildList({ builds, characterKey, data, compareData, disabled }: {\r\n  builds: string[][],\r\n  characterKey?: \"\" | CharacterKey,\r\n  data?: UIData,\r\n  compareData: boolean,\r\n  disabled: boolean,\r\n}) {\r\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\r\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    {builds?.map((build, index) => characterKey && data && <DataContextWrapper\r\n      key={index + build.join()}\r\n      characterKey={characterKey}\r\n      build={build}\r\n      oldData={data}\r\n    >\r\n      <BuildItemWrapper index={index} build={build} compareData={compareData} disabled={disabled} />\r\n    </DataContextWrapper>\r\n    )}\r\n  </Suspense>, [builds, characterKey, data, compareData, disabled])\r\n  return list\r\n}\r\nfunction BuildItemWrapper({ index, build, compareData, disabled }: {\r\n  index: number\r\n  build: string[],\r\n  compareData: boolean,\r\n  disabled: boolean,\r\n}) {\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n  const toTC = useCallback(() => {\r\n    const paths = location.pathname.split(\"/\")\r\n    paths.pop()\r\n    navigate(`${paths.join(\"/\")}/theorycraft`, { state: { build } })\r\n  }, [navigate, build, location.pathname])\r\n\r\n  return <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled}\r\n    extraButtonsLeft={<Button color=\"info\" size=\"small\" startIcon={<Science />} onClick={toTC}>Theorycraft</Button>} />\r\n}\r\n\r\ntype Prop = {\r\n  children: React.ReactNode\r\n  characterKey: CharacterKey,\r\n  build: string[],\r\n  oldData: UIData,\r\n}\r\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  // Update the build when the build artifacts are changed.\r\n  const [dirty, setDirty] = useForceUpdate()\r\n  useEffect(() => database.arts.followAny((id) => build.includes(id) && setDirty()), [database, build, setDirty])\r\n  const buildsArts = useMemo(() => dirty && build.map(i => database.arts.get(i)!), [dirty, build, database])\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, buildsArts)\r\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\r\n  if (!providerValue) return null\r\n  return <DataContext.Provider value={providerValue}>\r\n    {children}\r\n  </DataContext.Provider>\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { IBuildResult } from \"../../../../Database/DataManagers/BuildResult\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport default function useBuildResult(characterKey: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [buildResult, setBuildResult] = useState(() => database.buildResult.get(characterKey))\r\n  useEffect(() => setBuildResult(database.buildResult.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    database.buildResult.follow(characterKey, (k, r, v) => r === \"update\" && setBuildResult(v)),\r\n    [characterKey, setBuildResult, database])\r\n  const buildResultDispatch = useCallback((action: Partial<IBuildResult>) => characterKey && database.buildResult.set(characterKey, action), [characterKey, database],)\r\n\r\n  return { buildResult, buildResultDispatch }\r\n}\r\n","import { Close, Difference } from \"@mui/icons-material\"\r\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\r\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { DataContext } from \"../../../../Context/DataContext\"\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\r\nimport { objectMap } from \"../../../../Util/Util\"\r\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\r\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\r\n\r\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [show, onShow, onHide] = useBoolState(false)\r\n\r\n  return <>\r\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\r\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\r\n    </ModalWrapper>\r\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\r\n    </Tooltip>\r\n  </>\r\n}\r\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const build = useMemo(() => {\r\n    const newArt = database.arts.get(artId ?? \"\")\r\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\r\n    return Object.values(artmap).filter(a => a)\r\n  }, [database, equippedArtifacts, artId])\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\r\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\r\n      <BuildDisplayItem compareBuild={true} extraButtonsLeft={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /></>} extraButtonsRight={<><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\r\n    </DataContext.Provider>}\r\n  </Suspense>\r\n}\r\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\r\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\r\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\r\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\r\nimport { SlotKey } from \"../../../../Types/consts\"\r\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\r\n\r\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\r\n\r\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\r\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\r\n\r\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\r\n\r\n  const brPt = useMediaQueryUp()\r\n\r\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\r\n  const artIdList = useMemo(() => {\r\n    const filterFunc = filterFunction(filterOption, filterConfigs)\r\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\r\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\r\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\r\n        </Suspense>\r\n        <Box mt={1}>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\r\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\r\n              {artIdList.map(id =>\r\n                <Grid item key={id} xs={1} >\r\n                  <ArtifactCard\r\n                    artifactId={id}\r\n                    extraButtons={<CompareBuildButton artId={id} />}\r\n                    onClick={clickHandler}\r\n                  />\r\n                </Grid>)}\r\n            </Grid>\r\n          </Suspense>\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\r\nimport usePromise from \"../../../../ReactHooks/usePromise\"\r\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\r\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\r\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\r\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\n\r\nconst rarityHandler = handleMultiSelect([...allRarities])\r\n\r\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id: string) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n\r\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\r\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\r\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\r\n    .map(weapon => weapon.id)) ?? []\r\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Grid container spacing={1} mb={1}>\r\n          <Grid item>\r\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\r\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\r\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\r\n              </ToggleButton>)}\r\n            </SolidToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"page_weapon:weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          {weaponIdList.map(weaponId =>\r\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n              <WeaponCard\r\n                weaponId={weaponId}\r\n                onClick={clickHandler}\r\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\r\n              />\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Settings, SwapHoriz } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from \"@mui/system\";\r\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\r\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\r\nimport CardDark from '../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\r\nimport ModalWrapper from '../../../../Components/ModalWrapper';\r\nimport PercentBadge from '../../../../Components/PercentBadge';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../Context/DataContext';\r\nimport Artifact from '../../../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../Formula';\r\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\r\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\r\nimport useBoolState from '../../../../ReactHooks/useBoolState';\r\nimport useCharMeta from '../../../../ReactHooks/useCharMeta';\r\nimport usePromise from '../../../../ReactHooks/usePromise';\r\nimport { allSubstatKeys } from '../../../../Types/artifact';\r\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\r\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\r\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\r\nimport ArtifactSwapModal from './ArtifactSwapModal';\r\nimport WeaponSwapModal from './WeaponSwapModal';\r\n\r\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\r\n\r\nexport default function EquipmentSection() {\r\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { teamData, data } = useContext(DataContext)\r\n  const weaponSheet = teamData[characterKey]?.weaponSheet\r\n  const [weaponId, setweaponId] = useState(\"\")\r\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\r\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\r\n\r\n  //triggers when character swap weapons\r\n  useEffect(() => {\r\n    if (weaponId && weaponId !== equippedWeapon)\r\n      setweaponId(equippedWeapon)\r\n  }, [weaponId, equippedWeapon])\r\n\r\n  const theme = useTheme();\r\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\r\n  const { rvFilter } = useCharMeta(characterKey)\r\n  const deferredRvFilter = useDeferredValue(rvFilter)\r\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\r\n  return <Box >\r\n    <Suspense fallback={false}>\r\n      <WeaponEditor\r\n        weaponId={weaponId}\r\n        footer\r\n        onClose={hideWeapon}\r\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\r\n      />\r\n    </Suspense>\r\n    <Grid container spacing={1}>\r\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        {weaponDoc && weaponDoc}\r\n        <ArtifactSectionCard />\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\r\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\r\n        </Grid>\r\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\r\n          {!!data.get(input.art[slotKey].id).value ?\r\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\r\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editorProps={{}} canExclude canEquip /> :\r\n            <ArtSwapCard slotKey={slotKey} />}\r\n        </Grid>)}\r\n      </Grid>\r\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\r\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\r\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <ArtifactSectionCard />\r\n        </Grid>\r\n      </Grid>}\r\n    </Grid>\r\n  </Box>\r\n}\r\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\r\n    <CardContent>\r\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <Box sx={{\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    }}\r\n    >\r\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\r\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\r\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\r\n      </Button>\r\n    </Box>\r\n  </CardLight>\r\n}\r\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\r\n  </>\r\n}\r\nfunction ArtifactSectionCard() {\r\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\r\n  const unequipArts = useCallback(() => {\r\n    if (!character) return\r\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\r\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\r\n  }, [character, database, equippedArtifacts])\r\n\r\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\r\n  const { rvFilter } = useCharMeta(characterKey)\r\n  const setRVFilter = useCallback(rvFilter => database.charMeta.set(characterKey, { rvFilter }), [database, characterKey],)\r\n\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const deferredrvFilter = useDeferredValue(rvFilter)\r\n  const { rvField, rvmField } = useMemo(() => {\r\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\r\n      const art = database.arts.get(artid)\r\n      if (art) {\r\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\r\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\r\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\r\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\r\n\r\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\r\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\r\n      }\r\n      return a\r\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\r\n    const rvField: IFieldDisplay = {\r\n      text: t`artifact:editor.curSubEff`,\r\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\r\n    }\r\n    const rvmField: IFieldDisplay = {\r\n      text: t`artifact:editor.maxSubEff`,\r\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\r\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\r\n    }\r\n    return { rvField, rvmField }\r\n  }, [t, deferredrvFilter, equippedArtifacts, database])\r\n\r\n  return <CardLight>\r\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\r\n    <CardContent >\r\n      <Stack spacing={1}>\r\n        <CardDark >\r\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\r\n          <ModalWrapper open={show} onClose={onHide}>\r\n            <CardDark>\r\n              <CardContent>\r\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\r\n              </CardContent>\r\n            </CardDark>\r\n          </ModalWrapper>\r\n          <FieldDisplayList >\r\n            <BasicFieldDisplay field={rvField} component={ListItem} />\r\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\r\n          </FieldDisplayList>\r\n        </CardDark>\r\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\r\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\r\n          </CardDark>)\r\n        )}\r\n      </Stack>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Assets from \"../../../../Assets/Assets\";\r\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../../../Components/SqBadge\";\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\r\nimport StatIcon from \"../../../../Components/StatIcon\";\r\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../../../Context/DataContext\";\r\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\r\nimport { getLevelString } from \"../../../../Data/LevelData\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\r\nimport useCharMeta from \"../../../../ReactHooks/useCharMeta\";\r\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\r\nimport { range } from \"../../../../Util/Util\";\r\nimport EquipmentSection from \"./EquipmentSection\";\r\n\r\nexport default function TabOverview() {\r\n  const scrollRef = useRef<HTMLDivElement>()\r\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\r\n\r\n  return <Stack spacing={1}>\r\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\r\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\r\n        <CharacterProfileCard />\r\n      </Grid>\r\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <EquipmentRow onClick={onScroll} />\r\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n          <StatDisplayComponent />\r\n        </CardLight>\r\n      </Grid>\r\n    </Grid >\r\n    <Box ref={scrollRef}>\r\n      <EquipmentSection />\r\n    </Box>\r\n  </Stack>\r\n}\r\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\r\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n\r\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\r\n    <Grid item xs={1}>\r\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\r\n    </Grid>\r\n    {allSlotKeys.map(slotKey =>\r\n      <Grid item key={slotKey} xs={1} >\r\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\r\n      </Grid>)}\r\n  </Grid>\r\n}\r\n/* Image card with star and name and level */\r\nfunction CharacterProfileCard() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const navigate = useNavigate()\r\n  const charEle = data.get(input.charEle).value as ElementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = data.get(input.lvl).value\r\n  const ascension = data.get(input.asc).value as Ascension\r\n  const constellation = data.get(input.constellation).value\r\n  const tlvl = {\r\n    auto: data.get(input.total.auto).value,\r\n    skill: data.get(input.total.skill).value,\r\n    burst: data.get(input.total.burst).value,\r\n  }\r\n  const tBoost = {\r\n    auto: data.get(input.bonus.auto).value,\r\n    skill: data.get(input.bonus.skill).value,\r\n    burst: data.get(input.bonus.burst).value,\r\n  }\r\n  const { favorite } = useCharMeta(characterKey)\r\n  return <CardLight sx={{ height: \"100%\" }} >\r\n    <Box sx={{ position: \"relative\" }}>\r\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\r\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\r\n          <StarsDisplay stars={characterSheet.rarity} colored />\r\n        </Typography>\r\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\r\n          <Chip color={charEle} sx={{ height: \"auto\" }}\r\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n              {StatIcon[charEle]}\r\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\r\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n            </Typography>} />\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\r\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => database.charMeta.set(characterKey, { favorite: !favorite })}>\r\n            {favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\r\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\r\n        </Typography>\r\n      </Box>\r\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n    </Box>\r\n    <Box>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\r\n        <Grid container spacing={1} mt={-1}>\r\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\r\n            <Grid item xs={4} key={tKey}>\r\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                sx={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  \"& > .MuiBadge-badge\": {\r\n                    fontSize: \"1.25em\",\r\n                    padding: \".25em .4em\",\r\n                    borderRadius: \".5em\",\r\n                    lineHeight: 1,\r\n                    height: \"1.25em\"\r\n                  }\r\n                }}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\r\n              </Badge>\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n      <Grid container spacing={1}>\r\n        {range(1, 6).map(i =>\r\n          <Grid item xs={4} key={i}>\r\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\r\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\r\n                sx={{\r\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\r\n                }}\r\n                width=\"100%\" height=\"auto\" />\r\n            </CardActionArea>\r\n          </Grid>)}\r\n      </Grid>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\r\n        <Grid container columns={3} spacing={1}>\r\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Box>\r\n  </CardLight >\r\n}\r\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/system\";\r\nimport { useCallback, useContext, useMemo } from 'react';\r\nimport CardDark from \"../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\r\nimport { DataContext } from '../../../Context/DataContext';\r\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\r\nimport { uiInput as input } from \"../../../Formula\";\r\nimport { NumNode } from \"../../../Formula/type\";\r\nimport { NodeDisplay } from '../../../Formula/uiData';\r\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\r\nimport { DocumentSection } from \"../../../Types/sheet\";\r\nimport { range } from \"../../../Util/Util\";\r\n\r\nconst talentSpacing = {\r\n  xs: 12,\r\n  sm: 6,\r\n  md: 4\r\n}\r\n\r\nexport default function CharacterTalentPane() {\r\n  const { character, characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(character.key)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\r\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n\r\n  const theme = useTheme();\r\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\r\n    <SkillDisplayCard\r\n      talentKey={`constellation${i}` as TalentSheetElementKey}\r\n      subtitle={`Constellation Lv. ${i}`}\r\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\r\n    />), [constellation, characterDispatch])\r\n  return <>\r\n    <ReactionDisplay />\r\n    <Grid container spacing={1}>\r\n      {/* constellations for 4column */}\r\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\r\n        {/* auto, skill, burst */}\r\n        {skillBurstList.map(([tKey, tText]) =>\r\n          <Grid item key={tKey} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>)}\r\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"sprint\"\r\n            subtitle=\"Alternative Sprint\"\r\n          />\r\n        </Grid>}\r\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"passive\"\r\n            subtitle=\"Passive\"\r\n          />\r\n        </Grid>}\r\n        {/* passives */}\r\n        {passivesList.map(([tKey, tText, asc]) => {\r\n          let enabled = ascension >= asc\r\n          if (!characterSheet.getTalentOfKey(tKey)) return null\r\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n      {/* constellations for < 4 columns */}\r\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\r\n        <Grid item xs={12}>\r\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        </Grid>\r\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\r\n      </Grid>}\r\n    </Grid>\r\n  </>\r\n}\r\nfunction ReactionDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {Object.entries(reaction).filter(([_, node]) => !node.isEmpty).map(([key, node]) => {\r\n          return <Grid item key={key}>\r\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\r\n              <NodeFieldDisplay node={node} />\r\n            </CardContent></CardDark>\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  talentKey: TalentSheetElementKey,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\r\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\r\n\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\r\n    const level = data.get(input.total[talentKey]).value\r\n    const asc = data.get(input.asc).value\r\n\r\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\r\n      {range(1, talentLimits[asc]).map(i =>\r\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\r\n    </DropdownButton>\r\n  }\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\r\n\r\n  // Hide header if the header matches the current talent\r\n  const hideHeader = (section: DocumentSection): boolean => {\r\n    let headerAction = section.header?.action\r\n    if (headerAction && (typeof headerAction !== \"string\")) {\r\n      const key: string = headerAction.props.children.props.key18\r\n      return key.includes(talentKey)\r\n    }\r\n    return false\r\n  }\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { PersonAdd } from \"@mui/icons-material\";\r\nimport { AutocompleteProps, CardContent, CardHeader, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\r\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\r\nimport ColorText from \"../../../Components/ColoredText\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\r\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\r\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\r\nimport { resonanceSheets } from \"../../../Data/Resonance\";\r\nimport { DatabaseContext } from \"../../../Database/Database\";\r\nimport { NodeDisplay } from \"../../../Formula/uiData\";\r\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\r\nimport useDBMeta from \"../../../ReactHooks/useDBMeta\";\r\nimport usePromise from \"../../../ReactHooks/usePromise\";\r\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\r\nimport { objPathValue, range } from \"../../../Util/Util\";\r\n\r\nexport default function TabTeambuffs() {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <TeamBuffDisplay />\r\n        <ResonanceDisplay />\r\n      </Grid>\r\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\r\n        <TeammateDisplay index={i} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </Box>\r\n}\r\nexport function TeamBuffDisplay() {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const teamBuffs = data.getTeamBuff()\r\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\r\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\r\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\r\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\r\n  if (!nodes.length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Team Buffs</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container>\r\n        {nodes.map(([path, n]) => n && <Grid item xs={12} key={JSON.stringify(n.info)} >\r\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ResonanceDisplay() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { data } = useContext(DataContext)\r\n  const { character: { team } } = useContext(CharacterContext)\r\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\r\n  return <>\r\n    <CardLight>\r\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\r\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n    </CardLight>\r\n    {resonanceSheets.map((res, i) => {\r\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\r\n      const title = <span>{res.name} {icon}</span>\r\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\r\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        {res.canShow(data) && <Divider />}\r\n        {res.canShow(data) && <CardContent>\r\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\r\n        </CardContent>}\r\n      </CardLight>\r\n    })}\r\n  </>\r\n}\r\nfunction TeammateDisplay({ index }: { index: number }) {\r\n  const { teamData } = useContext(DataContext)\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\r\n  const teamMateKey = active.team[index]\r\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\r\n  const onClickHandler = useCharSelectionCallback()\r\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\r\n\r\n  const dataBundle = teamData[teamMateKey]\r\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\r\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\r\n    characterSheet: dataBundle.characterSheet,\r\n    characterDispatch: (state) => {\r\n      if (!teamMateKey) return\r\n      if (!(\"conditional\" in state)) return\r\n      const { conditional } = state\r\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\r\n    }\r\n  }, [active, teamMateKey, dataBundle, characterDispatch])\r\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\r\n    data: dataBundle.target,\r\n    teamData: teamData,\r\n  }, [dataBundle, teamData])\r\n  return <CardLight>\r\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\r\n      setChar={setTeammate}\r\n      label={t(\"teammate\", { count: index + 1 })}\r\n    />\r\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\r\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\r\n        <CharacterCard characterKey={teamMateKey}\r\n          onClickHeader={onClickHandler}\r\n          // Need to wrap these elements with the providers for them to use the correct functions.\r\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharArtifactCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharWeaponCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharTalentCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          isTeammateCard\r\n        />\r\n      </DataContext.Provider>}\r\n    </CharacterContext.Provider>}\r\n  </CardLight>\r\n}\r\nfunction CharArtifactCondDisplay() {\r\n  const { data, } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const sections = useMemo(() => artifactSheets &&\r\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\r\n      .flatMap(([setKey, setNums]) =>\r\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\r\n    , [artifactSheets, data])\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\nfunction CharWeaponCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { teamData } = useContext(DataContext)\r\n  const weaponSheet = teamData[charKey]!.weaponSheet\r\n  if (!weaponSheet.document) return null\r\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\r\n}\r\nfunction CharTalentCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { teamData } = useContext(DataContext)\r\n  const characterSheet = teamData[charKey]!.characterSheet\r\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\n\r\nfunction TeammateAutocomplete({ characterKey, team, label, setChar, autoCompleteProps = {} }:\r\n  { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<CharacterKey | \"\">, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\r\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\r\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\r\n  const isFavorite = useCallback((key: CharacterKey) => database.charMeta.get(key).favorite, [database])\r\n  const onDisable = useCallback(({ key }: { key: CharacterKey | \"\" }) => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\r\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\r\n    key: \"\",\r\n    label: t`page_character:none`,\r\n  },\r\n  ...database.chars.keys\r\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\r\n    .sort((a, b) => {\r\n      if (a.favorite && !b.favorite) return -1\r\n      if (!a.favorite && b.favorite) return 1\r\n      return a.label.localeCompare(b.label)\r\n    })\r\n  ], [t, toText, isFavorite, database])\r\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} getOptionDisabled={onDisable} toImg={toImg} {...autoCompleteProps} /></Suspense>\r\n}\r\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Slider, Stack, ToggleButton, Typography } from \"@mui/material\";\r\nimport { WeaponTypeKey } from \"pipeline\";\r\nimport React, { Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\r\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\r\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\r\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\r\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport ColorText from \"../../../../Components/ColoredText\";\r\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\r\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport LevelSelect from \"../../../../Components/LevelSelect\";\r\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\r\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\r\nimport StatIcon from \"../../../../Components/StatIcon\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\r\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\r\nimport { initCharTC } from \"../../../../Database/DataManagers/CharacterTCData\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\r\nimport { constant, percent } from \"../../../../Formula/utils\";\r\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\r\nimport usePromise from \"../../../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\r\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\r\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\r\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\r\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\r\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\r\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\r\nimport useCharTC from \"./useCharTC\";\r\nconst WeaponSelectionModal = React.lazy(() => import('../../../../Components/Weapon/WeaponSelectionModal'))\r\n\r\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\r\nexport default function TabTheorycraft() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\r\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\r\n  const resetData = useCallback(() => {\r\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\r\n  }, [setData, characterSheet])\r\n  const setWeapon = useCallback(\r\n    (action: Partial<ICharTC[\"weapon\"]>) => {\r\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\r\n    },\r\n    [setData, data],\r\n  )\r\n\r\n  const copyFrom = useCallback(\r\n    (eWeapon: ICachedWeapon, build: ICachedArtifact[]) => {\r\n      const newData = initCharTC(eWeapon.key)\r\n      newData.artifact.substats.type = data.artifact.substats.type\r\n\r\n      newData.weapon.level = eWeapon.level\r\n      newData.weapon.ascension = eWeapon.ascension\r\n      newData.weapon.refinement = eWeapon.refinement\r\n\r\n      const sets = {}\r\n      build.forEach(art => {\r\n        if (!art) return\r\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\r\n        newData.artifact.slots[slotKey].level = level\r\n        newData.artifact.slots[slotKey].statKey = mainStatKey\r\n        newData.artifact.slots[slotKey].rarity = rarity\r\n        sets[setKey] = (sets[setKey] ?? 0) + 1\r\n        substats.forEach(substat => {\r\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\r\n        })\r\n      })\r\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\r\n        value === 3 ? 2 :\r\n          value === 5 ? 4 :\r\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\r\n      ]).filter(([key, value]) => value))\r\n      setData(newData)\r\n    },\r\n    [data, setData],\r\n  )\r\n  const location = useLocation()\r\n  const { build: locBuild } = (location.state as { build: string[] } | undefined) ?? { build: undefined }\r\n  useEffect(() => {\r\n    if (!locBuild) return\r\n    const eWeapon = database.weapons.get(character.equippedWeapon)!\r\n    copyFrom(eWeapon, locBuild.map(i => database.arts.get(i)!))\r\n    // WARNING: if copyFrom is included, it will cause a render loop due to its setData <---> data\r\n    // eslint-disable-next-line\r\n  }, [locBuild, database])\r\n\r\n  const copyFromEquipped = useCallback(\r\n    () => {\r\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\r\n      copyFrom(eWeapon, Object.values(character.equippedArtifacts).map(a => database.arts.get(a)!).filter(a => a))\r\n    },\r\n    [database, character.equippedArtifacts, character.equippedWeapon, copyFrom],\r\n  )\r\n\r\n  const weapon: ICachedWeapon = useMemo(() => {\r\n    return {\r\n      ...data.weapon,\r\n      location: \"\",\r\n      lock: false,\r\n      id: \"\"\r\n    }\r\n  }, [data])\r\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact = artifact\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setSubstatsType = useCallback((t: SubstatType) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.substats.type = t\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.substats.stats = setSubstats\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const deferredData = useDeferredValue(data)\r\n  const overriderArtData = useMemo(() => {\r\n    const stats = { ...deferredData.artifact.substats.stats }\r\n    Object.values(deferredData.artifact.slots).forEach(({ statKey, rarity, level }) =>\r\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\r\n    return {\r\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\r\n      artSet: objectMap(deferredData.artifact.sets, v => constant(v)),\r\n    }\r\n  }, [deferredData])\r\n\r\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\r\n    id: \"\",\r\n    location: \"\",\r\n    key: data.weapon.key,\r\n    level: data.weapon.level,\r\n    ascension: data.weapon.ascension,\r\n    refinement: data.weapon.refinement,\r\n    lock: false\r\n  }), [data])\r\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\r\n\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n    }\r\n  }, [charUIData, teamData])\r\n  const dataContextValueWithOld: dataContextObj | undefined = useMemo(() => {\r\n    if (!dataContextValue) return undefined\r\n    return {\r\n      ...dataContextValue,\r\n      oldData: compareData ? oldData : undefined,\r\n    }\r\n  }, [dataContextValue, compareData, oldData])\r\n  return <Stack spacing={1}>\r\n    <CardLight>\r\n      <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\r\n        <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\r\n          <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\r\n          <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\r\n        </Box>\r\n        <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n          <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\r\n          <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\r\n        </SolidToggleButtonGroup>\r\n      </Box>\r\n    </CardLight>\r\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\r\n      <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\r\n        <Grid item sx={{ flexGrow: -1 }}  >\r\n          <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\r\n          <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\r\n        </Grid>\r\n        <Grid item sx={{ flexGrow: 1 }}  >\r\n          <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\r\n        </Grid>\r\n      </Grid >\r\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\r\n    <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n      {dataContextValueWithOld ? <DataContext.Provider value={dataContextValueWithOld}>\r\n        <StatDisplayComponent />\r\n      </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\r\n    </CardLight>\r\n\r\n  </Stack>\r\n}\r\n\r\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\r\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\r\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const { data } = useContext(DataContext)\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <CardLight sx={{ p: 1, mb: 1 }} >\r\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      <Box display=\"flex\" gap={1}>\r\n        {weaponSheet && <Box\r\n          className={`grad-${weaponSheet.rarity}star`}\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\r\n        />}\r\n        <Stack spacing={1} flexGrow={1}>\r\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\r\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\r\n        </Stack>\r\n      </Box>\r\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\r\n      <CardDark >\r\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        <Divider />\r\n        {weaponUIData && <FieldDisplayList>\r\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n            const n = weaponUIData.get(node)\r\n            if (n.isEmpty || !n.value) return null\r\n            return <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} component={ListItem} />\r\n          })}\r\n        </FieldDisplayList>}\r\n      </CardDark>\r\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n    </Box>\r\n  </CardLight >\r\n}\r\n\r\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\r\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\r\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\r\n    const artifactData_ = deepClone(artifactData)\r\n    artifactData_.slots[slotKey] = slot\r\n    setArtifactData(artifactData_)\r\n  }, [artifactData, setArtifactData])\r\n\r\n  const setArtSet = useCallback((artSet: ISet) => {\r\n    const artifactData_ = deepClone(artifactData)\r\n    artifactData_.sets = artSet\r\n    setArtifactData(artifactData_)\r\n  }, [artifactData, setArtifactData])\r\n\r\n  return <Stack spacing={1} >\r\n    <CardLight sx={{ p: 1 }}>\r\n      <Stack spacing={1}>\r\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\r\n      </Stack>\r\n    </CardLight>\r\n    <Suspense fallback={<Skeleton variant='rectangular' width='100%' height={200} />}>\r\n      <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\r\n    </Suspense>\r\n  </Stack>\r\n}\r\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\r\n  const { level, statKey, rarity } = slot\r\n  const keys = Artifact.slotMainStats(slotKey)\r\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\r\n    setSlotProp({ ...slot, ...action })\r\n  }, [slot, setSlotProp])\r\n  const setRarity = useCallback(\r\n    (r: ArtifactRarity) => {\r\n      const mLvl = maxArtifactLevel[r] ?? 0\r\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\r\n      else setSlot({ rarity: r })\r\n    }, [level, setSlot])\r\n\r\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\r\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\r\n      {keys.length === 1 ?\r\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\r\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\r\n          {keys.map(msk =>\r\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\r\n              <StatColoredWithUnit statKey={msk} />\r\n            </MenuItem>)}\r\n        </DropdownButton>}\r\n    </CardDark>\r\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\r\n      {[5, 4, 3].map(r =>\r\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\r\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\r\n        </MenuItem>)}\r\n    </DropdownButton>\r\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\r\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\r\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\r\n    </CardDark>\r\n  </Box>\r\n}\r\n\r\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\r\n    if (!setKey || !artifactSheets) return\r\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\r\n  }, [artSet, setArtSet, artifactSheets])\r\n\r\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\r\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\r\n    const { [setKey]: _, ...rest } = artSet\r\n    setArtSet({ ...rest })\r\n  }, [artSet, setArtSet])\r\n\r\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\r\n\r\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\r\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\r\n    <CardLight sx={{ flexGrow: 1 }}>\r\n      <ArtifactSetSingleAutocomplete\r\n        showDefault\r\n        disableClearable\r\n        size=\"small\"\r\n        artSetKey={\"\"}\r\n        setArtSetKey={setSet}\r\n        sx={(theme) => ({\r\n          flexGrow: 1,\r\n          \".MuiFilledInput-root\": {\r\n            borderBottomRightRadius: theme.shape.borderRadius,\r\n            borderBottomLeftRadius: theme.shape.borderRadius\r\n          }\r\n        })}\r\n        defaultText={\"New Artifact Set\"}\r\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\r\n      />\r\n    </CardLight>\r\n\r\n  </Stack>\r\n}\r\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (value < 4 || !artifactSheet) return []\r\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [artifactSheet, value])\r\n\r\n  if (!artifactSheet) return null\r\n  return <CardLight>\r\n    <Box display=\"flex\">\r\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\r\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\r\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\r\n          <Box >{artifactSheet.setName}</Box>\r\n          <Info />\r\n        </Box>\r\n      </ArtifactSetTooltip>\r\n      <ButtonGroup>\r\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\r\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\r\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\r\n          )}\r\n        </DropdownButton>\r\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\r\n          <DeleteForever />\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Box>\r\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\r\n      {set4CondNums.map(setNumKey =>\r\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n      )}\r\n    </Stack>}\r\n  </CardLight>\r\n}\r\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\r\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\r\n  const { t } = useTranslation(\"page_character\")\r\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\r\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\r\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\r\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\r\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\r\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\r\n      </DropdownButton>\r\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\r\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\r\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\r\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\r\n        </CardDark>\r\n      </BootstrapTooltip>\r\n    </Box>\r\n    <Stack spacing={1}>\r\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\r\n    </Stack>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\r\n  const [rolls, setRolls] = useState(() => value / substatValue)\r\n  useEffect(() => setRolls(value / substatValue), [value, substatValue])\r\n\r\n  const unit = KeyMap.unit(statKey)\r\n  const displayValue = rolls * substatValue\r\n\r\n  const rv = (rolls * substatValue) / Artifact.substatValue(statKey) * 100\r\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\r\n  const maxRolls = (5 - numMains) * 6\r\n  // 0.0001 to nudge float comparasion\r\n  const invalid = (rolls - 0.0001) > maxRolls\r\n  const setRValue = useCallback((r: number) => setValue(r * substatValue), [setValue, substatValue])\r\n\r\n  return <Stack spacing={0.5}>\r\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n      <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\r\n      </CardDark>\r\n      <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\r\n        <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\r\n          <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\r\n        </CardDark>\r\n      </BootstrapTooltip>\r\n    </Box>\r\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n      <CustomNumberInput\r\n        color={displayValue ? \"success\" : \"primary\"}\r\n        float={KeyMap.unit(statKey) === \"%\"}\r\n        endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\r\n        value={parseFloat(displayValue.toFixed(2))}\r\n        onChange={v => v !== undefined && setValue(v)}\r\n        sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\r\n        inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\r\n      <CardDark sx={{ px: 2, flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Slider\r\n          size=\"small\"\r\n          value={rolls}\r\n          max={maxRolls}\r\n          min={0}\r\n          step={1}\r\n          marks\r\n          onChange={(e, v) => setRolls(v as number)}\r\n          onChangeCommitted={(e, v) => setRValue(v as number)}\r\n        />\r\n      </CardDark>\r\n      <CustomNumberInput\r\n        color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\r\n        float\r\n        startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\r\n        value={parseFloat(rolls.toFixed(2))}\r\n        onChange={v => v !== undefined && setValue(v * substatValue)}\r\n        sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\r\n        inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\r\n    </Box>\r\n  </Stack>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\r\n\r\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [charTC, setCharTC] = useState(() => database.charTCs.getWithInit(characterKey, defWeapon))\r\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\r\n  useEffect(() =>\r\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\r\n    [characterKey, setCharTC, database])\r\n  return charTC\r\n}\r\n","import { MenuItem } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { stg } from '../../Data/SheetUtil';\r\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\r\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\r\n\r\nexport default function TravelerElementSelect() {\r\n  const { character } = useContext(CharacterContext)\r\n  const { key } = character\r\n  const setCharacter = useCharSelectionCallback()\r\n  if (!(key.startsWith(\"Traveler\"))) return null\r\n\r\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\r\n\r\n  return <DropdownButton color={elementKey} title={<strong>{stg(`element.${elementKey}`)}</strong>}>\r\n    {travelerElements.map(eleKey =>\r\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\r\n        <strong><ColorText color={eleKey}>{stg(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { Female, Male } from '@mui/icons-material';\r\nimport { Button } from '@mui/material';\r\nimport { useCallback, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\n\r\nexport default function TravelerGenderSelect() {\r\n  const { t } = useTranslation(\"ui\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character } = useContext(CharacterContext)\r\n  const { key } = character\r\n  const { gender } = useDBMeta()\r\n  const toggleGender = useCallback(() => database.dbMeta.set({ gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\r\n  if (!(key.startsWith(\"Traveler\"))) return null\r\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\r\n}\r\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\r\nimport LevelSelect from '../../Components/LevelSelect';\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\r\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport useBoolState from '../../ReactHooks/useBoolState';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport useTitle from '../../ReactHooks/useTitle';\r\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\r\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\r\nimport CharSelectDropdown from './CharSelectDropdown';\r\nimport FormulaModal from './FormulaModal';\r\nimport StatModal from './StatModal';\r\nimport TabBuild from './Tabs/TabOptimize';\r\nimport TabOverview from './Tabs/TabOverview';\r\nimport TabTalent from './Tabs/TabTalent';\r\nimport TabTeambuffs from './Tabs/TabTeambuffs';\r\nimport TabTheorycraft from './Tabs/TabTheorycraft';\r\nimport TravelerElementSelect from './TravelerElementSelect';\r\nimport TravelerGenderSelect from './TravelerGenderSelect';\r\n\r\nexport default function CharacterDisplay() {\r\n  const navigate = useNavigate();\r\n  const { database } = useContext(DatabaseContext)\r\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\r\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\r\n  if (invalidKey)\r\n    return <Navigate to=\"/characters\" />\r\n\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\r\n    </Suspense>\r\n  </Box>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClose?: () => void,\r\n}\r\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\r\n  const character = useCharacter(characterKey)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const teamData = useTeamData(characterKey)\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\r\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\r\n\r\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\r\n\r\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n      oldData: undefined,\r\n    }\r\n  }, [charUIData, teamData])\r\n\r\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\r\n    if (!character || !characterSheet) return undefined\r\n    return {\r\n      character,\r\n      characterSheet,\r\n      characterDispatch\r\n    }\r\n  }, [character, characterSheet, characterDispatch])\r\n  return <CardDark >\r\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\r\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Box display=\"flex\" >\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\r\n            <CharSelectDropdown />\r\n            <TravelerElementSelect />\r\n            <TravelerGenderSelect />\r\n            <DetailStatButton />\r\n            <CustomMultiTargetButton />\r\n            <FormulasButton />\r\n          </Box>\r\n          {!!onClose && <CloseButton onClick={onClose} />}\r\n        </Box>\r\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\r\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\r\n          <HitModeToggle size=\"small\" />\r\n          <InfusionAuraDropdown />\r\n          <ReactionToggle size=\"small\" />\r\n        </Box>\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n        <CharacterPanel />\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n      </CardContent></FormulaDataWrapper>\r\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\r\n    }\r\n  </CardDark >\r\n}\r\nfunction CharacterPanel() {\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\r\n    <Routes>\r\n      {/* Character Panel */}\r\n      <Route index element={<TabOverview />} />\r\n      <Route path=\"/talent\" element={<TabTalent />} />\r\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\r\n      <Route path=\"/optimize\" element={<TabBuild />} />\r\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\r\n    </Routes>\r\n  </Suspense>\r\n}\r\nfunction TabNav({ tab }: { tab: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <Tabs\r\n    value={tab}\r\n    variant=\"scrollable\"\r\n    allowScrollButtonsMobile\r\n    sx={{\r\n      \"& .MuiTab-root:hover\": {\r\n        transition: \"background-color 0.25s ease\",\r\n        backgroundColor: \"rgba(255,255,255,0.1)\"\r\n      },\r\n    }}\r\n  >\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\r\n  </Tabs>\r\n}\r\n\r\n\r\nfunction DetailStatButton() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  const { character: { bonusStats } } = useContext(CharacterContext)\r\n  const bStatsNum = Object.keys(bonusStats).length\r\n  return <>\r\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\r\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\r\n    </Button>\r\n    <StatModal open={open} onClose={onClose} />\r\n  </>\r\n}\r\nfunction FormulasButton() {\r\n  const { onModalOpen } = useContext(FormulaDataContext)\r\n  return <>\r\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\r\n    <FormulaModal />\r\n  </>\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport { nodeVStr } from \"../Formula/uiData\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { LocationKey } from \"../Types/consts\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n\r\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\r\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\r\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\r\n\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\r\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\r\n  const img = weaponSheet.getImg(ascension)\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\r\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\r\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\r\n            </Box>\r\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\r\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={img ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          {stats.map(node => {\r\n            if (!node.info.name) return null\r\n            return <Box key={JSON.stringify(node.info)} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{node.info.icon} {node.info.name}</Typography>\r\n              <Typography>{nodeVStr(node)}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {canEquip\r\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key, disableClearable: true }} />\r\n            : <LocationName location={location} />}\r\n        </Box>\r\n        <ButtonGroup sx={{ height: \"100%\" }}>\r\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" onClick={() => onEdit(id)} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","KeyMap","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","CharacterSelectionModal","React","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","Suspense","fallback","show","onHide","onSelect","ThumbSide","src","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","nodeVStr","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","enemyOverride","EnemyResText","justifyContent","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","md","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","Grid","container","spacing","item","href","target","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","JSON","stringify","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","n","miscStatReadNodes","StatDisplayCard","py","OptimizationTargetContext","createContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","some","x","newArts","newNodes","pruneExclusion","maxValues","mapFormulas","f","operation","operands","pass","fail","thres","threshold","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","forEach","op","has","dynKeys","forEachNodes","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","accu","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","newOperands","op1","op2","j","ranges","range","reads","Error","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","sk","slotKey","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","tot","set4CondNums","setEffects","doc","opacity","defIconSrc","paddingTop","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","unit","alignContent","gender","useDBMeta","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtonsRight","extraButtonsLeft","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","Checkroom","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","editorProps","disableSet","disableSlot","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","pop","allData","OptimizationTargetSelector","setTarget","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","xLabel","Label","fill","dy","getLabelFromNode","yLabel","angle","dx","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","console","log","textSuffix","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","displayOptimize","tempEquipmentPriority","equipmentPriority","setTO","to","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","splice","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","TabBuild","compareData","buildStatus","setBuildStatus","setchartData","setArtsDirty","threads","defThreads","setDisplayOptimize","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","maxBuildsToShow","buildResult","setBuildResult","buildResultDispatch","useBuildResult","buildDate","teamData","useTeamData","cancelToken","generateBuilds","getThreshold","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","unprunedFilters","next","done","minCount","minFilterCount","buildValues","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","unoptimizedOptimizationTargetNode","objPathValue","targetNode","valueFilter","cancelled","Promise","unoptimizedNodes","setPerms","prepruneArts","optimize","plotBaseNode","optimizationTargetNode","Array","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","Worker","URL","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","source","terminate","pruned","prepruned","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","DataContextWrapper","BuildItemWrapper","join","useLocation","navigate","useNavigate","toTC","paths","pathname","Science","dirty","setDirty","buildsArts","providerValue","CompareBuildButton","artId","onShow","CompareContent","Tooltip","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","extraButtons","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","rvFilter","useCharMeta","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setRVFilter","charMeta","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","colored","Favorite","FavoriteBorder","right","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","active","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","autoCompleteProps","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","pr","isFavorite","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","WeaponSelectionModal","TabTheorycraft","defWeapon","charTCs","getWithInit","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFrom","eWeapon","newData","artifact","stats","locBuild","copyFromEquipped","lock","setArtifact","data_","setSubstatsType","setSubstats","deferredData","overriderArtData","overrideWeapon","charUIData","dataContextValue","dataContextValueWithOld","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","weaponTypeFilter","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","setValue","deleteValue","rest","ArtifactSetEditor","disableClearable","setName","Info","DeleteForever","rv","substatType","ArtifactSubstatEditor","substatValue","setRolls","displayValue","numMains","ms","maxRolls","invalid","setRValue","parseFloat","Slider","TravelerElementSelect","allElements","toLowerCase","stg","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","dbMeta","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","end","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","bStatsNum","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","faEdit","faTrashAlt"],"sourceRoot":""}