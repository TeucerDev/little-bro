{"version":3,"file":"static/js/533.2c506484.chunk.js","mappings":"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","sources":["PageHome/InventoryCard.tsx","../node_modules/@mui/icons-material/esm/AccessTimeFilled.js","PageHome/ResinCard.tsx","PageHome/index.tsx","../node_modules/@mui/icons-material/esm/BusinessCenter.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js"],"sourcesContent":["import { BusinessCenter, People } from \"@mui/icons-material\"\r\nimport { CardActionArea, CardContent, CardHeader, Chip, Divider, Typography, useMediaQuery } from \"@mui/material\"\r\nimport { useTheme } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Assets from \"../Assets/Assets\"\r\nimport { slotIconSVG } from \"../Components/Artifact/SlotNameWIthIcon\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport FontAwesomeSvgIcon from \"../Components/FontAwesomeSvgIcon\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { elementSvg } from \"../Components/StatIcon\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport useDBMeta from \"../ReactHooks/useDBMeta\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { allElements, allSlotKeys, allWeaponTypeKeys } from \"../Types/consts\"\r\nimport { objectKeyMap } from \"../Util/Util\"\r\n\r\nexport default function InventoryCard() {\r\n  const { t } = useTranslation([\"page_home\", \"ui\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const { characterTally, characterTotal } = useMemo(() => {\r\n    const chars = database.chars.keys\r\n    const tally = objectKeyMap(allElements, () => 0)\r\n    if (characterSheets) chars.forEach(ck => {\r\n      let elementKey = characterSheets(ck, gender)!.elementKey\r\n      tally[elementKey] = tally[elementKey] + 1\r\n    })\r\n    return { characterTally: tally, characterTotal: chars.length }\r\n  }, [database, characterSheets, gender])\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n  const { weaponTally, weaponTotal } = useMemo(() => {\r\n    const weapons = database.weapons.values\r\n    const tally = objectKeyMap(allWeaponTypeKeys, () => 0)\r\n    if (weaponSheets) weapons.forEach(wp => {\r\n      let type = weaponSheets(wp.key).weaponType\r\n      tally[type] = tally[type] + 1\r\n    })\r\n    return { weaponTally: tally, weaponTotal: weapons.length }\r\n  }, [database, weaponSheets])\r\n\r\n  const { artifactTally, artifactTotal } = useMemo(() => {\r\n    const tally = objectKeyMap(allSlotKeys, () => 0)\r\n    const arts = database.arts.values\r\n    arts.forEach(art => {\r\n      const slotKey = art.slotKey\r\n      tally[slotKey] = tally[slotKey] + 1\r\n    })\r\n    return { artifactTally: tally, artifactTotal: arts.length }\r\n  }, [database])\r\n  const theme = useTheme();\r\n  const smaller = !useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\">{t`inventoryCard.title`}</Typography>} avatar={<BusinessCenter fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n      <CardLight>\r\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/characters\" >\r\n          <Chip label={<strong>{t<string>(`ui:tabs.characters`)} {characterTotal}</strong>} icon={<People />} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1, cursor: \"pointer\" }} color={characterTotal ? \"primary\" : \"secondary\"} />\r\n          {Object.entries(characterTally).map(([ele, num]) => <Chip key={ele} sx={{ flexGrow: 1, cursor: \"pointer\" }} color={num ? ele : \"secondary\"} icon={<FontAwesomeSvgIcon icon={elementSvg[ele]} />} label={<strong>{num}</strong>} />)}\r\n        </CardActionArea>\r\n      </CardLight>\r\n      <CardLight>\r\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/weapons\" >\r\n          <Chip label={<strong>{t<string>(`ui:tabs.weapons`)} {weaponTotal}</strong>} icon={Assets.svg.anvil} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1, cursor: \"pointer\" }} color={weaponTotal ? \"primary\" : \"secondary\"} />\r\n          {Object.entries(weaponTally).map(([wt, num]) => <Chip key={wt} sx={{ flexGrow: 1, cursor: \"pointer\" }} color={num ? \"success\" : \"secondary\"} icon={<ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />} label={<strong>{num}</strong>} />)}\r\n        </CardActionArea>\r\n      </CardLight>\r\n      <CardLight>\r\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/artifacts\">\r\n          <Chip label={<strong>{t<string>(`ui:tabs.artifacts`)} {artifactTotal}</strong>} icon={<FontAwesomeSvgIcon icon={slotIconSVG.flower} />} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1, cursor: \"pointer\" }} color={artifactTotal ? \"primary\" : \"secondary\"} />\r\n          {Object.entries(artifactTally).map(([slotKey, num]) => <Chip key={slotKey} sx={{ flexGrow: 1, cursor: \"pointer\" }} color={num ? \"success\" : \"secondary\"} icon={<FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />} label={<strong>{num}</strong>} />)}\r\n        </CardActionArea>\r\n      </CardLight>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm3.3 14.71L11 12.41V7h2v4.59l3.71 3.71-1.42 1.41z\"\n}), 'AccessTimeFilled');","import { AccessTimeFilled } from \"@mui/icons-material\"\r\nimport { CardActionArea, CardContent, CardHeader, Divider, Typography } from \"@mui/material\"\r\nimport { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { RESIN_MAX, RESIN_RECH_MS } from \"../PageTools/ResinCounter\"\r\nimport { timeZones } from \"../PageTools/TeyvatTime\"\r\nimport { SECOND_MS } from \"../Util/TimeUtil\"\r\n\r\nexport default function ResinCard() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [{ timeZoneKey, resin, resinDate }, setState] = useState(() => database.displayTool.get())\r\n  useEffect(() => database.displayTool.follow((r, s) => setState(s)), [database])\r\n  const [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\r\n\r\n  useEffect(() => {\r\n    let setSecondTimeout = () => {\r\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\r\n      return setTimeout(() => {\r\n        interval = setSecondTimeout()\r\n      }, SECOND_MS - (Date.now() % SECOND_MS));\r\n    }\r\n    let interval = setSecondTimeout()\r\n    return () => clearTimeout(interval)\r\n  }, [timeZoneKey])\r\n\r\n  const resinIncrement = useRef(undefined as undefined | NodeJS.Timeout)\r\n\r\n  const setResin = (newResin: number) => {\r\n    if (newResin >= RESIN_MAX) {\r\n      resinIncrement.current && clearTimeout(resinIncrement.current)\r\n      resinIncrement.current = undefined\r\n    } else\r\n      resinIncrement.current = setTimeout(() => console.log(\"set resin\", newResin + 1), RESIN_RECH_MS);\r\n    database.displayTool.set({ resin: newResin, resinDate: new Date().getTime() })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (resin < RESIN_MAX) {\r\n      const now = Date.now()\r\n      const resinToMax = RESIN_MAX - resin\r\n      const resinSinceLastDate = Math.min(Math.floor((now - resinDate) / (RESIN_RECH_MS)), resinToMax)\r\n      const catchUpResin = resin + resinSinceLastDate\r\n      const newDate = resinDate + resinSinceLastDate * RESIN_RECH_MS\r\n      database.displayTool.set({ resin: catchUpResin, resinDate: newDate })\r\n      if (catchUpResin < RESIN_MAX)\r\n        resinIncrement.current = setTimeout(() => setResin(catchUpResin + 1), now - newDate);\r\n    }\r\n    return () => resinIncrement.current && clearTimeout(resinIncrement.current)\r\n    // eslint-disable-next-line\r\n  }, [database])\r\n\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\">{timeZoneKey}{' '}{time.toLocaleTimeString([], { timeZone: \"UTC\" })}</Typography>} avatar={<AccessTimeFilled fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent>\r\n      <CardLight>\r\n        <CardActionArea sx={{ p: 2 }} component={RouterLink} to=\"/tools\">\r\n          <Typography variant=\"h2\" sx={{ textAlign: \"center\" }}>\r\n            <ImgIcon src={Assets.resin.fragile} />\r\n            <span>{resin}/{RESIN_MAX}</span>\r\n          </Typography>\r\n        </CardActionArea>\r\n      </CardLight>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { Box, Grid, useMediaQuery } from \"@mui/material\"\r\nimport { useTheme } from \"@mui/system\"\r\nimport ReactGA from 'react-ga4'\r\nimport InventoryCard from \"./InventoryCard\"\r\nimport ResinCard from \"./ResinCard\"\r\n\r\nexport default function PageHome() {\r\n  // TODO: translations\r\n  // const { t } = useTranslation(\"page_home\")\r\n  const theme = useTheme();\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  ReactGA.send({ hitType: \"pageview\", page: '/home' })\r\n  if (lg) return <Grid container spacing={2} direction={\"row-reverse\"} sx={{ my: 2 }}>\r\n    <Grid item xs={12} lg={5} xl={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      {/* <QuickLinksCard /> */}\r\n      <ResinCard />\r\n    </Grid>\r\n    <Grid item xs={12} lg={7} xl={8} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      {/* <IntroCard /> */}\r\n      <InventoryCard />\r\n      {/* <VidGuideCard /> */}\r\n      {/* <TeamCard /> */}\r\n    </Grid>\r\n\r\n  </Grid>\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {/* <IntroCard /> */}\r\n    {/* <QuickLinksCard /> */}\r\n    <InventoryCard />\r\n    <ResinCard />\r\n    {/* <VidGuideCard /> */}\r\n    {/* <TeamCard /> */}\r\n  </Box >\r\n}\r\n\r\n// function IntroCard() {\r\n//   const { t } = useTranslation(\"page_home\")\r\n//   return <CardDark>\r\n//     <CardContent>\r\n//       <Typography variant=\"subtitle1\">\r\n//         <Trans t={t} i18nKey=\"intro\" >\r\n//           The <strong>ultimate</strong> <Link href=\"https://genshin.mihoyo.com/\" target=\"_blank\" rel=\"noreferrer\"><i>Genshin Impact</i></Link> calculator, LB will keep track of your artifact/weapon/character inventory, and help you create the best build based on how you play, with what you have.\r\n//         </Trans>\r\n//       </Typography>\r\n//     </CardContent>\r\n//   </CardDark>\r\n// }\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z\"\n}), 'BusinessCenter');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;"],"names":["InventoryCard","t","useTranslation","database","useContext","DatabaseContext","gender","useDBMeta","characterSheets","usePromise","CharacterSheet","useMemo","chars","keys","tally","objectKeyMap","allElements","forEach","ck","elementKey","characterTally","characterTotal","length","weaponSheets","WeaponSheet","weapons","values","allWeaponTypeKeys","wp","type","key","weaponType","weaponTally","weaponTotal","allSlotKeys","arts","art","slotKey","artifactTally","artifactTotal","theme","useTheme","smaller","useMediaQuery","breakpoints","up","CardDark","CardHeader","title","Typography","variant","avatar","BusinessCenter","fontSize","Divider","CardContent","sx","display","flexDirection","gap","CardLight","CardActionArea","justifyContent","p","flexWrap","component","RouterLink","to","Chip","label","icon","People","flexBasis","flexGrow","cursor","color","Object","entries","map","ele","num","FontAwesomeSvgIcon","elementSvg","Assets","wt","ImgIcon","src","size","slotIconSVG","createSvgIcon","_jsx","d","ResinCard","useState","displayTool","get","timeZoneKey","resin","resinDate","setState","useEffect","follow","r","s","Date","now","timeZones","time","setTime","interval","setSecondTimeout","setTimeout","SECOND_MS","clearTimeout","resinIncrement","useRef","undefined","RESIN_MAX","resinToMax","resinSinceLastDate","Math","min","floor","RESIN_RECH_MS","catchUpResin","newDate","set","current","newResin","console","log","getTime","toLocaleTimeString","timeZone","AccessTimeFilled","textAlign","PageHome","lg","ReactGA","hitType","page","Grid","container","spacing","direction","my","item","xs","xl","Box","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","width","cardActionAreaClasses","opacity","vars","palette","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useThemeProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible"],"sourceRoot":""}