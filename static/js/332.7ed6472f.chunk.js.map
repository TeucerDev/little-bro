{"version":3,"file":"static/js/332.7ed6472f.chunk.js","mappings":"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","sources":["PageCharacter/CharacterSelectionModal.tsx"],"sourcesContent":["import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Tooltip, tooltipClasses, TooltipProps, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { ChangeEvent, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\nimport CardLight from \"../Components/Card/CardLight\";\r\nimport CharacterCard from \"../Components/Character/CharacterCard\";\r\nimport CloseButton from \"../Components/CloseButton\";\r\nimport ModalWrapper from \"../Components/ModalWrapper\";\r\nimport SortByButton from \"../Components/SortByButton\";\r\nimport SqBadge from \"../Components/SqBadge\";\r\nimport { StarsDisplay } from \"../Components/StarDisplay\";\r\nimport ElementToggle from \"../Components/ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../Components/ToggleButton/WeaponToggle\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport useCharacter from \"../ReactHooks/useCharacter\";\r\nimport useDBMeta from \"../ReactHooks/useDBMeta\";\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs, CharacterSortKey, characterSortMap } from \"../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../Util/SortByFilters\";\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\nconst sortKeys = Object.keys(characterSortMap)\r\nexport default function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const [state, setState] = useState(() => database.displayCharacter.get())\r\n  useEffect(() => database.displayCharacter.follow((r, s) => setState(s)), [database, setState])\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n\r\n  // character favorite updater\r\n  useEffect(() => database.charMeta.followAny(s => forceUpdate()), [forceUpdate, database])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n  const deferredState = useDeferredValue(state)\r\n  const deferredDbDirty = useDeferredValue(dbDirty)\r\n  const characterKeyList = useMemo(() => {\r\n    if (!characterSheets) return []\r\n    const { element, weaponType, sortType, ascending } = deferredState\r\n    const sortByKeys = [...(newFirst ? [\"new\"] : []), ...(characterSortMap[sortType] ?? [])] as CharacterSortKey[]\r\n    return deferredDbDirty && allCharacterKeys\r\n      .filter(key => filter(database.chars.get(key), characterSheets[key]))\r\n      .filter(filterFunction({ element, weaponType, name: deferredSearchTerm }, characterFilterConfigs(database, characterSheets)))\r\n      .sort(sortFunction(sortByKeys, ascending, characterSortConfigs(database, characterSheets), [\"new\", \"favorite\"]))\r\n  }, [database, newFirst, deferredState, characterSheets, deferredDbDirty, deferredSearchTerm, filter])\r\n\r\n  if (!characterSheets) return null\r\n\r\n  const { weaponType, element, sortType, ascending } = state\r\n\r\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", alignItems: \"center\", gap: 1, flexWrap: \"wrap\" }}>\r\n        <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => database.displayCharacter.set({ weaponType })} value={weaponType} size=\"small\" />\r\n        <ElementToggle sx={{ height: \"100%\" }} onChange={element => database.displayCharacter.set({ element })} value={element} size=\"small\" />\r\n        <Box flexGrow={1}>\r\n          <TextField\r\n            autoFocus\r\n            value={searchTerm}\r\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n            label={t(\"characterName\")}\r\n            size=\"small\"\r\n            sx={{ height: \"100%\" }}\r\n            InputProps={{\r\n              sx: { height: \"100%\" }\r\n            }}\r\n          />\r\n        </Box>\r\n        <SortByButton sx={{ height: \"100%\" }}\r\n          sortKeys={sortKeys} value={sortType} onChange={sortType => database.displayCharacter.set({ sortType })}\r\n          ascending={ascending} onChangeAsc={ascending => database.displayCharacter.set({ ascending })} />\r\n        <CloseButton onClick={onHide} />\r\n      </CardContent>\r\n      <Divider />\r\n      <DataContext.Provider value={{ teamData: undefined } as any}>\r\n        <CardContent><Grid container spacing={1} columns={{ xs: 2, sm: 3, md: 4, lg: 5, }}>\r\n          {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={1} >\r\n            {/* <CharacterCard key={characterKey} hideStats characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} /> */}\r\n            <SelectionCard characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n          </Grid>)}\r\n        </Grid></CardContent>\r\n      </DataContext.Provider>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nfunction SelectionCard({ characterKey, onClick }: { characterKey: CharacterKey, onClick: () => void }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const character = useCharacter(characterKey)\r\n  const { level = 1, ascension = 0, constellation = 0 } = character ?? {}\r\n  return <CustomTooltip enterDelay={300} enterNextDelay={300} arrow placement=\"bottom\" title={\r\n    <Box sx={{ width: 300 }}>\r\n      <CharacterCard hideStats characterKey={characterKey} />\r\n    </Box>\r\n  }>\r\n    <Box>\r\n      <CardLight sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        <CardActionArea onClick={onClick}>\r\n          <Box display=\"flex\"\r\n            position=\"relative\"\r\n            className={`grad-${characterSheet?.rarity}star`}\r\n            sx={{\r\n              \"&::before\": {\r\n                content: '\"\"',\r\n                display: \"block\", position: \"absolute\",\r\n                left: 0, top: 0,\r\n                width: \"100%\", height: \"100%\",\r\n                opacity: 0.5,\r\n                backgroundImage: `url(${characterSheet?.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n              }\r\n            }}\r\n            width=\"100%\" >\r\n            <Box flexShrink={1} sx={{ maxWidth: { xs: \"33%\", lg: \"30%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n              <Box\r\n                component=\"img\"\r\n                src={characterSheet?.thumbImg}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                maxWidth={256}\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Box>\r\n            <Box flexGrow={1} sx={{ pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1} justifyContent=\"space-evenly\">\r\n              <Typography variant=\"body2\" ><SqBadge color={characterSheet?.elementKey} sx={{ opacity: 0.85, textShadow: \"0 0 5px gray\" }}>{characterSheet?.name}</SqBadge></Typography>\r\n              {character ? <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n                <Box sx={{ textShadow: \"0 0 5px gray\" }}>\r\n                  <Typography variant=\"body2\" component=\"span\" whiteSpace=\"nowrap\" >Lv. {level}</Typography>\r\n                  <Typography variant=\"body2\" component=\"span\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n                </Box>\r\n                <Typography variant=\"body2\" >C{constellation}</Typography>\r\n              </Box> : <Typography component=\"span\" variant=\"body2\" ><SqBadge>NEW</SqBadge></Typography>}\r\n              <Typography variant=\"body2\" ><StarsDisplay stars={characterSheet?.rarity ?? 1} colored /></Typography>\r\n            </Box>\r\n          </Box>\r\n        </CardActionArea>\r\n      </CardLight>\r\n    </Box>\r\n  </CustomTooltip>\r\n}\r\n"],"names":["sortKeys","Object","keys","characterSortMap","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","t","useTranslation","database","useContext","DatabaseContext","useState","displayCharacter","get","state","setState","useEffect","follow","r","s","characterSheets","usePromise","CharacterSheet","useForceUpdate","dbDirty","forceUpdate","charMeta","followAny","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","deferredState","deferredDbDirty","characterKeyList","useMemo","element","weaponType","sortType","ascending","sortByKeys","allCharacterKeys","key","chars","filterFunction","name","characterFilterConfigs","sort","sortFunction","characterSortConfigs","open","onClose","sx","justifyContent","py","display","alignItems","gap","flexWrap","height","onChange","set","value","size","flexGrow","autoFocus","e","target","label","InputProps","onChangeAsc","onClick","teamData","undefined","container","spacing","columns","xs","sm","md","lg","map","characterKey","item","SelectionCard","CustomTooltip","styled","className","props","classes","popper","tooltipClasses","padding","gender","useDBMeta","characterSheet","character","useCharacter","level","ascension","constellation","enterDelay","enterNextDelay","arrow","placement","title","width","hideStats","flexDirection","position","rarity","content","left","top","opacity","backgroundImage","bannerImg","backgroundPosition","backgroundSize","flexShrink","maxWidth","alignSelf","zIndex","component","src","thumbImg","mt","pr","variant","color","elementKey","textShadow","whiteSpace","ascensionMaxLevel","stars","colored"],"sourceRoot":""}