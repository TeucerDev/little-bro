{"version":3,"file":"static/js/348.7b3398b2.chunk.js","mappings":"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","sources":["Components/Character/LocationAutocomplete.tsx","Components/Character/LocationName.tsx","Components/Character/ThumbSide.tsx","Components/ConditionalWrapper.tsx","Components/GeneralAutocomplete.tsx","Components/SolidColoredTextfield.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/ToggleButton/WeaponToggle.tsx","PageWeapon/WeaponCard.tsx","PageWeapon/index.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useWeapon.tsx","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { BusinessCenter } from \"@mui/icons-material\"\r\nimport { AutocompleteProps, Skeleton } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { charKeyToCharName, charKeyToLocCharKey, LocationCharacterKey, LocationKey, travelerKeys } from \"../../Types/consts\"\r\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../GeneralAutocomplete\"\r\nimport ThumbSide from \"./ThumbSide\"\r\n\r\nexport function LocationAutocomplete({ location, setLocation, filter = () => true, autoCompleteProps = {} }:\r\n  { location: LocationKey, setLocation: (v: LocationKey) => void, filter?: (v: CharacterSheet) => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<LocationKey>, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\r\n  const { t } = useTranslation([\"ui\", \"artifact\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const toText = useCallback((key: LocationCharacterKey): string => t(`charNames_gen:${charKeyToCharName(database.chars.LocationToCharacterKey(key), gender)}`), [database, gender, t])\r\n  const toImg = useCallback((key: LocationKey) => key === \"\" ? <BusinessCenter /> : characterSheets ? <ThumbSide src={characterSheets(database.chars.LocationToCharacterKey(key), gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [database, gender, characterSheets])\r\n  const isFavorite = useCallback((key: LocationCharacterKey) => key === \"Traveler\" ?\r\n    travelerKeys.some(key => database.charMeta.get(key).favorite) :\r\n    key ? database.charMeta.get(key).favorite : false, [database])\r\n\r\n  const values: GeneralAutocompleteOption<LocationKey>[] = useMemo(() => [{\r\n    key: \"\",\r\n    label: t`artifact:filterLocation.inventory`,\r\n  },\r\n  ...Array.from(new Set(database.chars.keys.filter(k => characterSheets?.(k, gender) ? filter(characterSheets(k, gender)!) : true).map(k => charKeyToLocCharKey(k))))\r\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\r\n    .sort((a, b) => {\r\n      if (a.favorite && !b.favorite) return -1\r\n      if (!a.favorite && b.favorite) return 1\r\n      return a.label.localeCompare(b.label)\r\n    })\r\n  ], [t, toText, isFavorite, database, characterSheets, filter, gender])\r\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" options={values} valueKey={location} onChange={setLocation} toImg={toImg} clearKey=\"\" {...autoCompleteProps} /></Suspense>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { LocationKey } from \"../../Types/consts\";\r\n\r\nexport default function LocationName({ location }: { location: LocationKey }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = usePromise(() => CharacterSheet.get((location && database) ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender, database])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t<string>(\"inventory\")}</span>}\r\n  </Typography>\r\n\r\n}\r\n","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { Favorite } from \"@mui/icons-material\"\r\nimport { Autocomplete, AutocompleteProps, ListItemIcon, ListItemText, MenuItem, Skeleton } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport SolidColoredTextField from \"./SolidColoredTextfield\"\r\n\r\nexport type GeneralAutocompleteOption<T extends string> = { key: T, label: string, favorite?: boolean }\r\nexport default function GeneralAutocomplete<T extends string>({ options, valueKey: key, label, onChange, disable = () => false, clearKey, toImg, ...acProps }:\r\n  { valueKey: T, label?: string, onChange: (v: T) => void, toImg: (v: T) => JSX.Element, disable?: (v: T) => boolean, clearKey?: T } & Omit<AutocompleteProps<GeneralAutocompleteOption<T>, false, true, false>, \"renderInput\" | \"onChange\">) {\r\n  const value = options.find(o => o.key === key) ?? { key: \"\" as T, label: \"ERROR\" }\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={options}\r\n    value={value}\r\n    clearIcon={key !== clearKey ? undefined : null}\r\n    onChange={(event, newValue, reason) => {\r\n      if (reason === \"clear\" && clearKey !== undefined) return onChange(clearKey)\r\n      return newValue !== null && onChange(newValue.key)\r\n    }}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    renderInput={props => <SolidColoredTextField\r\n      {...props}\r\n      label={label}\r\n      startAdornment={value !== undefined ? toImg(value.key) : undefined}\r\n      hasValue={!!value?.key}\r\n    />}\r\n    renderOption={(props, option) => <MenuItem value={option.key} {...props}>\r\n      <ListItemIcon>{toImg(option.key)}</ListItemIcon>\r\n      <ListItemText>\r\n        <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n          {option.key === value?.key ? <strong>{option.label}</strong> : option.label}\r\n        </Suspense>\r\n      </ListItemText>\r\n      {!!option.favorite && <Favorite />}\r\n    </MenuItem>\r\n    }\r\n    {...acProps}\r\n  />\r\n}\r\n","import { TextField, TextFieldProps, useTheme } from \"@mui/material\";\r\n\r\ntype SolidColoredTextFieldProps = Omit<TextFieldProps, \"multiline\" | \"variant\" | \"color\" | \"hiddenLabel\" | \"type\" | \"InputLabelProps\"> & {\r\n  hasValue: boolean\r\n  startAdornment?: Displayable\r\n}\r\nexport default function SolidColoredTextField({ hasValue, startAdornment, InputProps, sx, ...props }: SolidColoredTextFieldProps) {\r\n  const theme = useTheme()\r\n  return <TextField\r\n    {...props}\r\n    variant=\"filled\"\r\n    color={hasValue ? \"success\" : \"primary\"}\r\n    hiddenLabel={props.label ? false : true}\r\n    type=\"search\"\r\n    InputProps={{\r\n      ...InputProps,\r\n      startAdornment,\r\n    }}\r\n    InputLabelProps={{ style: { color: theme.palette.text.primary } }}\r\n    sx={{\r\n      ...sx,\r\n      // Fill in the background without using the `focused` prop\r\n      \"& .MuiFilledInput-root\": { backgroundColor: hasValue ? theme.palette.success.main : theme.palette.primary.main, paddingTop: props.label ? undefined : 0, paddingBottom: 0, flexWrap: \"nowrap\", },\r\n      \"& .MuiFilledInput-root.Mui-focused\": { backgroundColor: hasValue ? theme.palette.success.light : theme.palette.primary.light },\r\n      \"& .MuiFilledInput-root:hover\": { backgroundColor: hasValue ? theme.palette.success.dark : theme.palette.primary.dark },\r\n      // Remove the colored bar at the bottom of the input\r\n      \"& .MuiFilledInput-root:before\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root.Mui-disabled:before\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root:after\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root:hover:not(.Mui-disabled):before\": { border: \"none\" },\r\n      // Remove the x at the end of search input for IE\r\n      \"& input[type=search]::-ms-clear\": { display: \"none\", width: 0, height: 0 },\r\n      \"& input[type=search]::-ms-reveal\": { display: \"none\", width: 0, height: 0 },\r\n      // Remove the x at the end of search input for Chrome\r\n      \"& input[type=search]::-webkit-search-decoration\": { display: \"none\" },\r\n      \"& input[type=search]::-webkit-search-cancel-button\": { display: \"none\" },\r\n      \"& input[type=search]::-webkit-search-results-button\": { display: \"none\" },\r\n      \"& input[type=search]::-webkit-search-results-decoration\": { display: \"none\" },\r\n    }}\r\n  />\r\n}\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton<Key extends string>({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: ButtonGroupProps & {\r\n  sortKeys: Key[]\r\n  value: Key\r\n  onChange: (value: Key) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\r\n    <ButtonGroup {...props} >\r\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n        {sortKeys.map(key =>\r\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n      </DropdownButton>\r\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n      </Button>\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Rarity } from '../Types/consts'\r\nimport ColorText from './ColoredText'\r\n\r\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <ColorText color={colored ? \"warning\" : undefined} >\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </ColorText>\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[]\r\n}\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport { nodeVStr } from \"../Formula/uiData\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { LocationKey } from \"../Types/consts\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n\r\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\r\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\r\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\r\n\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\r\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\r\n  const img = weaponSheet.getImg(ascension)\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\r\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\r\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\r\n            </Box>\r\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\r\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={img ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          {stats.map(node => {\r\n            if (!node.info.name) return null\r\n            return <Box key={JSON.stringify(node.info)} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{node.info.icon} {node.info.name}</Typography>\r\n              <Typography>{nodeVStr(node)}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {canEquip\r\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key, disableClearable: true }} />\r\n            : <LocationName location={location} />}\r\n        </Box>\r\n        <ButtonGroup sx={{ height: \"100%\" }}>\r\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" onClick={() => onEdit(id)} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\n","import { Add } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Grid, Pagination, Skeleton, TextField, ToggleButton, Typography } from '@mui/material';\r\nimport React, { ChangeEvent, lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useRef, useState } from 'react';\r\nimport ReactGA from 'react-ga4';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport SolidToggleButtonGroup from '../Components/SolidToggleButtonGroup';\r\nimport SortByButton from '../Components/SortByButton';\r\nimport { StarsDisplay } from '../Components/StarDisplay';\r\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\r\nimport WeaponSheet from '../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport useMediaQueryUp from '../ReactHooks/useMediaQueryUp';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allRarities, WeaponKey } from '../Types/consts';\r\nimport { handleMultiSelect } from '../Util/MultiSelect';\r\nimport { filterFunction, sortFunction } from '../Util/SortByFilters';\r\nimport { clamp } from '../Util/Util';\r\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../Util/WeaponSort';\r\nimport { initialWeapon } from '../Util/WeaponUtil';\r\nimport WeaponCard from './WeaponCard';\r\nconst WeaponSelectionModal = React.lazy(() => import('../Components/Weapon/WeaponSelectionModal'))\r\n// Lazy load the weapon display\r\nconst WeaponEditor = lazy(() => import('./WeaponEditor'))\r\n\r\nconst columns = { xs: 1, sm: 2, md: 3, lg: 3, xl: 4 }\r\nconst numToShowMap = { xs: 10, sm: 12, md: 24, lg: 24, xl: 24 }\r\n\r\nconst sortKeys = Object.keys(weaponSortMap)\r\nconst rarityHandler = handleMultiSelect([...allRarities])\r\nexport default function PageWeapon() {\r\n  const { t } = useTranslation([\"page_weapon\", \"ui\", \"weaponNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const [state, setState] = useState(database.displayWeapon.get())\r\n  useEffect(() => database.displayWeapon.follow((r, dbMeta) => setState(dbMeta)), [database])\r\n\r\n  const [newWeaponModalShow, setnewWeaponModalShow] = useState(false)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const invScrollRef = useRef<HTMLDivElement>(null)\r\n  const [pageIndex, setPageIndex] = useState(0)\r\n  //set follow, should run only once\r\n  useEffect(() => {\r\n    ReactGA.send({ hitType: \"pageview\", page: '/weapon' })\r\n    return database.weapons.followAny((k, r) => (r === \"new\" || r === \"remove\") && forceUpdate())\r\n  }, [forceUpdate, database])\r\n\r\n  const brPt = useMediaQueryUp()\r\n  const maxNumToDisplay = numToShowMap[brPt]\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n\r\n  const deleteWeapon = useCallback(async (key: string) => {\r\n    const weapon = database.weapons.get(key)\r\n    if (!weapon) return\r\n    const name = t(`weaponNames_gen:${weapon.key}`)\r\n\r\n    if (!window.confirm(t(\"removeWeapon\", { value: name }))) return\r\n    database.weapons.remove(key)\r\n    if (state.editWeaponId === key)\r\n      database.displayWeapon.set({ editWeaponId: \"\" })\r\n  }, [state.editWeaponId, database, t])\r\n\r\n  const editWeapon = useCallback((key: string | undefined) => {\r\n    database.displayWeapon.set({ editWeaponId: key })\r\n  }, [database])\r\n\r\n  const newWeapon = useCallback(\r\n    (weaponKey: WeaponKey) => {\r\n      editWeapon(database.weapons.new(initialWeapon(weaponKey)))\r\n    },\r\n    [database, editWeapon])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const { sortType, ascending, weaponType, rarity } = state\r\n  const { weaponIdList, totalWeaponNum } = useMemo(() => {\r\n    const weapons = database.weapons.values\r\n    const totalWeaponNum = weapons.length\r\n    if (!weaponSheets) return { weaponIdList: [], totalWeaponNum }\r\n    const weaponIdList = weapons\r\n      .filter(filterFunction({ weaponType, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\r\n      .sort(sortFunction(weaponSortMap[sortType] ?? [], ascending, weaponSortConfigs(weaponSheets)))\r\n      .map(weapon => weapon.id)\r\n    return dbDirty && { weaponIdList, totalWeaponNum }\r\n  }, [dbDirty, database, weaponSheets, sortType, ascending, rarity, weaponType, deferredSearchTerm])\r\n\r\n  const { weaponIdsToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(weaponIdList.length / maxNumToDisplay)\r\n    const currentPageIndex = clamp(pageIndex, 0, numPages - 1)\r\n    return { weaponIdsToShow: weaponIdList.slice(currentPageIndex * maxNumToDisplay, (currentPageIndex + 1) * maxNumToDisplay), numPages, currentPageIndex }\r\n  }, [weaponIdList, pageIndex, maxNumToDisplay])\r\n\r\n  // Pagination\r\n  const totalShowing = weaponIdList.length !== totalWeaponNum ? `${weaponIdList.length}/${totalWeaponNum}` : `${totalWeaponNum}`\r\n  const setPage = useCallback(\r\n    (_: ChangeEvent<unknown>, value: number) => {\r\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n      setPageIndex(value - 1);\r\n    },\r\n    [setPageIndex, invScrollRef]\r\n  )\r\n\r\n  const resetEditWeapon = useCallback(() => database.displayWeapon.set({ editWeaponId: \"\" }), [database])\r\n\r\n  const { editWeaponId } = state\r\n\r\n  // Validate weaponId to be an actual weapon\r\n  useEffect(() => {\r\n    if (!editWeaponId) return\r\n    if (!database.weapons.get(editWeaponId))\r\n      resetEditWeapon()\r\n  }, [database, editWeaponId, resetEditWeapon])\r\n\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <Suspense fallback={false}>\r\n      <WeaponSelectionModal show={newWeaponModalShow} onHide={() => setnewWeaponModalShow(false)} onSelect={newWeapon} />\r\n    </Suspense>\r\n    {/* Editor/character detail display */}\r\n    <Suspense fallback={false}>\r\n      <WeaponEditor\r\n        weaponId={editWeaponId}\r\n        footer\r\n        onClose={resetEditWeapon}\r\n      />\r\n    </Suspense>\r\n\r\n    <CardDark ref={invScrollRef}><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => database.displayWeapon.set({ weaponType })} value={weaponType} size=\"small\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\r\n            {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => database.displayWeapon.set({ rarity: rarityHandler(rarity, star) })}><Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box></ToggleButton>)}\r\n          </SolidToggleButtonGroup>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <TextField\r\n            autoFocus\r\n            size=\"small\"\r\n            value={searchTerm}\r\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n            label={t(\"weaponName\")}\r\n            sx={{ height: \"100%\" }}\r\n            InputProps={{\r\n              sx: { height: \"100%\" }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <SortByButton sx={{ height: \"100%\" }} sortKeys={sortKeys}\r\n            value={sortType} onChange={sortType => database.displayWeapon.set({ sortType })}\r\n            ascending={ascending} onChangeAsc={ascending => database.displayWeapon.set({ ascending })}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item flexGrow={1}>\r\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <ShowingWeapon numShowing={weaponIdsToShow.length} total={totalShowing} t={t} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent></CardDark>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 500 }} />}>\r\n      <Button fullWidth onClick={() => setnewWeaponModalShow(true)} color=\"info\" startIcon={<Add />} >{t(\"page_weapon:addWeapon\")}</Button>\r\n      <Grid container spacing={1} columns={columns}>\r\n        {weaponIdsToShow.map(weaponId =>\r\n          <Grid item key={weaponId} xs={1} >\r\n            <WeaponCard\r\n              weaponId={weaponId}\r\n              onDelete={deleteWeapon}\r\n              onEdit={editWeapon}\r\n              canEquip\r\n            />\r\n          </Grid>)}\r\n      </Grid>\r\n    </Suspense>\r\n    {numPages > 1 && <CardDark><CardContent>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item flexGrow={1}>\r\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <ShowingWeapon numShowing={weaponIdsToShow.length} total={totalShowing} t={t} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent></CardDark>}\r\n  </Box>\r\n}\r\nfunction ShowingWeapon({ numShowing, total, t }) {\r\n  return <Typography color=\"text.secondary\">\r\n    <Trans t={t} i18nKey=\"showingNum\" count={numShowing} value={total} >\r\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Weapons\r\n    </Trans>\r\n  </Typography>\r\n}\r\n","import { useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nexport default function useMediaQueryUp() {\r\n  const theme = useTheme();\r\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n  if (xl) return \"xl\"\r\n  if (lg) return \"lg\"\r\n  if (md) return \"md\"\r\n  if (sm) return \"sm\"\r\n  return \"xs\"\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n","type SortConfig<T> = (id: T) => number | string\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortbyKeys: Keys[], ascending: boolean, configs: SortConfigs<Keys, T>, ascendingBypass: Keys[] = []) {\r\n  return (a: T, b: T): number => {\r\n    for (const sortby of sortbyKeys) {\r\n      let diff = 0\r\n      const config = configs[sortby]\r\n      const aV = config(a)\r\n      const bV = config(b)\r\n      if (typeof aV === \"string\" && typeof bV === \"string\") diff = aV.localeCompare(bV)\r\n      else diff = ((bV as number) - (aV as number))\r\n      if (diff !== 0) return ascendingBypass.includes(sortby) ? diff : (ascending ? -1 : 1) * diff\r\n    }\r\n    return 0\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Partial<Record<Keys, any>>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\r\n}\r\n"],"names":["LocationAutocomplete","location","setLocation","filter","autoCompleteProps","t","useTranslation","database","useContext","DatabaseContext","gender","useDBMeta","characterSheets","usePromise","CharacterSheet","toText","useCallback","key","charKeyToCharName","chars","LocationToCharacterKey","toImg","src","thumbImgSide","sx","pr","isFavorite","travelerKeys","charMeta","get","favorite","values","useMemo","label","Array","from","Set","keys","k","map","charKeyToLocCharKey","v","sort","a","b","localeCompare","Suspense","fallback","variant","width","size","options","valueKey","onChange","clearKey","LocationName","characterSheet","component","name","nameWIthIcon","verticalAlign","ThumbSide","styled","theme","display","height","lineHeight","marginTop","spacing","marginLeft","marginRight","marginBottom","ConditionalWrapper","condition","wrapper","falseWrapper","children","GeneralAutocomplete","disable","acProps","value","find","o","autoHighlight","clearIcon","undefined","event","newValue","reason","isOptionEqualToValue","option","renderInput","props","startAdornment","hasValue","renderOption","SolidColoredTextField","InputProps","useTheme","color","hiddenLabel","type","InputLabelProps","style","palette","text","primary","backgroundColor","success","main","paddingTop","paddingBottom","flexWrap","light","dark","border","SortByButton","sortKeys","ascending","onChangeAsc","alignItems","gap","i18nKey","title","selected","disabled","onClick","startIcon","icon","faSortAmountDownAlt","faSortAmountUp","className","StarIcon","faStar","StarsDisplay","stars","colored","_","i","weaponTypeHandler","handleMultiSelect","allWeaponTypeKeys","WeaponToggle","exclusive","wt","Assets","WeaponCard","weaponId","onEdit","onDelete","canEquip","extraButtons","weapon","useWeapon","weaponSheet","WeaponSheet","cs","weaponTypeKey","weaponType","wrapperFunc","falseWrapperFunc","weapons","set","UIData","computeUIData","data","dataObjForWeapon","level","ascension","refinement","id","lock","input","stats","x","img","getImg","minHeight","flexDirection","justifyContent","rarity","position","pt","px","right","bottom","zIndex","mb","fontSize","noWrap","textAlign","borderRadius","ascensionMaxLevel","top","float","node","info","flexGrow","nodeVStr","JSON","stringify","p","getOptionDisabled","disableClearable","placement","arrow","faEdit","faTrashAlt","WeaponSelectionModal","React","WeaponEditor","lazy","columns","xs","sm","md","lg","xl","numToShowMap","Object","weaponSortMap","rarityHandler","allRarities","PageWeapon","useState","displayWeapon","state","setState","useEffect","follow","r","dbMeta","newWeaponModalShow","setnewWeaponModalShow","useForceUpdate","dbDirty","forceUpdate","invScrollRef","useRef","pageIndex","setPageIndex","ReactGA","hitType","page","followAny","brPt","useMediaQueryUp","maxNumToDisplay","weaponSheets","deleteWeapon","window","confirm","remove","editWeaponId","editWeapon","newWeapon","weaponKey","new","initialWeapon","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","sortType","totalWeaponNum","length","weaponIdList","filterFunction","weaponFilterConfigs","sortFunction","weaponSortConfigs","numPages","Math","ceil","currentPageIndex","clamp","weaponIdsToShow","slice","totalShowing","setPage","current","scrollIntoView","behavior","resetEditWeapon","my","show","onHide","onSelect","footer","onClose","ref","container","item","star","autoFocus","e","target","count","ShowingWeapon","numShowing","total","fullWidth","useMediaQuery","breakpoints","up","weaponID","setWeapon","allKeys","arr","len","toggleArr","sortbyKeys","configs","ascendingBypass","sortby","diff","config","aV","bV","includes","filterOptions","filterConfigs","obj","entries","every","optionKey","optionVal"],"sourceRoot":""}